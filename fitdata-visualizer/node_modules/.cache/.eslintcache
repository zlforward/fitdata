[{"D:\\source\\fitdata\\fitdata-visualizer\\src\\index.tsx":"1","D:\\source\\fitdata\\fitdata-visualizer\\src\\App.tsx":"2","D:\\source\\fitdata\\fitdata-visualizer\\src\\components\\FileUpload.tsx":"3","D:\\source\\fitdata\\fitdata-visualizer\\src\\components\\DataVisualization.tsx":"4","D:\\source\\fitdata\\fitdata-visualizer\\src\\utils\\dataParser.ts":"5","D:\\source\\fitdata\\fitdata-visualizer\\src\\components\\CurveFittingVisualization.tsx":"6","D:\\source\\fitdata\\fitdata-visualizer\\src\\utils\\curveFitting.ts":"7","D:\\source\\fitdata\\fitdata-visualizer\\src\\components\\PixelHeatmap.tsx":"8","D:\\source\\fitdata\\fitdata-visualizer\\src\\components\\TargetDataPrediction.tsx":"9"},{"size":272,"mtime":1756200104683,"results":"10","hashOfConfig":"11"},{"size":10440,"mtime":1756261683957,"results":"12","hashOfConfig":"11"},{"size":9734,"mtime":1756200104678,"results":"13","hashOfConfig":"11"},{"size":23211,"mtime":1756200104678,"results":"14","hashOfConfig":"11"},{"size":4711,"mtime":1756200104683,"results":"15","hashOfConfig":"11"},{"size":20158,"mtime":1756261965408,"results":"16","hashOfConfig":"11"},{"size":12282,"mtime":1756200104683,"results":"17","hashOfConfig":"11"},{"size":31513,"mtime":1756261921934,"results":"18","hashOfConfig":"11"},{"size":36307,"mtime":1756261940063,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k8azw1",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\source\\fitdata\\fitdata-visualizer\\src\\index.tsx",[],[],"D:\\source\\fitdata\\fitdata-visualizer\\src\\App.tsx",[],[],"D:\\source\\fitdata\\fitdata-visualizer\\src\\components\\FileUpload.tsx",[],[],"D:\\source\\fitdata\\fitdata-visualizer\\src\\components\\DataVisualization.tsx",[],[],"D:\\source\\fitdata\\fitdata-visualizer\\src\\utils\\dataParser.ts",[],[],"D:\\source\\fitdata\\fitdata-visualizer\\src\\components\\CurveFittingVisualization.tsx",[],[],"D:\\source\\fitdata\\fitdata-visualizer\\src\\utils\\curveFitting.ts",[],[],"D:\\source\\fitdata\\fitdata-visualizer\\src\\components\\PixelHeatmap.tsx",[],[],"D:\\source\\fitdata\\fitdata-visualizer\\src\\components\\TargetDataPrediction.tsx",["47","48","49"],[],{"ruleId":"50","severity":1,"message":"51","line":69,"column":9,"nodeType":"52","endLine":78,"endColumn":4,"suggestions":"53"},{"ruleId":"50","severity":1,"message":"54","line":193,"column":6,"nodeType":"55","endLine":193,"endColumn":8,"suggestions":"56"},{"ruleId":"50","severity":1,"message":"57","line":466,"column":6,"nodeType":"55","endLine":466,"endColumn":105,"suggestions":"58"},"react-hooks/exhaustive-deps","The 'getTypeLabel' function makes the dependencies of useMemo Hook (at line 304) change on every render. To fix this, wrap the definition of 'getTypeLabel' in its own useCallback() Hook.","VariableDeclarator",["59"],"React Hook useCallback has a missing dependency: 'generatePredictions'. Either include it or remove the dependency array.","ArrayExpression",["60"],"React Hook useCallback has an unnecessary dependency: 'getTypeLabel'. Either exclude it or remove the dependency array.",["61"],{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},"Wrap the definition of 'getTypeLabel' in its own useCallback() Hook.",{"range":"68","text":"69"},"Update the dependencies array to be: [generatePredictions]",{"range":"70","text":"71"},"Update the dependencies array to be: [rawData, grayScaleData, brightnessBlocks, localGrayScaleData, localBrightnessBlocks]",{"range":"72","text":"73"},[2288,2541],"useCallback((type: string) => {\n    const labels: { [key: string]: string } = {\n      'logarithmic': '对数拟合',\n      'exponential': '指数拟合',\n      'polynomial': '三次多项式拟合',\n      'power': '幂函数拟合',\n      'bivariate': '二次多项式拟合'\n    };\n    return labels[type] || type;\n  })",[5857,5859],"[generatePredictions]",[14908,15007],"[rawData, grayScaleData, brightnessBlocks, localGrayScaleData, localBrightnessBlocks]"]