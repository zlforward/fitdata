{"ast":null,"code":"var _jsxFileName = \"D:\\\\source\\\\fitdata\\\\fitdata-visualizer\\\\src\\\\components\\\\TargetDataPrediction.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport * as XLSX from 'xlsx';\nimport { performAllFittings } from '../utils/curveFitting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TargetDataPrediction = ({\n  grayScaleData,\n  brightnessBlocks\n}) => {\n  _s();\n  const [targetData, setTargetData] = useState(null);\n  const [predictionResults, setPredictionResults] = useState([]);\n  const [bestFittingResult, setBestFittingResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // 读取Excel Sheet3数据\n  const handleFileUpload = useCallback(event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setIsLoading(true);\n    setError(null);\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        var _e$target;\n        const data = new Uint8Array((_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.result);\n        const workbook = XLSX.read(data, {\n          type: 'array'\n        });\n\n        // 检查是否有Sheet3\n        if (!workbook.SheetNames.includes('Sheet3')) {\n          throw new Error('未找到Sheet3工作表');\n        }\n        const worksheet = workbook.Sheets['Sheet3'];\n        const values = [];\n        const positions = [];\n\n        // 读取A2-AF21范围的目标数据（20行×32列）\n        const startRow = 2;\n        const endRow = 21;\n        const startCol = 'A';\n        const endCol = 'AF';\n\n        // 将列字母转换为数字\n        const colToNum = col => {\n          let result = 0;\n          for (let i = 0; i < col.length; i++) {\n            result = result * 26 + (col.charCodeAt(i) - 'A'.charCodeAt(0) + 1);\n          }\n          return result;\n        };\n        const numToCol = num => {\n          let result = '';\n          while (num > 0) {\n            num--;\n            result = String.fromCharCode('A'.charCodeAt(0) + num % 26) + result;\n            num = Math.floor(num / 26);\n          }\n          return result;\n        };\n        const startColNum = colToNum(startCol);\n        const endColNum = colToNum(endCol);\n\n        // 按行读取数据\n        for (let row = startRow; row <= endRow; row++) {\n          for (let colNum = startColNum; colNum <= endColNum; colNum++) {\n            const col = numToCol(colNum);\n            const cellAddress = `${col}${row}`;\n            const cell = worksheet[cellAddress];\n            if (cell && cell.v !== undefined && cell.v !== null && cell.v !== '') {\n              const value = typeof cell.v === 'number' ? cell.v : parseFloat(cell.v.toString());\n              if (!isNaN(value)) {\n                values.push(value);\n                positions.push(cellAddress);\n              }\n            }\n          }\n        }\n        if (values.length === 0) {\n          throw new Error('Sheet3中未找到有效的目标数据');\n        }\n        setTargetData({\n          values,\n          positions\n        });\n      } catch (error) {\n        setError(error instanceof Error ? error.message : '文件读取失败');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    reader.onerror = () => {\n      setError('文件读取失败');\n      setIsLoading(false);\n    };\n    reader.readAsArrayBuffer(file);\n  }, []);\n\n  // 获取最佳拟合结果\n  const getBestFittingResult = useCallback(() => {\n    if (!grayScaleData.values.length || !brightnessBlocks.length) {\n      return null;\n    }\n\n    // 提取中心像素值和灰阶值\n    const centerPixelValues = brightnessBlocks.map(block => block.centerPixelValue);\n    const grayScaleValues = grayScaleData.values;\n    if (centerPixelValues.length !== grayScaleValues.length) {\n      return null;\n    }\n\n    // 执行所有拟合算法\n    const fittingResults = performAllFittings({\n      x: centerPixelValues,\n      y: grayScaleValues\n    });\n\n    // 找到R²值最高的拟合结果\n    const bestResult = fittingResults.reduce((best, current) => {\n      if (isNaN(current.rSquared) || current.rSquared < 0) return best;\n      if (!best || current.rSquared > best.rSquared) return current;\n      return best;\n    }, null);\n    return bestResult;\n  }, [grayScaleData, brightnessBlocks]);\n\n  // 生成预测结果\n  const generatePredictions = useCallback(() => {\n    if (!targetData) {\n      setError('请先上传目标数据');\n      return;\n    }\n    const bestFitting = getBestFittingResult();\n    if (!bestFitting) {\n      setError('无法获取有效的拟合结果');\n      return;\n    }\n    setBestFittingResult(bestFitting);\n    const predictions = targetData.values.map((targetValue, index) => {\n      let predictedGrayScale = 0;\n\n      // 根据拟合类型计算预测值\n      switch (bestFitting.type) {\n        case 'logarithmic':\n          if (targetValue > 0) {\n            const [a, b] = bestFitting.coefficients;\n            predictedGrayScale = a * Math.log(targetValue) + b;\n          }\n          break;\n        case 'exponential':\n          const [a_exp, b_exp] = bestFitting.coefficients;\n          predictedGrayScale = a_exp * Math.exp(b_exp * targetValue);\n          break;\n        case 'polynomial':\n          const [a_poly, b_poly, c_poly, d_poly] = bestFitting.coefficients;\n          predictedGrayScale = a_poly * Math.pow(targetValue, 3) + b_poly * Math.pow(targetValue, 2) + c_poly * targetValue + d_poly;\n          break;\n        case 'power':\n          if (targetValue > 0) {\n            const [a_pow, b_pow] = bestFitting.coefficients;\n            predictedGrayScale = a_pow * Math.pow(targetValue, b_pow);\n          }\n          break;\n        case 'bivariate':\n          const [a_biv, b_biv, c_biv] = bestFitting.coefficients;\n          predictedGrayScale = a_biv * Math.pow(targetValue, 2) + b_biv * targetValue + c_biv;\n          break;\n      }\n      return {\n        targetValue,\n        position: targetData.positions[index],\n        predictedGrayScale,\n        bestFittingType: bestFitting.type,\n        confidence: bestFitting.rSquared\n      };\n    });\n    setPredictionResults(predictions);\n    setError(null);\n  }, [targetData, getBestFittingResult]);\n\n  // 导出预测结果到Excel\n  const exportToExcel = useCallback(() => {\n    if (predictionResults.length === 0) {\n      setError('没有预测结果可导出');\n      return;\n    }\n    const workbook = XLSX.utils.book_new();\n\n    // 创建预测结果工作表\n    const wsData = [['位置', '目标数据值', '预测灰阶值', '拟合类型', '置信度(R²)'], ...predictionResults.map(result => [result.position, result.targetValue, result.predictedGrayScale.toFixed(6), getTypeLabel(result.bestFittingType), result.confidence.toFixed(6)])];\n    const worksheet = XLSX.utils.aoa_to_sheet(wsData);\n    XLSX.utils.book_append_sheet(workbook, worksheet, '预测结果');\n\n    // 添加拟合信息工作表\n    if (bestFittingResult) {\n      const fittingInfo = [['拟合信息', ''], ['拟合类型', getTypeLabel(bestFittingResult.type)], ['拟合公式', bestFittingResult.formula], ['R²值', bestFittingResult.rSquared.toFixed(6)], ['RMSE', bestFittingResult.rmse.toFixed(6)], ['MAE', bestFittingResult.mae.toFixed(6)], ['最大误差', bestFittingResult.maxError.toFixed(6)]];\n      const fittingWs = XLSX.utils.aoa_to_sheet(fittingInfo);\n      XLSX.utils.book_append_sheet(workbook, fittingWs, '拟合信息');\n    }\n\n    // 下载文件\n    const fileName = `目标数据预测结果_${new Date().toISOString().slice(0, 10)}.xlsx`;\n    XLSX.writeFile(workbook, fileName);\n  }, [predictionResults, bestFittingResult]);\n\n  // 获取拟合类型标签\n  const getTypeLabel = type => {\n    const labels = {\n      'logarithmic': '对数拟合',\n      'exponential': '指数拟合',\n      'polynomial': '三次多项式拟合',\n      'power': '幂函数拟合',\n      'bivariate': '二次多项式拟合'\n    };\n    return labels[type] || type;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-lg p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold mb-6\",\n      children: \"\\u76EE\\u6807\\u6570\\u636E\\u9884\\u6D4B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-3\",\n        children: \"\\u4E0A\\u4F20\\u76EE\\u6807\\u6570\\u636E\\u6587\\u4EF6 (Sheet3)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".xlsx,.xls\",\n          onChange: handleFileUpload,\n          className: \"hidden\",\n          id: \"target-file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"target-file-upload\",\n          className: \"cursor-pointer inline-flex items-center px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\",\n          children: \"\\u9009\\u62E9Excel\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-sm text-gray-500\",\n          children: \"\\u8BF7\\u9009\\u62E9\\u5305\\u542BSheet3\\u5DE5\\u4F5C\\u8868\\u7684Excel\\u6587\\u4EF6\\uFF0C\\u76EE\\u6807\\u6570\\u636E\\u5E94\\u4F4D\\u4E8EB\\u5217\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-blue-700\",\n        children: \"\\u6B63\\u5728\\u8BFB\\u53D6\\u6587\\u4EF6...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-700\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }, this), targetData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-gray-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-2\",\n        children: \"\\u76EE\\u6807\\u6570\\u636E\\u6982\\u89C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u6570\\u636E\\u70B9\\u6570\\u91CF\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: targetData.values.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u6570\\u503C\\u8303\\u56F4\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: [Math.min(...targetData.values).toFixed(2), \" - \", Math.max(...targetData.values).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }, this), targetData && grayScaleData.values.length > 0 && brightnessBlocks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generatePredictions,\n        className: \"px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\",\n        children: \"\\u751F\\u6210\\u9884\\u6D4B\\u7ED3\\u679C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }, this), bestFittingResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-blue-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-2\",\n        children: \"\\u4F7F\\u7528\\u7684\\u6700\\u4F73\\u62DF\\u5408\\u6A21\\u578B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u62DF\\u5408\\u7C7B\\u578B\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: getTypeLabel(bestFittingResult.type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"R\\xB2\\u503C\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: bestFittingResult.rSquared.toFixed(6)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u62DF\\u5408\\u516C\\u5F0F\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium font-mono\",\n            children: bestFittingResult.formula\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 9\n    }, this), predictionResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium\",\n          children: \"\\u9884\\u6D4B\\u7ED3\\u679C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportToExcel,\n          className: \"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm\",\n          children: \"\\u5BFC\\u51FA\\u5230Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full text-sm border-collapse border border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-200 px-3 py-2 text-left\",\n                children: \"\\u4F4D\\u7F6E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-200 px-3 py-2 text-left\",\n                children: \"\\u76EE\\u6807\\u6570\\u636E\\u503C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-200 px-3 py-2 text-left\",\n                children: \"\\u9884\\u6D4B\\u7070\\u9636\\u503C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-200 px-3 py-2 text-left\",\n                children: \"\\u62DF\\u5408\\u7C7B\\u578B\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border border-gray-200 px-3 py-2 text-left\",\n                children: \"\\u7F6E\\u4FE1\\u5EA6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: predictionResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: index % 2 === 0 ? 'bg-white' : 'bg-gray-50',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-200 px-3 py-2 font-mono\",\n                children: result.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-200 px-3 py-2\",\n                children: result.targetValue.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-200 px-3 py-2 font-medium\",\n                children: result.predictedGrayScale.toFixed(6)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-200 px-3 py-2\",\n                children: getTypeLabel(result.bestFittingType)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border border-gray-200 px-3 py-2\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `px-2 py-1 rounded-full text-xs ${result.confidence > 0.9 ? 'bg-green-100 text-green-800' : result.confidence > 0.7 ? 'bg-yellow-100 text-yellow-800' : 'bg-red-100 text-red-800'}`,\n                  children: result.confidence.toFixed(4)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-4 bg-gray-50 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"font-medium mb-2\",\n          children: \"\\u9884\\u6D4B\\u7EDF\\u8BA1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-4 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: \"\\u9884\\u6D4B\\u6570\\u636E\\u70B9\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: predictionResults.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: \"\\u5E73\\u5747\\u9884\\u6D4B\\u503C\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: (predictionResults.reduce((sum, r) => sum + r.predictedGrayScale, 0) / predictionResults.length).toFixed(4)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: \"\\u9884\\u6D4B\\u8303\\u56F4\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: [Math.min(...predictionResults.map(r => r.predictedGrayScale)).toFixed(4), \" -\", Math.max(...predictionResults.map(r => r.predictedGrayScale)).toFixed(4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }, this), !targetData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-2 text-yellow-800\",\n        children: \"\\u4F7F\\u7528\\u8BF4\\u660E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"text-sm text-yellow-700 space-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"1. \\u9996\\u5148\\u786E\\u4FDD\\u5DF2\\u4E0A\\u4F20\\u5E76\\u5904\\u7406\\u4E86\\u539F\\u59CB\\u6570\\u636E\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"2. \\u4E0A\\u4F20\\u5305\\u542BSheet3\\u5DE5\\u4F5C\\u8868\\u7684Excel\\u6587\\u4EF6\\uFF0C\\u76EE\\u6807\\u6570\\u636E\\u5E94\\u4F4D\\u4E8EB\\u5217\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"3. \\u7CFB\\u7EDF\\u5C06\\u81EA\\u52A8\\u9009\\u62E9\\u6700\\u4F73\\u62DF\\u5408\\u6A21\\u578B\\u8FDB\\u884C\\u9884\\u6D4B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"4. \\u751F\\u6210\\u9884\\u6D4B\\u7ED3\\u679C\\u540E\\u53EF\\u5BFC\\u51FA\\u5230Excel\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(TargetDataPrediction, \"G/zmSAQlZir2VFw+YYJiGYtZVl4=\");\n_c = TargetDataPrediction;\nexport default TargetDataPrediction;\nvar _c;\n$RefreshReg$(_c, \"TargetDataPrediction\");","map":{"version":3,"names":["React","useState","useCallback","XLSX","performAllFittings","jsxDEV","_jsxDEV","TargetDataPrediction","grayScaleData","brightnessBlocks","_s","targetData","setTargetData","predictionResults","setPredictionResults","bestFittingResult","setBestFittingResult","isLoading","setIsLoading","error","setError","handleFileUpload","event","_event$target$files","file","target","files","reader","FileReader","onload","e","_e$target","data","Uint8Array","result","workbook","read","type","SheetNames","includes","Error","worksheet","Sheets","values","positions","startRow","endRow","startCol","endCol","colToNum","col","i","length","charCodeAt","numToCol","num","String","fromCharCode","Math","floor","startColNum","endColNum","row","colNum","cellAddress","cell","v","undefined","value","parseFloat","toString","isNaN","push","message","onerror","readAsArrayBuffer","getBestFittingResult","centerPixelValues","map","block","centerPixelValue","grayScaleValues","fittingResults","x","y","bestResult","reduce","best","current","rSquared","generatePredictions","bestFitting","predictions","targetValue","index","predictedGrayScale","a","b","coefficients","log","a_exp","b_exp","exp","a_poly","b_poly","c_poly","d_poly","pow","a_pow","b_pow","a_biv","b_biv","c_biv","position","bestFittingType","confidence","exportToExcel","utils","book_new","wsData","toFixed","getTypeLabel","aoa_to_sheet","book_append_sheet","fittingInfo","formula","rmse","mae","maxError","fittingWs","fileName","Date","toISOString","slice","writeFile","labels","className","children","_jsxFileName","lineNumber","columnNumber","accept","onChange","id","htmlFor","min","max","onClick","sum","r","_c","$RefreshReg$"],"sources":["D:/source/fitdata/fitdata-visualizer/src/components/TargetDataPrediction.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport * as XLSX from 'xlsx';\nimport { FittingResult, performAllFittings } from '../utils/curveFitting';\nimport { ParsedData } from '../utils/dataParser';\n\ninterface TargetData {\n  values: number[];\n  positions: string[];\n}\n\ninterface PredictionResult {\n  targetValue: number;\n  position: string;\n  predictedGrayScale: number;\n  bestFittingType: string;\n  confidence: number;\n}\n\ninterface TargetDataPredictionProps {\n  grayScaleData: {\n    values: number[];\n    positions: string[];\n  };\n  brightnessBlocks: Array<{\n    label: string;\n    startRow: number;\n    endRow: number;\n    data: number[][];\n    centerPixelValue: number;\n    normalizedData?: number[][];\n  }>;\n}\n\nconst TargetDataPrediction: React.FC<TargetDataPredictionProps> = ({ grayScaleData, brightnessBlocks }) => {\n  const [targetData, setTargetData] = useState<TargetData | null>(null);\n  const [predictionResults, setPredictionResults] = useState<PredictionResult[]>([]);\n  const [bestFittingResult, setBestFittingResult] = useState<FittingResult | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // 读取Excel Sheet3数据\n  const handleFileUpload = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const data = new Uint8Array(e.target?.result as ArrayBuffer);\n        const workbook = XLSX.read(data, { type: 'array' });\n        \n        // 检查是否有Sheet3\n        if (!workbook.SheetNames.includes('Sheet3')) {\n          throw new Error('未找到Sheet3工作表');\n        }\n        \n        const worksheet = workbook.Sheets['Sheet3'];\n        const values: number[] = [];\n        const positions: string[] = [];\n        \n        // 读取A2-AF21范围的目标数据（20行×32列）\n        const startRow = 2;\n        const endRow = 21;\n        const startCol = 'A';\n        const endCol = 'AF';\n        \n        // 将列字母转换为数字\n        const colToNum = (col: string): number => {\n          let result = 0;\n          for (let i = 0; i < col.length; i++) {\n            result = result * 26 + (col.charCodeAt(i) - 'A'.charCodeAt(0) + 1);\n          }\n          return result;\n        };\n        \n        const numToCol = (num: number): string => {\n          let result = '';\n          while (num > 0) {\n            num--;\n            result = String.fromCharCode('A'.charCodeAt(0) + (num % 26)) + result;\n            num = Math.floor(num / 26);\n          }\n          return result;\n        };\n        \n        const startColNum = colToNum(startCol);\n        const endColNum = colToNum(endCol);\n        \n        // 按行读取数据\n        for (let row = startRow; row <= endRow; row++) {\n          for (let colNum = startColNum; colNum <= endColNum; colNum++) {\n            const col = numToCol(colNum);\n            const cellAddress = `${col}${row}`;\n            const cell = worksheet[cellAddress];\n            \n            if (cell && cell.v !== undefined && cell.v !== null && cell.v !== '') {\n              const value = typeof cell.v === 'number' ? cell.v : parseFloat(cell.v.toString());\n              if (!isNaN(value)) {\n                values.push(value);\n                positions.push(cellAddress);\n              }\n            }\n          }\n        }\n        \n        if (values.length === 0) {\n          throw new Error('Sheet3中未找到有效的目标数据');\n        }\n        \n        setTargetData({ values, positions });\n      } catch (error) {\n        setError(error instanceof Error ? error.message : '文件读取失败');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    reader.onerror = () => {\n      setError('文件读取失败');\n      setIsLoading(false);\n    };\n    \n    reader.readAsArrayBuffer(file);\n  }, []);\n\n  // 获取最佳拟合结果\n  const getBestFittingResult = useCallback((): FittingResult | null => {\n    if (!grayScaleData.values.length || !brightnessBlocks.length) {\n      return null;\n    }\n\n    // 提取中心像素值和灰阶值\n    const centerPixelValues = brightnessBlocks.map(block => block.centerPixelValue);\n    const grayScaleValues = grayScaleData.values;\n\n    if (centerPixelValues.length !== grayScaleValues.length) {\n      return null;\n    }\n\n    // 执行所有拟合算法\n    const fittingResults = performAllFittings({\n      x: centerPixelValues,\n      y: grayScaleValues\n    });\n\n    // 找到R²值最高的拟合结果\n    const bestResult = fittingResults.reduce((best, current) => {\n      if (isNaN(current.rSquared) || current.rSquared < 0) return best;\n      if (!best || current.rSquared > best.rSquared) return current;\n      return best;\n    }, null as FittingResult | null);\n\n    return bestResult;\n  }, [grayScaleData, brightnessBlocks]);\n\n  // 生成预测结果\n  const generatePredictions = useCallback(() => {\n    if (!targetData) {\n      setError('请先上传目标数据');\n      return;\n    }\n\n    const bestFitting = getBestFittingResult();\n    if (!bestFitting) {\n      setError('无法获取有效的拟合结果');\n      return;\n    }\n\n    setBestFittingResult(bestFitting);\n\n    const predictions: PredictionResult[] = targetData.values.map((targetValue, index) => {\n      let predictedGrayScale = 0;\n      \n      // 根据拟合类型计算预测值\n      switch (bestFitting.type) {\n        case 'logarithmic':\n          if (targetValue > 0) {\n            const [a, b] = bestFitting.coefficients;\n            predictedGrayScale = a * Math.log(targetValue) + b;\n          }\n          break;\n        case 'exponential':\n          const [a_exp, b_exp] = bestFitting.coefficients;\n          predictedGrayScale = a_exp * Math.exp(b_exp * targetValue);\n          break;\n        case 'polynomial':\n          const [a_poly, b_poly, c_poly, d_poly] = bestFitting.coefficients;\n          predictedGrayScale = a_poly * Math.pow(targetValue, 3) + \n                              b_poly * Math.pow(targetValue, 2) + \n                              c_poly * targetValue + d_poly;\n          break;\n        case 'power':\n          if (targetValue > 0) {\n            const [a_pow, b_pow] = bestFitting.coefficients;\n            predictedGrayScale = a_pow * Math.pow(targetValue, b_pow);\n          }\n          break;\n        case 'bivariate':\n          const [a_biv, b_biv, c_biv] = bestFitting.coefficients;\n          predictedGrayScale = a_biv * Math.pow(targetValue, 2) + \n                              b_biv * targetValue + c_biv;\n          break;\n      }\n\n      return {\n        targetValue,\n        position: targetData.positions[index],\n        predictedGrayScale,\n        bestFittingType: bestFitting.type,\n        confidence: bestFitting.rSquared\n      };\n    });\n\n    setPredictionResults(predictions);\n    setError(null);\n  }, [targetData, getBestFittingResult]);\n\n  // 导出预测结果到Excel\n  const exportToExcel = useCallback(() => {\n    if (predictionResults.length === 0) {\n      setError('没有预测结果可导出');\n      return;\n    }\n\n    const workbook = XLSX.utils.book_new();\n    \n    // 创建预测结果工作表\n    const wsData = [\n      ['位置', '目标数据值', '预测灰阶值', '拟合类型', '置信度(R²)'],\n      ...predictionResults.map(result => [\n        result.position,\n        result.targetValue,\n        result.predictedGrayScale.toFixed(6),\n        getTypeLabel(result.bestFittingType),\n        result.confidence.toFixed(6)\n      ])\n    ];\n    \n    const worksheet = XLSX.utils.aoa_to_sheet(wsData);\n    XLSX.utils.book_append_sheet(workbook, worksheet, '预测结果');\n    \n    // 添加拟合信息工作表\n    if (bestFittingResult) {\n      const fittingInfo = [\n        ['拟合信息', ''],\n        ['拟合类型', getTypeLabel(bestFittingResult.type)],\n        ['拟合公式', bestFittingResult.formula],\n        ['R²值', bestFittingResult.rSquared.toFixed(6)],\n        ['RMSE', bestFittingResult.rmse.toFixed(6)],\n        ['MAE', bestFittingResult.mae.toFixed(6)],\n        ['最大误差', bestFittingResult.maxError.toFixed(6)]\n      ];\n      \n      const fittingWs = XLSX.utils.aoa_to_sheet(fittingInfo);\n      XLSX.utils.book_append_sheet(workbook, fittingWs, '拟合信息');\n    }\n    \n    // 下载文件\n    const fileName = `目标数据预测结果_${new Date().toISOString().slice(0, 10)}.xlsx`;\n    XLSX.writeFile(workbook, fileName);\n  }, [predictionResults, bestFittingResult]);\n\n  // 获取拟合类型标签\n  const getTypeLabel = (type: string) => {\n    const labels: { [key: string]: string } = {\n      'logarithmic': '对数拟合',\n      'exponential': '指数拟合',\n      'polynomial': '三次多项式拟合',\n      'power': '幂函数拟合',\n      'bivariate': '二次多项式拟合'\n    };\n    return labels[type] || type;\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <h3 className=\"text-lg font-semibold mb-6\">目标数据预测</h3>\n      \n      {/* 文件上传区域 */}\n      <div className=\"mb-6\">\n        <h4 className=\"font-medium mb-3\">上传目标数据文件 (Sheet3)</h4>\n        <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\n          <input\n            type=\"file\"\n            accept=\".xlsx,.xls\"\n            onChange={handleFileUpload}\n            className=\"hidden\"\n            id=\"target-file-upload\"\n          />\n          <label\n            htmlFor=\"target-file-upload\"\n            className=\"cursor-pointer inline-flex items-center px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\"\n          >\n            选择Excel文件\n          </label>\n          <p className=\"mt-2 text-sm text-gray-500\">\n            请选择包含Sheet3工作表的Excel文件，目标数据应位于B列\n          </p>\n        </div>\n      </div>\n\n      {/* 加载状态 */}\n      {isLoading && (\n        <div className=\"mb-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n          <p className=\"text-blue-700\">正在读取文件...</p>\n        </div>\n      )}\n\n      {/* 错误信息 */}\n      {error && (\n        <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <p className=\"text-red-700\">{error}</p>\n        </div>\n      )}\n\n      {/* 目标数据概览 */}\n      {targetData && (\n        <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n          <h4 className=\"font-medium mb-2\">目标数据概览</h4>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">数据点数量：</span>\n              <span className=\"font-medium\">{targetData.values.length}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">数值范围：</span>\n              <span className=\"font-medium\">\n                {Math.min(...targetData.values).toFixed(2)} - {Math.max(...targetData.values).toFixed(2)}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 生成预测按钮 */}\n      {targetData && grayScaleData.values.length > 0 && brightnessBlocks.length > 0 && (\n        <div className=\"mb-6\">\n          <button\n            onClick={generatePredictions}\n            className=\"px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\"\n          >\n            生成预测结果\n          </button>\n        </div>\n      )}\n\n      {/* 最佳拟合信息 */}\n      {bestFittingResult && (\n        <div className=\"mb-6 p-4 bg-blue-50 rounded-lg\">\n          <h4 className=\"font-medium mb-2\">使用的最佳拟合模型</h4>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">拟合类型：</span>\n              <span className=\"font-medium\">{getTypeLabel(bestFittingResult.type)}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">R²值：</span>\n              <span className=\"font-medium\">{bestFittingResult.rSquared.toFixed(6)}</span>\n            </div>\n            <div className=\"col-span-2\">\n              <span className=\"text-gray-600\">拟合公式：</span>\n              <span className=\"font-medium font-mono\">{bestFittingResult.formula}</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 预测结果表格 */}\n      {predictionResults.length > 0 && (\n        <div className=\"mb-6\">\n          <div className=\"flex justify-between items-center mb-3\">\n            <h4 className=\"font-medium\">预测结果</h4>\n            <button\n              onClick={exportToExcel}\n              className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm\"\n            >\n              导出到Excel\n            </button>\n          </div>\n          \n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full text-sm border-collapse border border-gray-200\">\n              <thead>\n                <tr className=\"bg-gray-50\">\n                  <th className=\"border border-gray-200 px-3 py-2 text-left\">位置</th>\n                  <th className=\"border border-gray-200 px-3 py-2 text-left\">目标数据值</th>\n                  <th className=\"border border-gray-200 px-3 py-2 text-left\">预测灰阶值</th>\n                  <th className=\"border border-gray-200 px-3 py-2 text-left\">拟合类型</th>\n                  <th className=\"border border-gray-200 px-3 py-2 text-left\">置信度</th>\n                </tr>\n              </thead>\n              <tbody>\n                {predictionResults.map((result, index) => (\n                  <tr key={index} className={index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>\n                    <td className=\"border border-gray-200 px-3 py-2 font-mono\">{result.position}</td>\n                    <td className=\"border border-gray-200 px-3 py-2\">{result.targetValue.toFixed(2)}</td>\n                    <td className=\"border border-gray-200 px-3 py-2 font-medium\">\n                      {result.predictedGrayScale.toFixed(6)}\n                    </td>\n                    <td className=\"border border-gray-200 px-3 py-2\">\n                      {getTypeLabel(result.bestFittingType)}\n                    </td>\n                    <td className=\"border border-gray-200 px-3 py-2\">\n                      <span className={`px-2 py-1 rounded-full text-xs ${\n                        result.confidence > 0.9 ? 'bg-green-100 text-green-800' :\n                        result.confidence > 0.7 ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-red-100 text-red-800'\n                      }`}>\n                        {result.confidence.toFixed(4)}\n                      </span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n          \n          {/* 统计信息 */}\n          <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n            <h5 className=\"font-medium mb-2\">预测统计</h5>\n            <div className=\"grid grid-cols-3 gap-4 text-sm\">\n              <div>\n                <span className=\"text-gray-600\">预测数据点：</span>\n                <span className=\"font-medium\">{predictionResults.length}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">平均预测值：</span>\n                <span className=\"font-medium\">\n                  {(predictionResults.reduce((sum, r) => sum + r.predictedGrayScale, 0) / predictionResults.length).toFixed(4)}\n                </span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">预测范围：</span>\n                <span className=\"font-medium\">\n                  {Math.min(...predictionResults.map(r => r.predictedGrayScale)).toFixed(4)} - \n                  {Math.max(...predictionResults.map(r => r.predictedGrayScale)).toFixed(4)}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 使用说明 */}\n      {!targetData && (\n        <div className=\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n          <h4 className=\"font-medium mb-2 text-yellow-800\">使用说明</h4>\n          <ul className=\"text-sm text-yellow-700 space-y-1\">\n            <li>1. 首先确保已上传并处理了原始数据文件</li>\n            <li>2. 上传包含Sheet3工作表的Excel文件，目标数据应位于B列</li>\n            <li>3. 系统将自动选择最佳拟合模型进行预测</li>\n            <li>4. 生成预测结果后可导出到Excel文件</li>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TargetDataPrediction;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}