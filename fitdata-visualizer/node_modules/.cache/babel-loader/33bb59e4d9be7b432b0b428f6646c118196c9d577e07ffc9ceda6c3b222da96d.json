{"ast":null,"code":"import React,{useMemo,useState}from'react';import{performAllFittings}from'../utils/curveFitting';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CurveFittingVisualization=_ref=>{let{centerPixelValues,grayScaleValues,brightnessBlocks}=_ref;const[inputBrightness,setInputBrightness]=useState('');const[calculatedGrayScales,setCalculatedGrayScales]=useState({});// 中心像素拟合结果\nconst centerFittingResults=useMemo(()=>{if(centerPixelValues.length===0||grayScaleValues.length===0){return[];}const data={x:centerPixelValues,y:grayScaleValues};return performAllFittings(data);},[centerPixelValues,grayScaleValues]);// 当前使用的拟合结果\nconst fittingResults=centerFittingResults;const currentXValues=centerPixelValues;// 计算数据范围用于刻度显示\nconst maxBrightness=useMemo(()=>{return currentXValues.length>0?Math.max(...currentXValues):100;},[currentXValues]);const maxGrayScale=useMemo(()=>{return grayScaleValues.length>0?Math.max(...grayScaleValues):100;},[grayScaleValues]);const generateSVGPath=(result,width,height)=>{if(result.predictedValues.length===0||currentXValues.length===0)return'';const xMin=Math.min(...currentXValues);const xMax=Math.max(...currentXValues);const yMin=Math.min(...result.predictedValues,...grayScaleValues);const yMax=Math.max(...result.predictedValues,...grayScaleValues);const xRange=xMax-xMin||1;const yRange=yMax-yMin||1;// 生成更多点来绘制平滑曲线\nconst numPoints=100;const points=[];for(let i=0;i<=numPoints;i++){const t=i/numPoints;const x=xMin+t*xRange;let y=0;// 根据拟合类型计算y值\nconst[a,b,c,d]=result.coefficients;switch(result.type){case'logarithmic':if(x>0){y=a*Math.log(x)+b;}else{continue;// 跳过无效点\n}break;case'exponential':y=a*Math.exp(b*x);break;case'polynomial':y=a*Math.pow(x,3)+b*Math.pow(x,2)+c*x+d;break;case'power':if(x>0){y=a*Math.pow(x,b);}else{continue;// 跳过无效点\n}break;}const svgX=(x-xMin)/xRange*(width-40)+20;const svgY=height-20-(y-yMin)/yRange*(height-40);// 检查点是否在有效范围内\nif(svgX>=20&&svgX<=width-20&&svgY>=20&&svgY<=height-20){points.push(\"\".concat(svgX,\",\").concat(svgY));}}if(points.length===0)return'';return\"M \".concat(points[0],\" L \").concat(points.slice(1).join(' L '));};const generateScatterPoints=(width,height)=>{if(currentXValues.length===0)return[];const xMin=Math.min(...currentXValues);const xMax=Math.max(...currentXValues);const yMin=Math.min(...grayScaleValues);const yMax=Math.max(...grayScaleValues);const xRange=xMax-xMin||1;const yRange=yMax-yMin||1;return currentXValues.map((x,i)=>{const y=grayScaleValues[i];const svgX=(x-xMin)/xRange*(width-40)+20;const svgY=height-20-(y-yMin)/yRange*(height-40);return{x:svgX,y:svgY,originalX:x,originalY:y};});};const getColorForFittingType=type=>{switch(type){case'logarithmic':return'#ef4444';// red\ncase'exponential':return'#3b82f6';// blue\ncase'polynomial':return'#10b981';// green\ncase'power':return'#f59e0b';// amber\ncase'bivariate':return'#8b5cf6';// purple\ndefault:return'#6b7280';// gray\n}};const getTypeLabel=type=>{switch(type){case'logarithmic':return'对数拟合';case'exponential':return'指数拟合';case'polynomial':return'三次多项式拟合';case'power':return'幂函数拟合';case'bivariate':return'二次多项式拟合';default:return type;}};// 根据拟合公式计算灰阶值\nconst calculateGrayScaleFromBrightness=(brightness,result)=>{const{coefficients,type}=result;switch(type){case'logarithmic':// y = a * ln(x) + b\nreturn coefficients[0]*Math.log(brightness)+coefficients[1];case'exponential':// y = a * e^(b * x)\nreturn coefficients[0]*Math.exp(coefficients[1]*brightness);case'polynomial':// y = a * x^3 + b * x^2 + c * x + d\nreturn coefficients[0]*Math.pow(brightness,3)+coefficients[1]*Math.pow(brightness,2)+coefficients[2]*brightness+coefficients[3];case'power':// y = a * x^b\nreturn coefficients[0]*Math.pow(brightness,coefficients[1]);case'bivariate':// y = a * x^2 + b * x + c\nreturn coefficients[0]*Math.pow(brightness,2)+coefficients[1]*brightness+coefficients[2];default:return 0;}};// 处理输入亮度值计算\nconst handleCalculateGrayScales=()=>{const brightness=parseFloat(inputBrightness);if(isNaN(brightness)||brightness<=0){alert('请输入有效的正数亮度值');return;}const results={};fittingResults.forEach(result=>{try{const grayScale=calculateGrayScaleFromBrightness(brightness,result);results[result.type]=grayScale;}catch(error){results[result.type]=NaN;}});setCalculatedGrayScales(results);};if(centerPixelValues.length===0||grayScaleValues.length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-lg p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-4\",children:\"\\u66F2\\u7EBF\\u62DF\\u5408\\u5206\\u6790\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"\\u6682\\u65E0\\u6570\\u636E\\u8FDB\\u884C\\u62DF\\u5408\\u5206\\u6790\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-lg p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-6\",children:\"\\u66F2\\u7EBF\\u62DF\\u5408\\u5206\\u6790\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 p-4 bg-gray-50 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-2\",children:\"\\u4E2D\\u5FC3\\u50CF\\u7D20\\u6570\\u636E\\u6982\\u89C8\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"\\u6570\\u636E\\u70B9\\u6570\\u91CF\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:centerPixelValues.length})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"\\u4E2D\\u5FC3\\u50CF\\u7D20\\u503C\\u8303\\u56F4\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:centerPixelValues.length>0?\"\".concat(Math.min(...centerPixelValues).toFixed(2),\" - \").concat(Math.max(...centerPixelValues).toFixed(2)):'N/A'})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"\\u7070\\u9636\\u503C\\u8303\\u56F4\\uFF1A\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium\",children:[Math.min(...grayScaleValues).toFixed(2),\" - \",Math.max(...grayScaleValues).toFixed(2)]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-3\",children:\"\\u4E2D\\u5FC3\\u50CF\\u7D20\\u6570\\u636E\\u8868\\u683C\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto max-h-64\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"w-full text-sm border-collapse border border-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"sticky top-0 bg-white\",children:/*#__PURE__*/_jsxs(\"tr\",{className:\"bg-gray-50\",children:[/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u5E8F\\u53F7\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u4E2D\\u5FC3\\u50CF\\u7D20\\u7070\\u5EA6\\u503C\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u5BF9\\u5E94\\u7070\\u9636\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:centerPixelValues.map((pixelValue,index)=>{var _grayScaleValues$inde;return/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2\",children:index+1}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-medium\",children:pixelValue.toFixed(2)}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-medium\",children:((_grayScaleValues$inde=grayScaleValues[index])===null||_grayScaleValues$inde===void 0?void 0:_grayScaleValues$inde.toFixed(2))||'N/A'})]},index);})})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 p-4 bg-blue-50 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-3\",children:\"\\u4EAE\\u5EA6\\u503C\\u8F6C\\u6362\\u7070\\u9636\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-3 items-end mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"\\u8F93\\u5165\\u7EDD\\u5BF9\\u4EAE\\u5EA6\\u503C\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:inputBrightness,onChange:e=>setInputBrightness(e.target.value),placeholder:\"\\u8BF7\\u8F93\\u5165\\u6B63\\u6570\\u4EAE\\u5EA6\\u503C\",className:\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",step:\"0.01\",min:\"0\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCalculateGrayScales,className:\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\",children:\"\\u8BA1\\u7B97\\u7070\\u9636\"})]}),Object.keys(calculatedGrayScales).length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"w-full text-sm border-collapse border border-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"bg-gray-50\",children:[/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u62DF\\u5408\\u7C7B\\u578B\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u8BA1\\u7B97\\u5F97\\u5230\\u7684\\u7070\\u9636\\u503C\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u72B6\\u6001\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:Object.entries(calculatedGrayScales).map(_ref2=>{let[type,value]=_ref2;return/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full\",style:{backgroundColor:getColorForFittingType(type)}}),getTypeLabel(type)]})}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-medium\",children:isNaN(value)?'计算错误':value.toFixed(4)}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2\",children:/*#__PURE__*/_jsx(\"span\",{className:\"px-2 py-1 rounded-full text-xs \".concat(isNaN(value)?'bg-red-100 text-red-800':'bg-green-100 text-green-800'),children:isNaN(value)?'失败':'成功'})})]},type);})})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-3\",children:\"\\u62DF\\u5408\\u7ED3\\u679C\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"w-full text-sm border-collapse border border-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"bg-gray-50\",children:[/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u62DF\\u5408\\u7C7B\\u578B\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u62DF\\u5408\\u516C\\u5F0F\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"R\\xB2\\u503C\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"RMSE\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"MAE\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u6700\\u5927\\u8BEF\\u5DEE\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u62DF\\u5408\\u8D28\\u91CF\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:fittingResults.map((result,index)=>{var _result$rmse,_result$mae,_result$maxError;const quality=result.rSquared>0.9?'优秀':result.rSquared>0.7?'良好':result.rSquared>0.5?'一般':'较差';const qualityColor=result.rSquared>0.9?'text-green-600':result.rSquared>0.7?'text-blue-600':result.rSquared>0.5?'text-yellow-600':'text-red-600';return/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full\",style:{backgroundColor:getColorForFittingType(result.type)}}),getTypeLabel(result.type)]})}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-mono text-xs\",children:result.formula}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-medium\",children:result.rSquared.toFixed(4)}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-medium\",children:((_result$rmse=result.rmse)===null||_result$rmse===void 0?void 0:_result$rmse.toFixed(4))||'N/A'}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-medium\",children:((_result$mae=result.mae)===null||_result$mae===void 0?void 0:_result$mae.toFixed(4))||'N/A'}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-medium\",children:((_result$maxError=result.maxError)===null||_result$maxError===void 0?void 0:_result$maxError.toFixed(4))||'N/A'}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-medium \".concat(qualityColor),children:quality})]},index);})})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-3\",children:\"\\u62DF\\u5408\\u66F2\\u7EBF\\u56FE\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 p-4 rounded-lg\",children:/*#__PURE__*/_jsxs(\"svg\",{width:\"100%\",height:\"400\",viewBox:\"0 0 800 400\",className:\"border border-gray-200 bg-white\",children:[/*#__PURE__*/_jsx(\"defs\",{children:/*#__PURE__*/_jsx(\"pattern\",{id:\"grid\",width:\"40\",height:\"40\",patternUnits:\"userSpaceOnUse\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M 40 0 L 0 0 0 40\",fill:\"none\",stroke:\"#f3f4f6\",strokeWidth:\"1\"})})}),/*#__PURE__*/_jsx(\"rect\",{width:\"100%\",height:\"100%\",fill:\"url(#grid)\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"20\",y1:\"20\",x2:\"20\",y2:\"380\",stroke:\"#374151\",strokeWidth:\"2\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"20\",y1:\"380\",x2:\"780\",y2:\"380\",stroke:\"#374151\",strokeWidth:\"2\"}),Array.from({length:9},(_,i)=>{const x=20+i*(760/8);const value=(i*(maxBrightness/8)).toFixed(1);return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"line\",{x1:x,y1:\"380\",x2:x,y2:\"385\",stroke:\"#374151\",strokeWidth:\"1\"}),/*#__PURE__*/_jsx(\"text\",{x:x,y:\"400\",textAnchor:\"middle\",className:\"text-xs fill-gray-600\",children:value})]},\"x-tick-\".concat(i));}),Array.from({length:9},(_,i)=>{const y=380-i*(360/8);const value=(i*(maxGrayScale/8)).toFixed(1);return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"line\",{x1:\"15\",y1:y,x2:\"20\",y2:y,stroke:\"#374151\",strokeWidth:\"1\"}),/*#__PURE__*/_jsx(\"text\",{x:\"10\",y:y+3,textAnchor:\"end\",className:\"text-xs fill-gray-600\",children:value})]},\"y-tick-\".concat(i));}),generateScatterPoints(800,400).map((point,i)=>/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"circle\",{cx:point.x,cy:point.y,r:\"4\",fill:\"#1f2937\",stroke:\"white\",strokeWidth:\"2\"}),/*#__PURE__*/_jsx(\"title\",{children:\"\\u4E2D\\u5FC3\\u50CF\\u7D20\\u503C: \".concat(point.originalX.toFixed(2),\", \\u7070\\u9636\\u503C: \").concat(point.originalY.toFixed(2))})]},\"point-\".concat(i))),fittingResults.map((result,index)=>{const path=generateSVGPath(result,800,400);if(!path)return null;return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"path\",{d:path,fill:\"none\",stroke:getColorForFittingType(result.type),strokeWidth:\"2\",strokeDasharray:result.type==='polynomial'?'5,5':'none'}),/*#__PURE__*/_jsx(\"text\",{x:100+index*150,y:50+index*20,className:\"text-xs\",fill:getColorForFittingType(result.type),fontFamily:\"monospace\",children:result.formula})]},\"curve-\".concat(index));}),/*#__PURE__*/_jsx(\"text\",{x:\"400\",y:\"395\",textAnchor:\"middle\",className:\"text-sm fill-gray-600\",children:\"\\u4E2D\\u5FC3\\u50CF\\u7D20\\u503C\"}),/*#__PURE__*/_jsx(\"text\",{x:\"10\",y:\"200\",textAnchor:\"middle\",className:\"text-sm fill-gray-600\",transform:\"rotate(-90 10 200)\",children:\"\\u7070\\u9636\\u503C\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full bg-gray-800\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u539F\\u59CB\\u6570\\u636E\\u70B9\"})]}),fittingResults.map((result,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-1\",style:{backgroundColor:getColorForFittingType(result.type),borderStyle:result.type==='polynomial'?'dashed':'solid'}}),/*#__PURE__*/_jsx(\"span\",{children:getTypeLabel(result.type)})]},index))]})]});};export default CurveFittingVisualization;","map":{"version":3,"names":["React","useMemo","useState","performAllFittings","jsx","_jsx","jsxs","_jsxs","CurveFittingVisualization","_ref","centerPixelValues","grayScaleValues","brightnessBlocks","inputBrightness","setInputBrightness","calculatedGrayScales","setCalculatedGrayScales","centerFittingResults","length","data","x","y","fittingResults","currentXValues","maxBrightness","Math","max","maxGrayScale","generateSVGPath","result","width","height","predictedValues","xMin","min","xMax","yMin","yMax","xRange","yRange","numPoints","points","i","t","a","b","c","d","coefficients","type","log","exp","pow","svgX","svgY","push","concat","slice","join","generateScatterPoints","map","originalX","originalY","getColorForFittingType","getTypeLabel","calculateGrayScaleFromBrightness","brightness","handleCalculateGrayScales","parseFloat","isNaN","alert","results","forEach","grayScale","error","NaN","className","children","toFixed","pixelValue","index","_grayScaleValues$inde","value","onChange","e","target","placeholder","step","onClick","Object","keys","entries","_ref2","style","backgroundColor","_result$rmse","_result$mae","_result$maxError","quality","rSquared","qualityColor","formula","rmse","mae","maxError","viewBox","id","patternUnits","fill","stroke","strokeWidth","x1","y1","x2","y2","Array","from","_","textAnchor","point","cx","cy","r","path","strokeDasharray","fontFamily","transform","borderStyle"],"sources":["D:/source/fitdata/fitdata-visualizer/src/components/CurveFittingVisualization.tsx"],"sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { FittingResult, FittingData, performAllFittings } from '../utils/curveFitting';\nimport { BrightnessBlock } from '../utils/dataParser';\n\ninterface CurveFittingVisualizationProps {\n  centerPixelValues: number[];\n  grayScaleValues: number[];\n  brightnessBlocks: BrightnessBlock[];\n}\n\nconst CurveFittingVisualization: React.FC<CurveFittingVisualizationProps> = ({\n  centerPixelValues,\n  grayScaleValues,\n  brightnessBlocks\n}) => {\n  const [inputBrightness, setInputBrightness] = useState('');\n  const [calculatedGrayScales, setCalculatedGrayScales] = useState<{[key: string]: number}>({});\n  \n\n  \n  // 中心像素拟合结果\n  const centerFittingResults = useMemo(() => {\n    if (centerPixelValues.length === 0 || grayScaleValues.length === 0) {\n      return [];\n    }\n    \n    const data: FittingData = {\n      x: centerPixelValues,\n      y: grayScaleValues\n    };\n    \n    return performAllFittings(data);\n  }, [centerPixelValues, grayScaleValues]);\n  \n  // 当前使用的拟合结果\n  const fittingResults = centerFittingResults;\n  const currentXValues = centerPixelValues;\n  \n  // 计算数据范围用于刻度显示\n  const maxBrightness = useMemo(() => {\n    return currentXValues.length > 0 ? Math.max(...currentXValues) : 100;\n  }, [currentXValues]);\n  \n  const maxGrayScale = useMemo(() => {\n    return grayScaleValues.length > 0 ? Math.max(...grayScaleValues) : 100;\n  }, [grayScaleValues]);\n\n  const generateSVGPath = (result: FittingResult, width: number, height: number) => {\n    if (result.predictedValues.length === 0 || currentXValues.length === 0) return '';\n    \n    const xMin = Math.min(...currentXValues);\n    const xMax = Math.max(...currentXValues);\n    const yMin = Math.min(...result.predictedValues, ...grayScaleValues);\n    const yMax = Math.max(...result.predictedValues, ...grayScaleValues);\n    \n    const xRange = xMax - xMin || 1;\n    const yRange = yMax - yMin || 1;\n    \n    // 生成更多点来绘制平滑曲线\n    const numPoints = 100;\n    const points: string[] = [];\n    \n    for (let i = 0; i <= numPoints; i++) {\n      const t = i / numPoints;\n      const x = xMin + t * xRange;\n      let y = 0;\n      \n      // 根据拟合类型计算y值\n      const [a, b, c, d] = result.coefficients;\n      switch (result.type) {\n        case 'logarithmic':\n          if (x > 0) {\n            y = a * Math.log(x) + b;\n          } else {\n            continue; // 跳过无效点\n          }\n          break;\n        case 'exponential':\n          y = a * Math.exp(b * x);\n          break;\n        case 'polynomial':\n          y = a * Math.pow(x, 3) + b * Math.pow(x, 2) + c * x + d;\n          break;\n        case 'power':\n          if (x > 0) {\n            y = a * Math.pow(x, b);\n          } else {\n            continue; // 跳过无效点\n          }\n          break;\n      }\n      \n      const svgX = ((x - xMin) / xRange) * (width - 40) + 20;\n      const svgY = height - 20 - ((y - yMin) / yRange) * (height - 40);\n      \n      // 检查点是否在有效范围内\n      if (svgX >= 20 && svgX <= width - 20 && svgY >= 20 && svgY <= height - 20) {\n        points.push(`${svgX},${svgY}`);\n      }\n    }\n    \n    if (points.length === 0) return '';\n    \n    return `M ${points[0]} L ${points.slice(1).join(' L ')}`;\n  };\n\n  const generateScatterPoints = (width: number, height: number) => {\n    if (currentXValues.length === 0) return [];\n    \n    const xMin = Math.min(...currentXValues);\n    const xMax = Math.max(...currentXValues);\n    const yMin = Math.min(...grayScaleValues);\n    const yMax = Math.max(...grayScaleValues);\n    \n    const xRange = xMax - xMin || 1;\n    const yRange = yMax - yMin || 1;\n    \n    return currentXValues.map((x, i) => {\n      const y = grayScaleValues[i];\n      const svgX = ((x - xMin) / xRange) * (width - 40) + 20;\n      const svgY = height - 20 - ((y - yMin) / yRange) * (height - 40);\n      return { x: svgX, y: svgY, originalX: x, originalY: y };\n    });\n  };\n\n  const getColorForFittingType = (type: string) => {\n    switch (type) {\n      case 'logarithmic': return '#ef4444'; // red\n      case 'exponential': return '#3b82f6'; // blue\n      case 'polynomial': return '#10b981'; // green\n      case 'power': return '#f59e0b'; // amber\n      case 'bivariate': return '#8b5cf6'; // purple\n      default: return '#6b7280'; // gray\n    }\n  };\n\n  const getTypeLabel = (type: string) => {\n    switch (type) {\n      case 'logarithmic': return '对数拟合';\n      case 'exponential': return '指数拟合';\n      case 'polynomial': return '三次多项式拟合';\n      case 'power': return '幂函数拟合';\n      case 'bivariate': return '二次多项式拟合';\n      default: return type;\n    }\n  };\n\n  // 根据拟合公式计算灰阶值\n  const calculateGrayScaleFromBrightness = (brightness: number, result: FittingResult): number => {\n    const { coefficients, type } = result;\n    \n    switch (type) {\n      case 'logarithmic':\n        // y = a * ln(x) + b\n        return coefficients[0] * Math.log(brightness) + coefficients[1];\n      case 'exponential':\n        // y = a * e^(b * x)\n        return coefficients[0] * Math.exp(coefficients[1] * brightness);\n      case 'polynomial':\n        // y = a * x^3 + b * x^2 + c * x + d\n        return coefficients[0] * Math.pow(brightness, 3) + \n               coefficients[1] * Math.pow(brightness, 2) + \n               coefficients[2] * brightness + \n               coefficients[3];\n      case 'power':\n        // y = a * x^b\n        return coefficients[0] * Math.pow(brightness, coefficients[1]);\n      case 'bivariate':\n        // y = a * x^2 + b * x + c\n        return coefficients[0] * Math.pow(brightness, 2) + \n               coefficients[1] * brightness + \n               coefficients[2];\n      default:\n        return 0;\n    }\n  };\n\n  // 处理输入亮度值计算\n  const handleCalculateGrayScales = () => {\n    const brightness = parseFloat(inputBrightness);\n    if (isNaN(brightness) || brightness <= 0) {\n      alert('请输入有效的正数亮度值');\n      return;\n    }\n\n    const results: {[key: string]: number} = {};\n    fittingResults.forEach(result => {\n      try {\n        const grayScale = calculateGrayScaleFromBrightness(brightness, result);\n        results[result.type] = grayScale;\n      } catch (error) {\n        results[result.type] = NaN;\n      }\n    });\n    \n    setCalculatedGrayScales(results);\n  };\n\n  if (centerPixelValues.length === 0 || grayScaleValues.length === 0) {\n    return (\n      <div className=\"bg-white rounded-lg shadow-lg p-6\">\n        <h3 className=\"text-lg font-semibold mb-4\">曲线拟合分析</h3>\n        <p className=\"text-gray-500\">暂无数据进行拟合分析</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <h3 className=\"text-lg font-semibold mb-6\">曲线拟合分析</h3>\n      \n\n      \n      {/* 数据概览 */}\n      <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n        <h4 className=\"font-medium mb-2\">中心像素数据概览</h4>\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n          <div>\n            <span className=\"text-gray-600\">数据点数量：</span>\n            <span className=\"font-medium\">{centerPixelValues.length}</span>\n          </div>\n          <div>\n            <span className=\"text-gray-600\">中心像素值范围：</span>\n            <span className=\"font-medium\">\n              {centerPixelValues.length > 0 ? \n                `${Math.min(...centerPixelValues).toFixed(2)} - ${Math.max(...centerPixelValues).toFixed(2)}` : \n                'N/A'\n              }\n            </span>\n          </div>\n          <div>\n            <span className=\"text-gray-600\">灰阶值范围：</span>\n            <span className=\"font-medium\">\n              {Math.min(...grayScaleValues).toFixed(2)} - {Math.max(...grayScaleValues).toFixed(2)}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {/* 中心像素数据表格 */}\n      <div className=\"mb-6\">\n        <h4 className=\"font-medium mb-3\">中心像素数据表格</h4>\n        <div className=\"overflow-x-auto max-h-64\">\n          <table className=\"w-full text-sm border-collapse border border-gray-200\">\n            <thead className=\"sticky top-0 bg-white\">\n              <tr className=\"bg-gray-50\">\n                <th className=\"border border-gray-200 px-3 py-2 text-left\">序号</th>\n                <th className=\"border border-gray-200 px-3 py-2 text-left\">中心像素灰度值</th>\n                <th className=\"border border-gray-200 px-3 py-2 text-left\">对应灰阶</th>\n              </tr>\n            </thead>\n            <tbody>\n              {centerPixelValues.map((pixelValue, index) => (\n                <tr key={index} className=\"hover:bg-gray-50\">\n                  <td className=\"border border-gray-200 px-3 py-2\">{index + 1}</td>\n                  <td className=\"border border-gray-200 px-3 py-2 font-medium\">\n                    {pixelValue.toFixed(2)}\n                  </td>\n                  <td className=\"border border-gray-200 px-3 py-2 font-medium\">\n                    {grayScaleValues[index]?.toFixed(2) || 'N/A'}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* 输入亮度值计算灰阶 */}\n      <div className=\"mb-6 p-4 bg-blue-50 rounded-lg\">\n        <h4 className=\"font-medium mb-3\">亮度值转换灰阶</h4>\n        <div className=\"flex gap-3 items-end mb-4\">\n          <div className=\"flex-1\">\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n              输入绝对亮度值\n            </label>\n            <input\n              type=\"number\"\n              value={inputBrightness}\n              onChange={(e) => setInputBrightness(e.target.value)}\n              placeholder=\"请输入正数亮度值\"\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              step=\"0.01\"\n              min=\"0\"\n            />\n          </div>\n          <button\n            onClick={handleCalculateGrayScales}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n          >\n            计算灰阶\n          </button>\n        </div>\n        \n        {Object.keys(calculatedGrayScales).length > 0 && (\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full text-sm border-collapse border border-gray-200\">\n              <thead>\n                <tr className=\"bg-gray-50\">\n                  <th className=\"border border-gray-200 px-3 py-2 text-left\">拟合类型</th>\n                  <th className=\"border border-gray-200 px-3 py-2 text-left\">计算得到的灰阶值</th>\n                  <th className=\"border border-gray-200 px-3 py-2 text-left\">状态</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Object.entries(calculatedGrayScales).map(([type, value]) => (\n                  <tr key={type} className=\"hover:bg-gray-50\">\n                    <td className=\"border border-gray-200 px-3 py-2\">\n                      <div className=\"flex items-center gap-2\">\n                        <div \n                          className=\"w-3 h-3 rounded-full\" \n                          style={{ backgroundColor: getColorForFittingType(type) }}\n                        ></div>\n                        {getTypeLabel(type)}\n                      </div>\n                    </td>\n                    <td className=\"border border-gray-200 px-3 py-2 font-medium\">\n                      {isNaN(value) ? '计算错误' : value.toFixed(4)}\n                    </td>\n                    <td className=\"border border-gray-200 px-3 py-2\">\n                      <span className={`px-2 py-1 rounded-full text-xs ${\n                        isNaN(value) ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800'\n                      }`}>\n                        {isNaN(value) ? '失败' : '成功'}\n                      </span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n\n      {/* 拟合结果表格 */}\n      <div className=\"mb-6\">\n        <h4 className=\"font-medium mb-3\">拟合结果</h4>\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full text-sm border-collapse border border-gray-200\">\n            <thead>\n              <tr className=\"bg-gray-50\">\n                <th className=\"border border-gray-200 px-3 py-2 text-left\">拟合类型</th>\n                <th className=\"border border-gray-200 px-3 py-2 text-left\">拟合公式</th>\n                <th className=\"border border-gray-200 px-3 py-2 text-left\">R²值</th>\n                <th className=\"border border-gray-200 px-3 py-2 text-left\">RMSE</th>\n                <th className=\"border border-gray-200 px-3 py-2 text-left\">MAE</th>\n                <th className=\"border border-gray-200 px-3 py-2 text-left\">最大误差</th>\n                <th className=\"border border-gray-200 px-3 py-2 text-left\">拟合质量</th>\n              </tr>\n            </thead>\n            <tbody>\n              {fittingResults.map((result, index) => {\n                const quality = result.rSquared > 0.9 ? '优秀' : \n                               result.rSquared > 0.7 ? '良好' : \n                               result.rSquared > 0.5 ? '一般' : '较差';\n                const qualityColor = result.rSquared > 0.9 ? 'text-green-600' : \n                                   result.rSquared > 0.7 ? 'text-blue-600' : \n                                   result.rSquared > 0.5 ? 'text-yellow-600' : 'text-red-600';\n                \n                return (\n                  <tr key={index} className=\"hover:bg-gray-50\">\n                    <td className=\"border border-gray-200 px-3 py-2\">\n                      <div className=\"flex items-center gap-2\">\n                        <div \n                          className=\"w-3 h-3 rounded-full\" \n                          style={{ backgroundColor: getColorForFittingType(result.type) }}\n                        ></div>\n                        {getTypeLabel(result.type)}\n                      </div>\n                    </td>\n                    <td className=\"border border-gray-200 px-3 py-2 font-mono text-xs\">\n                      {result.formula}\n                    </td>\n                    <td className=\"border border-gray-200 px-3 py-2 font-medium\">\n                      {result.rSquared.toFixed(4)}\n                    </td>\n                    <td className=\"border border-gray-200 px-3 py-2 font-medium\">\n                      {result.rmse?.toFixed(4) || 'N/A'}\n                    </td>\n                    <td className=\"border border-gray-200 px-3 py-2 font-medium\">\n                      {result.mae?.toFixed(4) || 'N/A'}\n                    </td>\n                    <td className=\"border border-gray-200 px-3 py-2 font-medium\">\n                      {result.maxError?.toFixed(4) || 'N/A'}\n                    </td>\n                    <td className={`border border-gray-200 px-3 py-2 font-medium ${qualityColor}`}>\n                      {quality}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* 拟合曲线图 */}\n      <div className=\"mb-4\">\n        <h4 className=\"font-medium mb-3\">拟合曲线图</h4>\n        <div className=\"bg-gray-50 p-4 rounded-lg\">\n          <svg width=\"100%\" height=\"400\" viewBox=\"0 0 800 400\" className=\"border border-gray-200 bg-white\">\n            {/* 网格线 */}\n            <defs>\n              <pattern id=\"grid\" width=\"40\" height=\"40\" patternUnits=\"userSpaceOnUse\">\n                <path d=\"M 40 0 L 0 0 0 40\" fill=\"none\" stroke=\"#f3f4f6\" strokeWidth=\"1\"/>\n              </pattern>\n            </defs>\n            <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\n            \n            {/* 坐标轴 */}\n            <line x1=\"20\" y1=\"20\" x2=\"20\" y2=\"380\" stroke=\"#374151\" strokeWidth=\"2\" />\n            <line x1=\"20\" y1=\"380\" x2=\"780\" y2=\"380\" stroke=\"#374151\" strokeWidth=\"2\" />\n            \n            {/* X轴刻度和数值 */}\n            {Array.from({ length: 9 }, (_, i) => {\n              const x = 20 + (i * (760 / 8));\n              const value = (i * (maxBrightness / 8)).toFixed(1);\n              return (\n                <g key={`x-tick-${i}`}>\n                  <line x1={x} y1=\"380\" x2={x} y2=\"385\" stroke=\"#374151\" strokeWidth=\"1\" />\n                  <text x={x} y=\"400\" textAnchor=\"middle\" className=\"text-xs fill-gray-600\">\n                    {value}\n                  </text>\n                </g>\n              );\n            })}\n            \n            {/* Y轴刻度和数值 */}\n            {Array.from({ length: 9 }, (_, i) => {\n              const y = 380 - (i * (360 / 8));\n              const value = (i * (maxGrayScale / 8)).toFixed(1);\n              return (\n                <g key={`y-tick-${i}`}>\n                  <line x1=\"15\" y1={y} x2=\"20\" y2={y} stroke=\"#374151\" strokeWidth=\"1\" />\n                  <text x=\"10\" y={y + 3} textAnchor=\"end\" className=\"text-xs fill-gray-600\">\n                    {value}\n                  </text>\n                </g>\n              );\n            })}\n            \n            {/* 原始数据点 */}\n            {generateScatterPoints(800, 400).map((point, i) => (\n              <g key={`point-${i}`}>\n                <circle \n                  cx={point.x} \n                  cy={point.y} \n                  r=\"4\" \n                  fill=\"#1f2937\" \n                  stroke=\"white\" \n                  strokeWidth=\"2\"\n                />\n                <title>{`中心像素值: ${point.originalX.toFixed(2)}, 灰阶值: ${point.originalY.toFixed(2)}`}</title>\n              </g>\n            ))}\n            \n            {/* 拟合曲线 */}\n            {fittingResults.map((result, index) => {\n              const path = generateSVGPath(result, 800, 400);\n              if (!path) return null;\n              \n              return (\n                <g key={`curve-${index}`}>\n                  <path \n                    d={path} \n                    fill=\"none\" \n                    stroke={getColorForFittingType(result.type)} \n                    strokeWidth=\"2\" \n                    strokeDasharray={result.type === 'polynomial' ? '5,5' : 'none'}\n                  />\n                  {/* 显示拟合公式 */}\n                  <text \n                    x={100 + index * 150} \n                    y={50 + index * 20} \n                    className=\"text-xs\" \n                    fill={getColorForFittingType(result.type)}\n                    fontFamily=\"monospace\"\n                  >\n                    {result.formula}\n                  </text>\n                </g>\n              );\n            })}\n            \n            {/* 坐标轴标签 */}\n            <text x=\"400\" y=\"395\" textAnchor=\"middle\" className=\"text-sm fill-gray-600\">\n              中心像素值\n            </text>\n            <text x=\"10\" y=\"200\" textAnchor=\"middle\" className=\"text-sm fill-gray-600\" transform=\"rotate(-90 10 200)\">\n              灰阶值\n            </text>\n          </svg>\n        </div>\n      </div>\n\n      {/* 图例 */}\n      <div className=\"flex flex-wrap gap-4 text-sm\">\n        <div className=\"flex items-center gap-2\">\n          <div className=\"w-3 h-3 rounded-full bg-gray-800\"></div>\n          <span>原始数据点</span>\n        </div>\n        {fittingResults.map((result, index) => (\n          <div key={index} className=\"flex items-center gap-2\">\n            <div \n              className=\"w-3 h-1\" \n              style={{ \n                backgroundColor: getColorForFittingType(result.type),\n                borderStyle: result.type === 'polynomial' ? 'dashed' : 'solid'\n              }}\n            ></div>\n            <span>{getTypeLabel(result.type)}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CurveFittingVisualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}