{"ast":null,"code":"var _jsxFileName = \"D:\\\\source\\\\fitdata\\\\fitdata-visualizer\\\\src\\\\components\\\\TargetDataPrediction.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useMemo } from 'react';\nimport * as XLSX from 'xlsx';\nimport { performAllFittings } from '../utils/curveFitting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TargetDataPrediction = ({\n  grayScaleData,\n  brightnessBlocks\n}) => {\n  _s();\n  var _rawData$matrix$, _rawData$matrix$2;\n  const [rawData, setRawData] = useState(null);\n  const [predictionResults, setPredictionResults] = useState([]);\n  const [bestFittingResult, setBestFittingResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [doubleClickedCell, setDoubleClickedCell] = useState(null);\n  const [generationProgress, setGenerationProgress] = useState(0);\n  const [isGenerating, setIsGenerating] = useState(false);\n\n  // 将数字转换为Excel列名\n  const numToCol = num => {\n    let result = '';\n    while (num > 0) {\n      num--;\n      result = String.fromCharCode(65 + num % 26) + result;\n      num = Math.floor(num / 26);\n    }\n    return result;\n  };\n\n  // 读取Excel Sheet3数据\n  const handleFileUpload = useCallback(event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setIsLoading(true);\n    setError(null);\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        var _e$target;\n        const data = new Uint8Array((_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.result);\n        const workbook = XLSX.read(data, {\n          type: 'array'\n        });\n\n        // 检查是否有Sheet3\n        if (!workbook.SheetNames.includes('Sheet3')) {\n          throw new Error('未找到Sheet3工作表');\n        }\n        const worksheet = workbook.Sheets['Sheet3'];\n        const values = [];\n        const positions = [];\n\n        // 读取A2-AF21范围的原始数据（20行×32列）\n        const startRow = 2;\n        const endRow = 21;\n        const startCol = 'A';\n        const endCol = 'AF';\n        const cols = 32;\n\n        // 将列字母转换为数字\n        const colToNum = col => {\n          let result = 0;\n          for (let i = 0; i < col.length; i++) {\n            result = result * 26 + (col.charCodeAt(i) - 'A'.charCodeAt(0) + 1);\n          }\n          return result;\n        };\n        const numToCol = num => {\n          let result = '';\n          while (num > 0) {\n            num--;\n            result = String.fromCharCode('A'.charCodeAt(0) + num % 26) + result;\n            num = Math.floor(num / 26);\n          }\n          return result;\n        };\n        const startColNum = colToNum(startCol);\n        const endColNum = colToNum(endCol);\n\n        // 创建矩阵结构\n        const matrix = [];\n\n        // 按行读取数据\n        for (let row = startRow; row <= endRow; row++) {\n          const rowData = [];\n          for (let colNum = startColNum; colNum <= endColNum; colNum++) {\n            const col = numToCol(colNum);\n            const cellAddress = `${col}${row}`;\n            const cell = worksheet[cellAddress];\n            if (cell && cell.v !== undefined && cell.v !== null && cell.v !== '') {\n              const value = typeof cell.v === 'number' ? cell.v : parseFloat(cell.v.toString());\n              if (!isNaN(value)) {\n                values.push(value);\n                positions.push(cellAddress);\n                rowData.push(value);\n              } else {\n                rowData.push(0);\n              }\n            } else {\n              rowData.push(0);\n            }\n          }\n          matrix.push(rowData);\n        }\n        if (values.length === 0) {\n          throw new Error('Sheet3中未找到有效的原始数据');\n        }\n        setRawData({\n          values,\n          positions,\n          matrix\n        });\n\n        // 自动生成预测结果\n        setTimeout(async () => {\n          await generatePredictions();\n        }, 500);\n      } catch (error) {\n        setError(error instanceof Error ? error.message : '文件读取失败');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    reader.onerror = () => {\n      setError('文件读取失败');\n      setIsLoading(false);\n    };\n    reader.readAsArrayBuffer(file);\n  }, []);\n\n  // 处理双击事件\n  const handleDoubleClick = (rowIndex, colIndex) => {\n    setDoubleClickedCell({\n      row: rowIndex,\n      col: colIndex\n    });\n  };\n\n  // 关闭双击卡片\n  const handleCloseDoubleClickCard = () => {\n    setDoubleClickedCell(null);\n  };\n\n  // 计算双击卡片的预测结果\n  const doubleClickPredictionContent = useMemo(() => {\n    if (!rawData || !grayScaleData.values.length || !brightnessBlocks.length || !doubleClickedCell) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"\\u9884\\u6D4B\\u6570\\u636E\\u5C1A\\u672A\\u751F\\u6210\\uFF0C\\u8BF7\\u7B49\\u5F85\\u6570\\u636E\\u5904\\u7406\\u5B8C\\u6210\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 14\n      }, this);\n    }\n\n    // 计算该位置的预测结果\n    const cellIndex = doubleClickedCell.row * 32 + doubleClickedCell.col;\n    const rawValue = rawData.values[cellIndex];\n    const centerPixelValues = brightnessBlocks.map(block => block.centerPixelValue);\n    const grayScaleValues = grayScaleData.values;\n    const allFittingResults = performAllFittings({\n      x: centerPixelValues,\n      y: grayScaleValues\n    });\n    const methodPredictions = {};\n    allFittingResults.forEach(fitting => {\n      if (isNaN(fitting.rSquared) || fitting.rSquared < 0) return;\n      let predictedGrayScale = 0;\n      switch (fitting.type) {\n        case 'logarithmic':\n          if (rawValue > 0) {\n            const [a, b] = fitting.coefficients;\n            predictedGrayScale = a * Math.log(rawValue) + b;\n          }\n          break;\n        case 'exponential':\n          const [a_exp, b_exp] = fitting.coefficients;\n          predictedGrayScale = a_exp * Math.exp(b_exp * rawValue);\n          break;\n        case 'polynomial':\n          const [a_poly, b_poly, c_poly, d_poly] = fitting.coefficients;\n          predictedGrayScale = a_poly * Math.pow(rawValue, 3) + b_poly * Math.pow(rawValue, 2) + c_poly * rawValue + d_poly;\n          break;\n        case 'power':\n          if (rawValue > 0) {\n            const [a_pow, b_pow] = fitting.coefficients;\n            predictedGrayScale = a_pow * Math.pow(rawValue, b_pow);\n          }\n          break;\n        case 'bivariate':\n          const [a_biv, b_biv, c_biv] = fitting.coefficients;\n          predictedGrayScale = a_biv * Math.pow(rawValue, 2) + b_biv * rawValue + c_biv;\n          break;\n      }\n      methodPredictions[fitting.type] = {\n        predictedGrayScale,\n        formula: fitting.formula,\n        confidence: fitting.rSquared,\n        fittingType: fitting.type\n      };\n    });\n    const predictions = Object.entries(methodPredictions);\n    if (predictions.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"\\u8BE5\\u4F4D\\u7F6E\\u6682\\u65E0\\u6709\\u6548\\u62DF\\u5408\\u7ED3\\u679C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-50 p-4 rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u4EAE\\u5EA6\\u503C:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 font-medium\",\n            children: rawValue.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"font-medium text-gray-700\",\n          children: \"\\u6240\\u6709\\u62DF\\u5408\\u65B9\\u6CD5\\u9884\\u6D4B\\u7ED3\\u679C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), predictions.map(([method, prediction]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 p-4 rounded-lg border border-blue-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium text-gray-700\",\n              children: getTypeLabel(method)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg font-bold text-blue-600\",\n              children: prediction.predictedGrayScale.toFixed(6)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 mb-2\",\n            children: [\"\\u7F6E\\u4FE1\\u5EA6(R\\xB2): \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: [(prediction.confidence * 100).toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-500 font-mono bg-white p-2 rounded border\",\n            children: prediction.formula\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, method, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this);\n  }, [doubleClickedCell, rawData, grayScaleData.values, brightnessBlocks]);\n\n  // 生成预测结果\n  const generatePredictions = useCallback(async () => {\n    if (!rawData) {\n      setError('请先上传原始数据');\n      return;\n    }\n    if (!grayScaleData.values.length || !brightnessBlocks.length) {\n      setError('无法获取有效的拟合数据');\n      return;\n    }\n    setIsGenerating(true);\n    setGenerationProgress(0);\n    setError(null);\n    try {\n      // 步骤1: 数据验证 (10%)\n      setGenerationProgress(10);\n      await new Promise(resolve => setTimeout(resolve, 100));\n\n      // 提取中心像素值和灰阶值\n      const centerPixelValues = brightnessBlocks.map(block => block.centerPixelValue);\n      const grayScaleValues = grayScaleData.values;\n      if (centerPixelValues.length !== grayScaleValues.length) {\n        setError('拟合数据长度不匹配');\n        return;\n      }\n\n      // 步骤2: 执行拟合算法 (30%)\n      setGenerationProgress(30);\n      await new Promise(resolve => setTimeout(resolve, 200));\n      const allFittingResults = performAllFittings({\n        x: centerPixelValues,\n        y: grayScaleValues\n      });\n\n      // 步骤3: 找到最佳拟合结果 (50%)\n      setGenerationProgress(50);\n      await new Promise(resolve => setTimeout(resolve, 100));\n      const bestFitting = allFittingResults.reduce((best, current) => {\n        if (isNaN(current.rSquared) || current.rSquared < 0) return best;\n        if (!best || current.rSquared > best.rSquared) return current;\n        return best;\n      }, null);\n      if (!bestFitting) {\n        setError('无法获取有效的拟合结果');\n        return;\n      }\n      setBestFittingResult(bestFitting);\n\n      // 步骤4: 计算预测结果 (80%)\n      setGenerationProgress(80);\n      await new Promise(resolve => setTimeout(resolve, 300));\n      const totalValues = rawData.values.length;\n      const predictions = [];\n      for (let index = 0; index < totalValues; index++) {\n        const rawValue = rawData.values[index];\n        // 计算对应的亮度值\n        let brightnessValue = rawValue; // 使用原始数据值作为亮度值\n\n        // 为每种拟合方法计算预测值\n        const methodPredictions = {};\n        allFittingResults.forEach(fitting => {\n          if (isNaN(fitting.rSquared) || fitting.rSquared < 0) return;\n          let predictedGrayScale = 0;\n\n          // 根据拟合类型计算预测值\n          switch (fitting.type) {\n            case 'logarithmic':\n              if (rawValue > 0) {\n                const [a, b] = fitting.coefficients;\n                predictedGrayScale = a * Math.log(rawValue) + b;\n              }\n              break;\n            case 'exponential':\n              const [a_exp, b_exp] = fitting.coefficients;\n              predictedGrayScale = a_exp * Math.exp(b_exp * rawValue);\n              break;\n            case 'polynomial':\n              const [a_poly, b_poly, c_poly, d_poly] = fitting.coefficients;\n              predictedGrayScale = a_poly * Math.pow(rawValue, 3) + b_poly * Math.pow(rawValue, 2) + c_poly * rawValue + d_poly;\n              break;\n            case 'power':\n              if (rawValue > 0) {\n                const [a_pow, b_pow] = fitting.coefficients;\n                predictedGrayScale = a_pow * Math.pow(rawValue, b_pow);\n              }\n              break;\n            case 'bivariate':\n              const [a_biv, b_biv, c_biv] = fitting.coefficients;\n              predictedGrayScale = a_biv * Math.pow(rawValue, 2) + b_biv * rawValue + c_biv;\n              break;\n          }\n          methodPredictions[fitting.type] = {\n            predictedGrayScale,\n            formula: fitting.formula,\n            confidence: fitting.rSquared,\n            fittingType: fitting.type\n          };\n        });\n        predictions.push({\n          position: rawData.positions[index],\n          brightnessValue,\n          predictions: methodPredictions\n        });\n\n        // 更新进度 (80% - 95%)\n        const progress = 80 + Math.floor(index / totalValues * 15);\n        setGenerationProgress(progress);\n\n        // 每处理100个数据点暂停一下，让UI更新\n        if (index % 100 === 0) {\n          await new Promise(resolve => setTimeout(resolve, 10));\n        }\n      }\n\n      // 步骤5: 完成 (100%)\n      setGenerationProgress(100);\n      await new Promise(resolve => setTimeout(resolve, 200));\n      setPredictionResults(predictions);\n      setError(null);\n    } catch (err) {\n      console.error('预测生成错误:', err);\n      setError(err instanceof Error ? err.message : '预测生成失败');\n    } finally {\n      setIsGenerating(false);\n      setGenerationProgress(0);\n    }\n  }, [rawData, grayScaleData, brightnessBlocks]);\n\n  // 导出预测结果到Excel\n  const exportToExcel = useCallback(() => {\n    if (predictionResults.length === 0 || !rawData) {\n      setError('没有预测结果可导出');\n      return;\n    }\n    const workbook = XLSX.utils.book_new();\n\n    // 创建矩阵格式的预测结果工作表\n    const rows = 20; // A2-AF21 共20行\n    const cols = 32; // A-AF 共32列\n\n    // 将列数字转换为字母的辅助函数\n    const numToCol = num => {\n      let result = '';\n      while (num > 0) {\n        num--;\n        result = String.fromCharCode('A'.charCodeAt(0) + num % 26) + result;\n        num = Math.floor(num / 26);\n      }\n      return result;\n    };\n\n    // 创建列标题 (A-AF)\n    const colHeaders = [];\n    for (let i = 0; i < cols; i++) {\n      colHeaders.push(numToCol(i + 1));\n    }\n\n    // 创建原始数据矩阵工作表\n    const originalMatrixData = [];\n    originalMatrixData.push(['', ...colHeaders]);\n    for (let row = 0; row < rows; row++) {\n      const rowData = [row + 2]; // 行号从2开始\n      for (let col = 0; col < cols; col++) {\n        if (row < rawData.matrix.length && col < rawData.matrix[row].length) {\n          rowData.push(rawData.matrix[row][col]);\n        } else {\n          rowData.push('');\n        }\n      }\n      originalMatrixData.push(rowData);\n    }\n    const originalWorksheet = XLSX.utils.aoa_to_sheet(originalMatrixData);\n    XLSX.utils.book_append_sheet(workbook, originalWorksheet, '原始数据');\n\n    // 获取所有拟合方法\n    const allMethods = new Set();\n    predictionResults.forEach(result => {\n      Object.keys(result.predictions).forEach(method => allMethods.add(method));\n    });\n\n    // 为每种拟合方法创建单独的预测结果矩阵\n    Array.from(allMethods).forEach(method => {\n      const methodMatrixData = [];\n      methodMatrixData.push(['', ...colHeaders]);\n      for (let row = 0; row < rows; row++) {\n        const rowData = [row + 2]; // 行号从2开始\n        for (let col = 0; col < cols; col++) {\n          const dataIndex = row * cols + col;\n          if (dataIndex < predictionResults.length && predictionResults[dataIndex].predictions[method]) {\n            rowData.push(parseFloat(predictionResults[dataIndex].predictions[method].predictedGrayScale.toFixed(6)));\n          } else {\n            rowData.push('');\n          }\n        }\n        methodMatrixData.push(rowData);\n      }\n      const methodWorksheet = XLSX.utils.aoa_to_sheet(methodMatrixData);\n      XLSX.utils.book_append_sheet(workbook, methodWorksheet, getTypeLabel(method));\n    });\n\n    // 创建详细预测结果工作表\n    const detailData = [];\n    detailData.push(['位置', '亮度值', '拟合方法', '预测灰阶值', '置信度(R²)', '拟合公式']);\n    predictionResults.forEach(result => {\n      Object.entries(result.predictions).forEach(([method, prediction]) => {\n        detailData.push([result.position, result.brightnessValue.toFixed(2), getTypeLabel(method), prediction.predictedGrayScale.toFixed(6), prediction.confidence.toFixed(6), prediction.formula]);\n      });\n    });\n    const detailWorksheet = XLSX.utils.aoa_to_sheet(detailData);\n    XLSX.utils.book_append_sheet(workbook, detailWorksheet, '详细结果');\n\n    // 添加拟合信息工作表\n    if (bestFittingResult) {\n      const fittingInfo = [['拟合信息', ''], ['最佳拟合类型', getTypeLabel(bestFittingResult.type)], ['拟合公式', bestFittingResult.formula], ['R²值', bestFittingResult.rSquared.toFixed(6)], ['RMSE', bestFittingResult.rmse.toFixed(6)], ['MAE', bestFittingResult.mae.toFixed(6)], ['最大误差', bestFittingResult.maxError.toFixed(6)]];\n      const fittingWs = XLSX.utils.aoa_to_sheet(fittingInfo);\n      XLSX.utils.book_append_sheet(workbook, fittingWs, '拟合信息');\n    }\n\n    // 下载文件\n    const fileName = `原始数据预测结果_${new Date().toISOString().slice(0, 10)}.xlsx`;\n    XLSX.writeFile(workbook, fileName);\n  }, [predictionResults, bestFittingResult, rawData]);\n\n  // 获取拟合类型标签\n  const getTypeLabel = type => {\n    const labels = {\n      'logarithmic': '对数拟合',\n      'exponential': '指数拟合',\n      'polynomial': '三次多项式拟合',\n      'power': '幂函数拟合',\n      'bivariate': '二次多项式拟合'\n    };\n    return labels[type] || type;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-lg p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold mb-6\",\n      children: \"\\u539F\\u59CB\\u6570\\u636E\\u9884\\u6D4B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-3\",\n        children: \"\\u4E0A\\u4F20\\u539F\\u59CB\\u6570\\u636E\\u6587\\u4EF6 (Sheet3)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".xlsx,.xls\",\n          onChange: handleFileUpload,\n          className: \"hidden\",\n          id: \"raw-file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"raw-file-upload\",\n          className: \"cursor-pointer inline-flex items-center px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\",\n          children: \"\\u9009\\u62E9Excel\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-sm text-gray-500\",\n          children: \"\\u8BF7\\u9009\\u62E9\\u5305\\u542BSheet3\\u5DE5\\u4F5C\\u8868\\u7684Excel\\u6587\\u4EF6\\uFF0C\\u539F\\u59CB\\u6570\\u636E\\u5E94\\u4F4D\\u4E8EA2-AF21\\u8303\\u56F4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-blue-700\",\n        children: \"\\u6B63\\u5728\\u8BFB\\u53D6\\u6587\\u4EF6...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-700\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 9\n    }, this), rawData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-gray-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-2\",\n        children: \"\\u539F\\u59CB\\u6570\\u636E\\u6982\\u89C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u77E9\\u9635\\u7EF4\\u5EA6:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 font-medium\",\n            children: [rawData.matrix.length, \" \\xD7 \", ((_rawData$matrix$ = rawData.matrix[0]) === null || _rawData$matrix$ === void 0 ? void 0 : _rawData$matrix$.length) || 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u6570\\u503C\\u8303\\u56F4:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 font-medium\",\n            children: [Math.min(...rawData.matrix.flat()).toFixed(2), \" - \", Math.max(...rawData.matrix.flat()).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 9\n    }, this), isGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 bg-blue-50 p-4 rounded-lg border border-blue-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium text-blue-800\",\n          children: \"\\u6B63\\u5728\\u751F\\u6210\\u9884\\u6D4B\\u6570\\u636E...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-medium text-blue-600\",\n          children: [generationProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full bg-blue-200 rounded-full h-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-600 h-3 rounded-full transition-all duration-300 ease-out\",\n          style: {\n            width: `${generationProgress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 text-sm text-blue-700\",\n        children: [generationProgress <= 10 && '正在验证数据...', generationProgress > 10 && generationProgress <= 30 && '正在执行拟合算法...', generationProgress > 30 && generationProgress <= 50 && '正在分析最佳拟合结果...', generationProgress > 50 && generationProgress <= 95 && '正在计算预测结果...', generationProgress > 95 && '即将完成...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 9\n    }, this), rawData && grayScaleData.values.length > 0 && brightnessBlocks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generatePredictions,\n        className: \"px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\",\n        children: \"\\u751F\\u6210\\u9884\\u6D4B\\u7ED3\\u679C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 9\n    }, this), bestFittingResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-blue-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-2\",\n        children: \"\\u4F7F\\u7528\\u7684\\u6700\\u4F73\\u62DF\\u5408\\u6A21\\u578B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u62DF\\u5408\\u7C7B\\u578B\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: getTypeLabel(bestFittingResult.type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"R\\xB2\\u503C\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: bestFittingResult.rSquared.toFixed(6)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u62DF\\u5408\\u516C\\u5F0F\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium font-mono\",\n            children: bestFittingResult.formula\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 9\n    }, this), rawData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-3\",\n        children: \"\\u539F\\u59CB\\u6570\\u636E\\u70ED\\u529B\\u56FE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 flex items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-600\",\n          children: \"\\u989C\\u8272\\u56FE\\u4F8B:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4 bg-blue-900 border border-gray-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-gray-600\",\n            children: \"\\u9AD8\\u503C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-20 h-4 bg-gradient-to-r from-blue-900 via-blue-400 to-blue-100 border border-gray-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4 bg-blue-100 border border-gray-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-gray-600\",\n            children: \"\\u4F4E\\u503C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500\",\n          children: [\"\\u8303\\u56F4: \", Math.min(...rawData.matrix.flat()).toFixed(2), \" - \", Math.max(...rawData.matrix.flat()).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg border border-gray-200 overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid gap-0.5\",\n          style: {\n            gridTemplateColumns: `repeat(${((_rawData$matrix$2 = rawData.matrix[0]) === null || _rawData$matrix$2 === void 0 ? void 0 : _rawData$matrix$2.length) || 32}, minmax(24px, 1fr))`\n          },\n          children: rawData.matrix.map((row, rowIndex) => row.map((value, colIndex) => {\n            const minValue = Math.min(...rawData.matrix.flat());\n            const maxValue = Math.max(...rawData.matrix.flat());\n            const normalizedValue = (value - minValue) / (maxValue - minValue);\n\n            // 使用蓝色渐变色彩映射\n            const blueIntensity = Math.round(normalizedValue * 200 + 55); // 55-255范围\n            const backgroundColor = `rgb(${255 - blueIntensity}, ${255 - blueIntensity}, 255)`;\n\n            // 根据背景色调整文字颜色\n            const textColor = normalizedValue > 0.5 ? 'white' : 'black';\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aspect-square border border-gray-200 cursor-pointer hover:border-blue-600 hover:border-2 transition-all duration-200 flex items-center justify-center text-xs font-medium hover:shadow-md\",\n              style: {\n                backgroundColor,\n                color: textColor\n              },\n              onDoubleClick: () => handleDoubleClick(rowIndex, colIndex),\n              title: `位置: ${numToCol(colIndex + 1)}${rowIndex + 2}, 值: ${value.toFixed(2)}`,\n              children: value.toFixed(1)\n            }, `${rowIndex}-${colIndex}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 21\n            }, this);\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 11\n      }, this), doubleClickedCell && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n        onClick: handleCloseDoubleClickCard,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg p-6 max-w-2xl w-full mx-4 max-h-[80vh] overflow-y-auto\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"text-lg font-semibold\",\n              children: [\"\\u4F4D\\u7F6E \", numToCol(doubleClickedCell.col + 1), doubleClickedCell.row + 2, \" \\u8BE6\\u7EC6\\u62DF\\u5408\\u7ED3\\u679C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCloseDoubleClickCard,\n              className: \"text-gray-500 hover:text-gray-700 text-2xl font-bold leading-none\",\n              \"aria-label\": \"\\u5173\\u95ED\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 17\n          }, this), useMemo(() => {\n            if (!rawData || !grayScaleData.values.length || !brightnessBlocks.length || !doubleClickedCell) {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500\",\n                children: \"\\u9884\\u6D4B\\u6570\\u636E\\u5C1A\\u672A\\u751F\\u6210\\uFF0C\\u8BF7\\u7B49\\u5F85\\u6570\\u636E\\u5904\\u7406\\u5B8C\\u6210\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 28\n              }, this);\n            }\n\n            // 计算该位置的预测结果\n            const cellIndex = doubleClickedCell.row * 32 + doubleClickedCell.col;\n            const rawValue = rawData.values[cellIndex];\n            const centerPixelValues = brightnessBlocks.map(block => block.centerPixelValue);\n            const grayScaleValues = grayScaleData.values;\n            const allFittingResults = performAllFittings({\n              x: centerPixelValues,\n              y: grayScaleValues\n            });\n            const methodPredictions = {};\n            allFittingResults.forEach(fitting => {\n              if (isNaN(fitting.rSquared) || fitting.rSquared < 0) return;\n              let predictedGrayScale = 0;\n              switch (fitting.type) {\n                case 'logarithmic':\n                  if (rawValue > 0) {\n                    const [a, b] = fitting.coefficients;\n                    predictedGrayScale = a * Math.log(rawValue) + b;\n                  }\n                  break;\n                case 'exponential':\n                  const [a_exp, b_exp] = fitting.coefficients;\n                  predictedGrayScale = a_exp * Math.exp(b_exp * rawValue);\n                  break;\n                case 'polynomial':\n                  const [a_poly, b_poly, c_poly, d_poly] = fitting.coefficients;\n                  predictedGrayScale = a_poly * Math.pow(rawValue, 3) + b_poly * Math.pow(rawValue, 2) + c_poly * rawValue + d_poly;\n                  break;\n                case 'power':\n                  if (rawValue > 0) {\n                    const [a_pow, b_pow] = fitting.coefficients;\n                    predictedGrayScale = a_pow * Math.pow(rawValue, b_pow);\n                  }\n                  break;\n                case 'bivariate':\n                  const [a_biv, b_biv, c_biv] = fitting.coefficients;\n                  predictedGrayScale = a_biv * Math.pow(rawValue, 2) + b_biv * rawValue + c_biv;\n                  break;\n              }\n              methodPredictions[fitting.type] = {\n                predictedGrayScale,\n                formula: fitting.formula,\n                confidence: fitting.rSquared,\n                fittingType: fitting.type\n              };\n            });\n            const predictions = Object.entries(methodPredictions);\n            if (predictions.length === 0) {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500\",\n                children: \"\\u8BE5\\u4F4D\\u7F6E\\u6682\\u65E0\\u6709\\u6548\\u62DF\\u5408\\u7ED3\\u679C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 28\n              }, this);\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-50 p-4 rounded-lg\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray-600\",\n                    children: \"\\u4EAE\\u5EA6\\u503C:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 809,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-2 font-medium\",\n                    children: rawValue.toFixed(2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 810,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 808,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"font-medium text-gray-700\",\n                  children: \"\\u6240\\u6709\\u62DF\\u5408\\u65B9\\u6CD5\\u9884\\u6D4B\\u7ED3\\u679C:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 815,\n                  columnNumber: 25\n                }, this), predictions.map(([method, prediction]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-blue-50 p-4 rounded-lg border border-blue-200\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium text-gray-700\",\n                      children: getTypeLabel(method)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 819,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-lg font-bold text-blue-600\",\n                      children: prediction.predictedGrayScale.toFixed(6)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 822,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 818,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-600 mb-2\",\n                    children: [\"\\u7F6E\\u4FE1\\u5EA6(R\\xB2): \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: [(prediction.confidence * 100).toFixed(2), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 827,\n                      columnNumber: 40\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 826,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-500 font-mono bg-white p-2 rounded border\",\n                    children: prediction.formula\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 829,\n                    columnNumber: 29\n                  }, this)]\n                }, method, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 817,\n                  columnNumber: 27\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 814,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 21\n            }, this);\n          }, [doubleClickedCell, rawData, grayScaleData.values, brightnessBlocks])]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 9\n    }, this), predictionResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium\",\n          children: \"\\u9884\\u6D4B\\u7ED3\\u679C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportToExcel,\n          className: \"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm\",\n          children: \"\\u5BFC\\u51FA\\u5230Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 847,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\",\n        children: predictionResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gradient-to-br from-blue-50 to-indigo-100 p-4 rounded-lg border border-blue-200 hover:shadow-md transition-shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-medium text-gray-600\",\n              children: [\"\\u4F4D\\u7F6E: \", result.position]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 861,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-gray-600\",\n                children: \"\\u4EAE\\u5EA6\\u503C:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 866,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-medium\",\n                children: result.brightnessValue.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 867,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 pt-2 border-t border-blue-200\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs font-medium text-gray-700 mb-2\",\n                children: \"\\u5404\\u62DF\\u5408\\u65B9\\u6CD5\\u9884\\u6D4B\\u503C:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: Object.entries(result.predictions).map(([method, prediction]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-white rounded p-2 border\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center mb-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-xs font-medium text-gray-600\",\n                      children: getTypeLabel(method)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 877,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-xs text-blue-600 font-medium\",\n                      children: prediction.predictedGrayScale.toFixed(4)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 880,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 876,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500 mb-1\",\n                    children: [\"\\u7F6E\\u4FE1\\u5EA6: \", (prediction.confidence * 100).toFixed(1), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 884,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-400 break-all font-mono\",\n                    children: prediction.formula\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 887,\n                    columnNumber: 27\n                  }, this)]\n                }, method, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 875,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 873,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 871,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-4 bg-gray-50 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"font-medium mb-2\",\n          children: \"\\u9884\\u6D4B\\u7EDF\\u8BA1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-4 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: \"\\u9884\\u6D4B\\u6570\\u636E\\u70B9\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: predictionResults.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 905,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 903,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: \"\\u62DF\\u5408\\u65B9\\u6CD5\\u6570\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 908,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: predictionResults.length > 0 ? Object.keys(predictionResults[0].predictions).length : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 909,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: \"\\u6700\\u4F73\\u62DF\\u5408\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 914,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: bestFittingResult ? getTypeLabel(bestFittingResult.type) : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 915,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 913,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 9\n    }, this), !rawData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-2 text-yellow-800\",\n        children: \"\\u4F7F\\u7528\\u8BF4\\u660E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"text-sm text-yellow-700 space-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"1. \\u9996\\u5148\\u786E\\u4FDD\\u5DF2\\u4E0A\\u4F20\\u5E76\\u5904\\u7406\\u4E86\\u539F\\u59CB\\u6570\\u636E\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"2. \\u4E0A\\u4F20\\u5305\\u542BSheet3\\u5DE5\\u4F5C\\u8868\\u7684Excel\\u6587\\u4EF6\\uFF0C\\u76EE\\u6807\\u6570\\u636E\\u5E94\\u4F4D\\u4E8EB\\u5217\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"3. \\u7CFB\\u7EDF\\u5C06\\u81EA\\u52A8\\u9009\\u62E9\\u6700\\u4F73\\u62DF\\u5408\\u6A21\\u578B\\u8FDB\\u884C\\u9884\\u6D4B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"4. \\u751F\\u6210\\u9884\\u6D4B\\u7ED3\\u679C\\u540E\\u53EF\\u5BFC\\u51FA\\u5230Excel\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 926,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 556,\n    columnNumber: 5\n  }, this);\n};\n_s(TargetDataPrediction, \"Pek4YpmxJl/lS3mM7Ak9lN/LMc0=\");\n_c = TargetDataPrediction;\nexport default TargetDataPrediction;\nvar _c;\n$RefreshReg$(_c, \"TargetDataPrediction\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","XLSX","performAllFittings","jsxDEV","_jsxDEV","TargetDataPrediction","grayScaleData","brightnessBlocks","_s","_rawData$matrix$","_rawData$matrix$2","rawData","setRawData","predictionResults","setPredictionResults","bestFittingResult","setBestFittingResult","isLoading","setIsLoading","error","setError","doubleClickedCell","setDoubleClickedCell","generationProgress","setGenerationProgress","isGenerating","setIsGenerating","numToCol","num","result","String","fromCharCode","Math","floor","handleFileUpload","event","_event$target$files","file","target","files","reader","FileReader","onload","e","_e$target","data","Uint8Array","workbook","read","type","SheetNames","includes","Error","worksheet","Sheets","values","positions","startRow","endRow","startCol","endCol","cols","colToNum","col","i","length","charCodeAt","startColNum","endColNum","matrix","row","rowData","colNum","cellAddress","cell","v","undefined","value","parseFloat","toString","isNaN","push","setTimeout","generatePredictions","message","onerror","readAsArrayBuffer","handleDoubleClick","rowIndex","colIndex","handleCloseDoubleClickCard","doubleClickPredictionContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","cellIndex","rawValue","centerPixelValues","map","block","centerPixelValue","grayScaleValues","allFittingResults","x","y","methodPredictions","forEach","fitting","rSquared","predictedGrayScale","a","b","coefficients","log","a_exp","b_exp","exp","a_poly","b_poly","c_poly","d_poly","pow","a_pow","b_pow","a_biv","b_biv","c_biv","formula","confidence","fittingType","predictions","Object","entries","toFixed","method","prediction","getTypeLabel","Promise","resolve","bestFitting","reduce","best","current","totalValues","index","brightnessValue","position","progress","err","console","exportToExcel","utils","book_new","rows","colHeaders","originalMatrixData","originalWorksheet","aoa_to_sheet","book_append_sheet","allMethods","Set","keys","add","Array","from","methodMatrixData","dataIndex","methodWorksheet","detailData","detailWorksheet","fittingInfo","rmse","mae","maxError","fittingWs","Date","toISOString","slice","writeFile","labels","accept","onChange","id","htmlFor","min","flat","max","style","width","onClick","gridTemplateColumns","minValue","maxValue","normalizedValue","blueIntensity","round","backgroundColor","textColor","color","onDoubleClick","title","stopPropagation","_c","$RefreshReg$"],"sources":["D:/source/fitdata/fitdata-visualizer/src/components/TargetDataPrediction.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\nimport * as XLSX from 'xlsx';\nimport { FittingResult, performAllFittings } from '../utils/curveFitting';\n\ninterface RawData {\n  values: number[];\n  positions: string[];\n  matrix: number[][];\n}\n\ninterface PredictionResult {\n  position: string;\n  brightnessValue: number;\n  predictions: {\n    [key: string]: {\n      predictedGrayScale: number;\n      formula: string;\n      confidence: number;\n      fittingType: string;\n    }\n  };\n}\n\ninterface TargetDataPredictionProps {\n  grayScaleData: {\n    values: number[];\n    positions: string[];\n  };\n  brightnessBlocks: Array<{\n    label: string;\n    startRow: number;\n    endRow: number;\n    data: number[][];\n    centerPixelValue: number;\n    normalizedData?: number[][];\n  }>;\n}\n\nconst TargetDataPrediction: React.FC<TargetDataPredictionProps> = ({ grayScaleData, brightnessBlocks }) => {\n  const [rawData, setRawData] = useState<RawData | null>(null);\n  const [predictionResults, setPredictionResults] = useState<PredictionResult[]>([]);\n  const [bestFittingResult, setBestFittingResult] = useState<FittingResult | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const [doubleClickedCell, setDoubleClickedCell] = useState<{ row: number; col: number } | null>(null);\n  const [generationProgress, setGenerationProgress] = useState<number>(0);\n  const [isGenerating, setIsGenerating] = useState<boolean>(false);\n\n  // 将数字转换为Excel列名\n  const numToCol = (num: number): string => {\n    let result = '';\n    while (num > 0) {\n      num--;\n      result = String.fromCharCode(65 + (num % 26)) + result;\n      num = Math.floor(num / 26);\n    }\n    return result;\n  };\n\n  // 读取Excel Sheet3数据\n  const handleFileUpload = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const data = new Uint8Array(e.target?.result as ArrayBuffer);\n        const workbook = XLSX.read(data, { type: 'array' });\n        \n        // 检查是否有Sheet3\n        if (!workbook.SheetNames.includes('Sheet3')) {\n          throw new Error('未找到Sheet3工作表');\n        }\n        \n        const worksheet = workbook.Sheets['Sheet3'];\n        const values: number[] = [];\n        const positions: string[] = [];\n        \n        // 读取A2-AF21范围的原始数据（20行×32列）\n        const startRow = 2;\n        const endRow = 21;\n        const startCol = 'A';\n        const endCol = 'AF';\n        const cols = 32;\n        \n        // 将列字母转换为数字\n        const colToNum = (col: string): number => {\n          let result = 0;\n          for (let i = 0; i < col.length; i++) {\n            result = result * 26 + (col.charCodeAt(i) - 'A'.charCodeAt(0) + 1);\n          }\n          return result;\n        };\n        \n        const numToCol = (num: number): string => {\n          let result = '';\n          while (num > 0) {\n            num--;\n            result = String.fromCharCode('A'.charCodeAt(0) + (num % 26)) + result;\n            num = Math.floor(num / 26);\n          }\n          return result;\n        };\n        \n        const startColNum = colToNum(startCol);\n        const endColNum = colToNum(endCol);\n        \n        // 创建矩阵结构\n        const matrix: number[][] = [];\n        \n        // 按行读取数据\n        for (let row = startRow; row <= endRow; row++) {\n          const rowData: number[] = [];\n          for (let colNum = startColNum; colNum <= endColNum; colNum++) {\n            const col = numToCol(colNum);\n            const cellAddress = `${col}${row}`;\n            const cell = worksheet[cellAddress];\n            \n            if (cell && cell.v !== undefined && cell.v !== null && cell.v !== '') {\n              const value = typeof cell.v === 'number' ? cell.v : parseFloat(cell.v.toString());\n              if (!isNaN(value)) {\n                values.push(value);\n                positions.push(cellAddress);\n                rowData.push(value);\n              } else {\n                rowData.push(0);\n              }\n            } else {\n              rowData.push(0);\n            }\n          }\n          matrix.push(rowData);\n        }\n        \n        if (values.length === 0) {\n          throw new Error('Sheet3中未找到有效的原始数据');\n        }\n        \n        setRawData({ values, positions, matrix });\n        \n        // 自动生成预测结果\n      setTimeout(async () => {\n         await generatePredictions();\n       }, 500);\n      } catch (error) {\n        setError(error instanceof Error ? error.message : '文件读取失败');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    reader.onerror = () => {\n      setError('文件读取失败');\n      setIsLoading(false);\n    };\n    \n    reader.readAsArrayBuffer(file);\n  }, []);\n\n\n\n  // 处理双击事件\n  const handleDoubleClick = (rowIndex: number, colIndex: number) => {\n    setDoubleClickedCell({ row: rowIndex, col: colIndex });\n  };\n\n  // 关闭双击卡片\n  const handleCloseDoubleClickCard = () => {\n    setDoubleClickedCell(null);\n  };\n\n  // 计算双击卡片的预测结果\n  const doubleClickPredictionContent = useMemo(() => {\n    if (!rawData || !grayScaleData.values.length || !brightnessBlocks.length || !doubleClickedCell) {\n      return <p className=\"text-gray-500\">预测数据尚未生成，请等待数据处理完成</p>;\n    }\n    \n    // 计算该位置的预测结果\n    const cellIndex = doubleClickedCell.row * 32 + doubleClickedCell.col;\n    const rawValue = rawData.values[cellIndex];\n    \n    const centerPixelValues = brightnessBlocks.map(block => block.centerPixelValue);\n    const grayScaleValues = grayScaleData.values;\n    \n    const allFittingResults = performAllFittings({\n      x: centerPixelValues,\n      y: grayScaleValues\n    });\n    \n    const methodPredictions: { [key: string]: { predictedGrayScale: number; formula: string; confidence: number; fittingType: string } } = {};\n    \n    allFittingResults.forEach(fitting => {\n      if (isNaN(fitting.rSquared) || fitting.rSquared < 0) return;\n      \n      let predictedGrayScale = 0;\n      \n      switch (fitting.type) {\n        case 'logarithmic':\n          if (rawValue > 0) {\n            const [a, b] = fitting.coefficients;\n            predictedGrayScale = a * Math.log(rawValue) + b;\n          }\n          break;\n        case 'exponential':\n          const [a_exp, b_exp] = fitting.coefficients;\n          predictedGrayScale = a_exp * Math.exp(b_exp * rawValue);\n          break;\n        case 'polynomial':\n          const [a_poly, b_poly, c_poly, d_poly] = fitting.coefficients;\n          predictedGrayScale = a_poly * Math.pow(rawValue, 3) + \n                              b_poly * Math.pow(rawValue, 2) + \n                              c_poly * rawValue + d_poly;\n          break;\n        case 'power':\n          if (rawValue > 0) {\n            const [a_pow, b_pow] = fitting.coefficients;\n            predictedGrayScale = a_pow * Math.pow(rawValue, b_pow);\n          }\n          break;\n        case 'bivariate':\n          const [a_biv, b_biv, c_biv] = fitting.coefficients;\n          predictedGrayScale = a_biv * Math.pow(rawValue, 2) + \n                              b_biv * rawValue + c_biv;\n          break;\n      }\n      \n      methodPredictions[fitting.type] = {\n        predictedGrayScale,\n        formula: fitting.formula,\n        confidence: fitting.rSquared,\n        fittingType: fitting.type\n      };\n    });\n    \n    const predictions = Object.entries(methodPredictions);\n    if (predictions.length === 0) {\n      return <p className=\"text-gray-500\">该位置暂无有效拟合结果</p>;\n    }\n    \n    return (\n      <div className=\"space-y-4\">\n        <div className=\"bg-gray-50 p-4 rounded-lg\">\n          <div className=\"text-sm mb-2\">\n            <span className=\"text-gray-600\">亮度值:</span>\n            <span className=\"ml-2 font-medium\">{rawValue.toFixed(2)}</span>\n          </div>\n        </div>\n        \n        <div className=\"space-y-3\">\n          <h6 className=\"font-medium text-gray-700\">所有拟合方法预测结果:</h6>\n          {predictions.map(([method, prediction]) => (\n            <div key={method} className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <span className=\"font-medium text-gray-700\">\n                  {getTypeLabel(method)}\n                </span>\n                <span className=\"text-lg font-bold text-blue-600\">\n                  {prediction.predictedGrayScale.toFixed(6)}\n                </span>\n              </div>\n              <div className=\"text-sm text-gray-600 mb-2\">\n                置信度(R²): <span className=\"font-medium\">{(prediction.confidence * 100).toFixed(2)}%</span>\n              </div>\n              <div className=\"text-sm text-gray-500 font-mono bg-white p-2 rounded border\">\n                {prediction.formula}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }, [doubleClickedCell, rawData, grayScaleData.values, brightnessBlocks]);\n\n  // 生成预测结果\n  const generatePredictions = useCallback(async () => {\n    if (!rawData) {\n      setError('请先上传原始数据');\n      return;\n    }\n\n    if (!grayScaleData.values.length || !brightnessBlocks.length) {\n      setError('无法获取有效的拟合数据');\n      return;\n    }\n\n    setIsGenerating(true);\n    setGenerationProgress(0);\n    setError(null);\n\n    try {\n      // 步骤1: 数据验证 (10%)\n      setGenerationProgress(10);\n      await new Promise(resolve => setTimeout(resolve, 100));\n\n      // 提取中心像素值和灰阶值\n      const centerPixelValues = brightnessBlocks.map(block => block.centerPixelValue);\n      const grayScaleValues = grayScaleData.values;\n\n      if (centerPixelValues.length !== grayScaleValues.length) {\n        setError('拟合数据长度不匹配');\n        return;\n      }\n\n      // 步骤2: 执行拟合算法 (30%)\n      setGenerationProgress(30);\n      await new Promise(resolve => setTimeout(resolve, 200));\n\n      const allFittingResults = performAllFittings({\n        x: centerPixelValues,\n        y: grayScaleValues\n      });\n\n      // 步骤3: 找到最佳拟合结果 (50%)\n      setGenerationProgress(50);\n      await new Promise(resolve => setTimeout(resolve, 100));\n\n      const bestFitting = allFittingResults.reduce((best, current) => {\n        if (isNaN(current.rSquared) || current.rSquared < 0) return best;\n        if (!best || current.rSquared > best.rSquared) return current;\n        return best;\n      }, null as FittingResult | null);\n\n      if (!bestFitting) {\n        setError('无法获取有效的拟合结果');\n        return;\n      }\n\n      setBestFittingResult(bestFitting);\n\n      // 步骤4: 计算预测结果 (80%)\n      setGenerationProgress(80);\n      await new Promise(resolve => setTimeout(resolve, 300));\n\n      const totalValues = rawData.values.length;\n      const predictions: PredictionResult[] = [];\n\n      for (let index = 0; index < totalValues; index++) {\n        const rawValue = rawData.values[index];\n        // 计算对应的亮度值\n        let brightnessValue = rawValue; // 使用原始数据值作为亮度值\n\n        // 为每种拟合方法计算预测值\n        const methodPredictions: { [key: string]: { predictedGrayScale: number; formula: string; confidence: number; fittingType: string } } = {};\n        \n        allFittingResults.forEach(fitting => {\n          if (isNaN(fitting.rSquared) || fitting.rSquared < 0) return;\n          \n          let predictedGrayScale = 0;\n          \n          // 根据拟合类型计算预测值\n          switch (fitting.type) {\n            case 'logarithmic':\n              if (rawValue > 0) {\n                const [a, b] = fitting.coefficients;\n                predictedGrayScale = a * Math.log(rawValue) + b;\n              }\n              break;\n            case 'exponential':\n              const [a_exp, b_exp] = fitting.coefficients;\n              predictedGrayScale = a_exp * Math.exp(b_exp * rawValue);\n              break;\n            case 'polynomial':\n              const [a_poly, b_poly, c_poly, d_poly] = fitting.coefficients;\n              predictedGrayScale = a_poly * Math.pow(rawValue, 3) + \n                                  b_poly * Math.pow(rawValue, 2) + \n                                  c_poly * rawValue + d_poly;\n              break;\n            case 'power':\n              if (rawValue > 0) {\n                const [a_pow, b_pow] = fitting.coefficients;\n                predictedGrayScale = a_pow * Math.pow(rawValue, b_pow);\n              }\n              break;\n            case 'bivariate':\n              const [a_biv, b_biv, c_biv] = fitting.coefficients;\n              predictedGrayScale = a_biv * Math.pow(rawValue, 2) + \n                                  b_biv * rawValue + c_biv;\n              break;\n          }\n\n          methodPredictions[fitting.type] = {\n            predictedGrayScale,\n            formula: fitting.formula,\n            confidence: fitting.rSquared,\n            fittingType: fitting.type\n          };\n        });\n\n        predictions.push({\n          position: rawData.positions[index],\n          brightnessValue,\n          predictions: methodPredictions\n        });\n\n        // 更新进度 (80% - 95%)\n        const progress = 80 + Math.floor((index / totalValues) * 15);\n        setGenerationProgress(progress);\n        \n        // 每处理100个数据点暂停一下，让UI更新\n        if (index % 100 === 0) {\n          await new Promise(resolve => setTimeout(resolve, 10));\n        }\n      }\n\n      // 步骤5: 完成 (100%)\n      setGenerationProgress(100);\n      await new Promise(resolve => setTimeout(resolve, 200));\n\n      setPredictionResults(predictions);\n      setError(null);\n    } catch (err) {\n      console.error('预测生成错误:', err);\n      setError(err instanceof Error ? err.message : '预测生成失败');\n    } finally {\n      setIsGenerating(false);\n      setGenerationProgress(0);\n    }\n  }, [rawData, grayScaleData, brightnessBlocks]);\n\n  // 导出预测结果到Excel\n  const exportToExcel = useCallback(() => {\n    if (predictionResults.length === 0 || !rawData) {\n      setError('没有预测结果可导出');\n      return;\n    }\n\n    const workbook = XLSX.utils.book_new();\n    \n    // 创建矩阵格式的预测结果工作表\n    const rows = 20; // A2-AF21 共20行\n    const cols = 32; // A-AF 共32列\n    \n    // 将列数字转换为字母的辅助函数\n    const numToCol = (num: number): string => {\n      let result = '';\n      while (num > 0) {\n        num--;\n        result = String.fromCharCode('A'.charCodeAt(0) + (num % 26)) + result;\n        num = Math.floor(num / 26);\n      }\n      return result;\n    };\n    \n    // 创建列标题 (A-AF)\n    const colHeaders: string[] = [];\n    for (let i = 0; i < cols; i++) {\n      colHeaders.push(numToCol(i + 1));\n    }\n    \n    // 创建原始数据矩阵工作表\n    const originalMatrixData = [];\n    originalMatrixData.push(['', ...colHeaders]);\n    \n    for (let row = 0; row < rows; row++) {\n      const rowData: (string | number)[] = [row + 2]; // 行号从2开始\n      for (let col = 0; col < cols; col++) {\n        if (row < rawData.matrix.length && col < rawData.matrix[row].length) {\n          rowData.push(rawData.matrix[row][col]);\n        } else {\n          rowData.push('');\n        }\n      }\n      originalMatrixData.push(rowData);\n    }\n    \n    const originalWorksheet = XLSX.utils.aoa_to_sheet(originalMatrixData);\n    XLSX.utils.book_append_sheet(workbook, originalWorksheet, '原始数据');\n    \n    // 获取所有拟合方法\n    const allMethods = new Set<string>();\n    predictionResults.forEach(result => {\n      Object.keys(result.predictions).forEach(method => allMethods.add(method));\n    });\n    \n    // 为每种拟合方法创建单独的预测结果矩阵\n    Array.from(allMethods).forEach(method => {\n      const methodMatrixData: (string | number)[][] = [];\n      methodMatrixData.push(['', ...colHeaders]);\n      \n      for (let row = 0; row < rows; row++) {\n        const rowData: (string | number)[] = [row + 2]; // 行号从2开始\n        for (let col = 0; col < cols; col++) {\n          const dataIndex = row * cols + col;\n          if (dataIndex < predictionResults.length && predictionResults[dataIndex].predictions[method]) {\n            rowData.push(parseFloat(predictionResults[dataIndex].predictions[method].predictedGrayScale.toFixed(6)));\n          } else {\n            rowData.push('');\n          }\n        }\n        methodMatrixData.push(rowData);\n      }\n      \n      const methodWorksheet = XLSX.utils.aoa_to_sheet(methodMatrixData);\n      XLSX.utils.book_append_sheet(workbook, methodWorksheet, getTypeLabel(method));\n    });\n    \n    // 创建详细预测结果工作表\n    const detailData: any[] = [];\n    detailData.push(['位置', '亮度值', '拟合方法', '预测灰阶值', '置信度(R²)', '拟合公式']);\n    \n    predictionResults.forEach(result => {\n      Object.entries(result.predictions).forEach(([method, prediction]) => {\n        detailData.push([\n          result.position,\n          result.brightnessValue.toFixed(2),\n          getTypeLabel(method),\n          prediction.predictedGrayScale.toFixed(6),\n          prediction.confidence.toFixed(6),\n          prediction.formula\n        ]);\n      });\n    });\n    \n    const detailWorksheet = XLSX.utils.aoa_to_sheet(detailData);\n    XLSX.utils.book_append_sheet(workbook, detailWorksheet, '详细结果');\n    \n    // 添加拟合信息工作表\n    if (bestFittingResult) {\n      const fittingInfo = [\n        ['拟合信息', ''],\n        ['最佳拟合类型', getTypeLabel(bestFittingResult.type)],\n        ['拟合公式', bestFittingResult.formula],\n        ['R²值', bestFittingResult.rSquared.toFixed(6)],\n        ['RMSE', bestFittingResult.rmse.toFixed(6)],\n        ['MAE', bestFittingResult.mae.toFixed(6)],\n        ['最大误差', bestFittingResult.maxError.toFixed(6)]\n      ];\n      \n      const fittingWs = XLSX.utils.aoa_to_sheet(fittingInfo);\n      XLSX.utils.book_append_sheet(workbook, fittingWs, '拟合信息');\n    }\n    \n    // 下载文件\n    const fileName = `原始数据预测结果_${new Date().toISOString().slice(0, 10)}.xlsx`;\n    XLSX.writeFile(workbook, fileName);\n  }, [predictionResults, bestFittingResult, rawData]);\n\n  // 获取拟合类型标签\n  const getTypeLabel = (type: string) => {\n    const labels: { [key: string]: string } = {\n      'logarithmic': '对数拟合',\n      'exponential': '指数拟合',\n      'polynomial': '三次多项式拟合',\n      'power': '幂函数拟合',\n      'bivariate': '二次多项式拟合'\n    };\n    return labels[type] || type;\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <h3 className=\"text-lg font-semibold mb-6\">原始数据预测</h3>\n      \n      {/* 文件上传区域 */}\n      <div className=\"mb-6\">\n        <h4 className=\"font-medium mb-3\">上传原始数据文件 (Sheet3)</h4>\n        <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\n          <input\n            type=\"file\"\n            accept=\".xlsx,.xls\"\n            onChange={handleFileUpload}\n            className=\"hidden\"\n            id=\"raw-file-upload\"\n          />\n          <label\n            htmlFor=\"raw-file-upload\"\n            className=\"cursor-pointer inline-flex items-center px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\"\n          >\n            选择Excel文件\n          </label>\n          <p className=\"mt-2 text-sm text-gray-500\">\n            请选择包含Sheet3工作表的Excel文件，原始数据应位于A2-AF21范围\n          </p>\n        </div>\n      </div>\n\n      {/* 加载状态 */}\n      {isLoading && (\n        <div className=\"mb-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n          <p className=\"text-blue-700\">正在读取文件...</p>\n        </div>\n      )}\n\n      {/* 错误信息 */}\n      {error && (\n        <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <p className=\"text-red-700\">{error}</p>\n        </div>\n      )}\n\n      {/* 原始数据概览 */}\n      {rawData && (\n        <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n          <h4 className=\"font-medium mb-2\">原始数据概览</h4>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">矩阵维度:</span>\n              <span className=\"ml-2 font-medium\">{rawData.matrix.length} × {rawData.matrix[0]?.length || 0}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">数值范围:</span>\n              <span className=\"ml-2 font-medium\">\n                {Math.min(...rawData.matrix.flat()).toFixed(2)} - {Math.max(...rawData.matrix.flat()).toFixed(2)}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 预测生成进度 */}\n      {isGenerating && (\n        <div className=\"mb-6 bg-blue-50 p-4 rounded-lg border border-blue-200\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <h4 className=\"font-medium text-blue-800\">正在生成预测数据...</h4>\n            <span className=\"text-sm font-medium text-blue-600\">{generationProgress}%</span>\n          </div>\n          <div className=\"w-full bg-blue-200 rounded-full h-3\">\n            <div \n              className=\"bg-blue-600 h-3 rounded-full transition-all duration-300 ease-out\"\n              style={{ width: `${generationProgress}%` }}\n            ></div>\n          </div>\n          <div className=\"mt-2 text-sm text-blue-700\">\n            {generationProgress <= 10 && '正在验证数据...'}\n            {generationProgress > 10 && generationProgress <= 30 && '正在执行拟合算法...'}\n            {generationProgress > 30 && generationProgress <= 50 && '正在分析最佳拟合结果...'}\n            {generationProgress > 50 && generationProgress <= 95 && '正在计算预测结果...'}\n            {generationProgress > 95 && '即将完成...'}\n          </div>\n        </div>\n      )}\n\n      {/* 生成预测按钮 */}\n      {rawData && grayScaleData.values.length > 0 && brightnessBlocks.length > 0 && (\n        <div className=\"mb-6\">\n          <button\n            onClick={generatePredictions}\n            className=\"px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\"\n          >\n            生成预测结果\n          </button>\n        </div>\n      )}\n\n      {/* 最佳拟合信息 */}\n      {bestFittingResult && (\n        <div className=\"mb-6 p-4 bg-blue-50 rounded-lg\">\n          <h4 className=\"font-medium mb-2\">使用的最佳拟合模型</h4>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">拟合类型：</span>\n              <span className=\"font-medium\">{getTypeLabel(bestFittingResult.type)}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">R²值：</span>\n              <span className=\"font-medium\">{bestFittingResult.rSquared.toFixed(6)}</span>\n            </div>\n            <div className=\"col-span-2\">\n              <span className=\"text-gray-600\">拟合公式：</span>\n              <span className=\"font-medium font-mono\">{bestFittingResult.formula}</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 原始数据热力图 */}\n      {rawData && (\n        <div className=\"mb-6\">\n          <h4 className=\"font-medium mb-3\">原始数据热力图</h4>\n          \n          {/* 颜色图例 */}\n          <div className=\"mb-3 flex items-center gap-4\">\n            <span className=\"text-sm text-gray-600\">颜色图例:</span>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-4 h-4 bg-blue-900 border border-gray-300\"></div>\n              <span className=\"text-xs text-gray-600\">高值</span>\n              <div className=\"w-20 h-4 bg-gradient-to-r from-blue-900 via-blue-400 to-blue-100 border border-gray-300\"></div>\n              <div className=\"w-4 h-4 bg-blue-100 border border-gray-300\"></div>\n              <span className=\"text-xs text-gray-600\">低值</span>\n            </div>\n            <div className=\"text-xs text-gray-500\">\n              范围: {Math.min(...rawData.matrix.flat()).toFixed(2)} - {Math.max(...rawData.matrix.flat()).toFixed(2)}\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-4 rounded-lg border border-gray-200 overflow-x-auto\">\n            <div className=\"grid gap-0.5\" style={{ gridTemplateColumns: `repeat(${rawData.matrix[0]?.length || 32}, minmax(24px, 1fr))` }}>\n              {rawData.matrix.map((row, rowIndex) =>\n                row.map((value, colIndex) => {\n                  const minValue = Math.min(...rawData.matrix.flat());\n                  const maxValue = Math.max(...rawData.matrix.flat());\n                  const normalizedValue = (value - minValue) / (maxValue - minValue);\n                  \n                  // 使用蓝色渐变色彩映射\n                  const blueIntensity = Math.round(normalizedValue * 200 + 55); // 55-255范围\n                  const backgroundColor = `rgb(${255 - blueIntensity}, ${255 - blueIntensity}, 255)`;\n                  \n                  // 根据背景色调整文字颜色\n                  const textColor = normalizedValue > 0.5 ? 'white' : 'black';\n                  \n                  return (\n                    <div\n                      key={`${rowIndex}-${colIndex}`}\n                      className=\"aspect-square border border-gray-200 cursor-pointer hover:border-blue-600 hover:border-2 transition-all duration-200 flex items-center justify-center text-xs font-medium hover:shadow-md\"\n                      style={{ backgroundColor, color: textColor }}\n\n                      onDoubleClick={() => handleDoubleClick(rowIndex, colIndex)}\n                      title={`位置: ${numToCol(colIndex + 1)}${rowIndex + 2}, 值: ${value.toFixed(2)}`}\n                    >\n                      {value.toFixed(1)}\n                    </div>\n                  );\n                })\n              )}\n            </div>\n          </div>\n\n          \n          {/* 双击拟合结果卡片 */}\n          {doubleClickedCell && (\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\" onClick={handleCloseDoubleClickCard}>\n              <div className=\"bg-white rounded-lg p-6 max-w-2xl w-full mx-4 max-h-[80vh] overflow-y-auto\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h5 className=\"text-lg font-semibold\">位置 {numToCol(doubleClickedCell.col + 1)}{doubleClickedCell.row + 2} 详细拟合结果</h5>\n                  <button\n                    onClick={handleCloseDoubleClickCard}\n                    className=\"text-gray-500 hover:text-gray-700 text-2xl font-bold leading-none\"\n                    aria-label=\"关闭\"\n                  >\n                    ×\n                  </button>\n                </div>\n                {useMemo(() => {\n                  if (!rawData || !grayScaleData.values.length || !brightnessBlocks.length || !doubleClickedCell) {\n                    return <p className=\"text-gray-500\">预测数据尚未生成，请等待数据处理完成</p>;\n                  }\n                  \n                  // 计算该位置的预测结果\n                  const cellIndex = doubleClickedCell.row * 32 + doubleClickedCell.col;\n                  const rawValue = rawData.values[cellIndex];\n                  \n                  const centerPixelValues = brightnessBlocks.map(block => block.centerPixelValue);\n                  const grayScaleValues = grayScaleData.values;\n                  \n                  const allFittingResults = performAllFittings({\n                    x: centerPixelValues,\n                    y: grayScaleValues\n                  });\n                  \n                  const methodPredictions: { [key: string]: { predictedGrayScale: number; formula: string; confidence: number; fittingType: string } } = {};\n                  \n                  allFittingResults.forEach(fitting => {\n                    if (isNaN(fitting.rSquared) || fitting.rSquared < 0) return;\n                    \n                    let predictedGrayScale = 0;\n                    \n                    switch (fitting.type) {\n                      case 'logarithmic':\n                        if (rawValue > 0) {\n                          const [a, b] = fitting.coefficients;\n                          predictedGrayScale = a * Math.log(rawValue) + b;\n                        }\n                        break;\n                      case 'exponential':\n                        const [a_exp, b_exp] = fitting.coefficients;\n                        predictedGrayScale = a_exp * Math.exp(b_exp * rawValue);\n                        break;\n                      case 'polynomial':\n                        const [a_poly, b_poly, c_poly, d_poly] = fitting.coefficients;\n                        predictedGrayScale = a_poly * Math.pow(rawValue, 3) + \n                                            b_poly * Math.pow(rawValue, 2) + \n                                            c_poly * rawValue + d_poly;\n                        break;\n                      case 'power':\n                        if (rawValue > 0) {\n                          const [a_pow, b_pow] = fitting.coefficients;\n                          predictedGrayScale = a_pow * Math.pow(rawValue, b_pow);\n                        }\n                        break;\n                      case 'bivariate':\n                        const [a_biv, b_biv, c_biv] = fitting.coefficients;\n                        predictedGrayScale = a_biv * Math.pow(rawValue, 2) + \n                                            b_biv * rawValue + c_biv;\n                        break;\n                    }\n                    \n                    methodPredictions[fitting.type] = {\n                      predictedGrayScale,\n                      formula: fitting.formula,\n                      confidence: fitting.rSquared,\n                      fittingType: fitting.type\n                    };\n                  });\n                  \n                  const predictions = Object.entries(methodPredictions);\n                  if (predictions.length === 0) {\n                    return <p className=\"text-gray-500\">该位置暂无有效拟合结果</p>;\n                  }\n                  \n                  return (\n                    <div className=\"space-y-4\">\n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <div className=\"text-sm mb-2\">\n                          <span className=\"text-gray-600\">亮度值:</span>\n                          <span className=\"ml-2 font-medium\">{rawValue.toFixed(2)}</span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"space-y-3\">\n                        <h6 className=\"font-medium text-gray-700\">所有拟合方法预测结果:</h6>\n                        {predictions.map(([method, prediction]) => (\n                          <div key={method} className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n                            <div className=\"flex justify-between items-center mb-2\">\n                              <span className=\"font-medium text-gray-700\">\n                                {getTypeLabel(method)}\n                              </span>\n                              <span className=\"text-lg font-bold text-blue-600\">\n                                {prediction.predictedGrayScale.toFixed(6)}\n                              </span>\n                            </div>\n                            <div className=\"text-sm text-gray-600 mb-2\">\n                              置信度(R²): <span className=\"font-medium\">{(prediction.confidence * 100).toFixed(2)}%</span>\n                            </div>\n                            <div className=\"text-sm text-gray-500 font-mono bg-white p-2 rounded border\">\n                              {prediction.formula}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  );\n                }, [doubleClickedCell, rawData, grayScaleData.values, brightnessBlocks])}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* 预测结果 */}\n      {predictionResults.length > 0 && (\n        <div className=\"mb-6\">\n          <div className=\"flex justify-between items-center mb-3\">\n            <h4 className=\"font-medium\">预测结果</h4>\n            <button\n              onClick={exportToExcel}\n              className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm\"\n            >\n              导出到Excel\n            </button>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n            {predictionResults.map((result, index) => (\n              <div key={index} className=\"bg-gradient-to-br from-blue-50 to-indigo-100 p-4 rounded-lg border border-blue-200 hover:shadow-md transition-shadow\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm font-medium text-gray-600\">位置: {result.position}</span>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-gray-600\">亮度值:</span>\n                    <span className=\"text-sm font-medium\">{result.brightnessValue.toFixed(2)}</span>\n                  </div>\n                  \n                  {/* 显示所有拟合方法的预测结果 */}\n                  <div className=\"mt-3 pt-2 border-t border-blue-200\">\n                    <div className=\"text-xs font-medium text-gray-700 mb-2\">各拟合方法预测值:</div>\n                    <div className=\"space-y-2\">\n                      {Object.entries(result.predictions).map(([method, prediction]) => (\n                        <div key={method} className=\"bg-white rounded p-2 border\">\n                          <div className=\"flex justify-between items-center mb-1\">\n                            <span className=\"text-xs font-medium text-gray-600\">\n                              {getTypeLabel(method)}\n                            </span>\n                            <span className=\"text-xs text-blue-600 font-medium\">\n                              {prediction.predictedGrayScale.toFixed(4)}\n                            </span>\n                          </div>\n                          <div className=\"text-xs text-gray-500 mb-1\">\n                            置信度: {(prediction.confidence * 100).toFixed(1)}%\n                          </div>\n                          <div className=\"text-xs text-gray-400 break-all font-mono\">\n                            {prediction.formula}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          {/* 统计信息 */}\n          <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n            <h5 className=\"font-medium mb-2\">预测统计</h5>\n            <div className=\"grid grid-cols-3 gap-4 text-sm\">\n              <div>\n                <span className=\"text-gray-600\">预测数据点：</span>\n                <span className=\"font-medium\">{predictionResults.length}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">拟合方法数：</span>\n                <span className=\"font-medium\">\n                  {predictionResults.length > 0 ? Object.keys(predictionResults[0].predictions).length : 0}\n                </span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">最佳拟合：</span>\n                <span className=\"font-medium\">\n                  {bestFittingResult ? getTypeLabel(bestFittingResult.type) : 'N/A'}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 使用说明 */}\n      {!rawData && (\n        <div className=\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n          <h4 className=\"font-medium mb-2 text-yellow-800\">使用说明</h4>\n          <ul className=\"text-sm text-yellow-700 space-y-1\">\n            <li>1. 首先确保已上传并处理了原始数据文件</li>\n            <li>2. 上传包含Sheet3工作表的Excel文件，目标数据应位于B列</li>\n            <li>3. 系统将自动选择最佳拟合模型进行预测</li>\n            <li>4. 生成预测结果后可导出到Excel文件</li>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TargetDataPrediction;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}