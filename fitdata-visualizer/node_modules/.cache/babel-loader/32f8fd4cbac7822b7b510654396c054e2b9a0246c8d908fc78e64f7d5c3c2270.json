{"ast":null,"code":"import React,{useState,useCallback,useMemo}from'react';import*as XLSX from'xlsx';import{performAllFittings}from'../utils/curveFitting';import{parseExcelData}from'../utils/dataParser';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TargetDataPrediction=_ref=>{var _rawData$matrix$,_rawData$matrix$2,_rawData$matrix$3,_rawData$matrix$4,_rawData$matrix$5;let{grayScaleData,brightnessBlocks}=_ref;const[rawData,setRawData]=useState(null);const[predictionResults,setPredictionResults]=useState([]);const[bestFittingResult,setBestFittingResult]=useState(null);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);// 本地状态用于存储从文件解析的数据\nconst[localGrayScaleData,setLocalGrayScaleData]=useState(null);const[localBrightnessBlocks,setLocalBrightnessBlocks]=useState(null);const[doubleClickedCell,setDoubleClickedCell]=useState(null);const[generationProgress,setGenerationProgress]=useState(0);const[isGenerating,setIsGenerating]=useState(false);const[cachedPredictionResults,setCachedPredictionResults]=useState(null);// 获取拟合类型标签\nconst getTypeLabel=type=>{const labels={'logarithmic':'对数拟合','exponential':'指数拟合','polynomial':'三次多项式拟合','power':'幂函数拟合','bivariate':'二次多项式拟合'};return labels[type]||type;};// 将数字转换为Excel列名\nconst numToCol=num=>{let result='';while(num>0){num--;result=String.fromCharCode(65+num%26)+result;num=Math.floor(num/26);}return result;};// 读取Excel Sheet3数据\nconst handleFileUpload=useCallback(async event=>{var _event$target$files;const file=(_event$target$files=event.target.files)===null||_event$target$files===void 0?void 0:_event$target$files[0];if(!file)return;setIsLoading(true);setError(null);try{// 清除缓存的预测结果\nsetCachedPredictionResults(null);// 使用parseExcelData解析完整数据\nconst parsedData=await parseExcelData(file);// 更新本地的grayScaleData和brightnessBlocks\nsetLocalGrayScaleData(parsedData.grayScale);setLocalBrightnessBlocks(parsedData.brightnessBlocks);// 设置原始数据（从Sheet3读取）\nconst data=await file.arrayBuffer();const workbook=XLSX.read(new Uint8Array(data),{type:'array'});// 检查是否有Sheet3\nif(!workbook.SheetNames.includes('Sheet3')){throw new Error('未找到Sheet3工作表');}const worksheet=workbook.Sheets['Sheet3'];const values=[];const positions=[];// 读取A2-AF21范围的原始数据（20行×32列）\nconst startRow=2;const endRow=21;const startCol='A';const endCol='AF';// 将列字母转换为数字\nconst colToNum=col=>{let result=0;for(let i=0;i<col.length;i++){result=result*26+(col.charCodeAt(i)-'A'.charCodeAt(0)+1);}return result;};const numToCol=num=>{let result='';while(num>0){num--;result=String.fromCharCode('A'.charCodeAt(0)+num%26)+result;num=Math.floor(num/26);}return result;};const startColNum=colToNum(startCol);const endColNum=colToNum(endCol);// 创建矩阵结构\nconst matrix=[];// 按行读取数据\nfor(let row=startRow;row<=endRow;row++){const rowData=[];for(let colNum=startColNum;colNum<=endColNum;colNum++){const col=numToCol(colNum);const cellAddress=\"\".concat(col).concat(row);const cell=worksheet[cellAddress];if(cell&&cell.v!==undefined&&cell.v!==null&&cell.v!==''){const value=typeof cell.v==='number'?cell.v:parseFloat(cell.v.toString());if(!isNaN(value)){values.push(value);positions.push(cellAddress);rowData.push(value);}else{rowData.push(0);}}else{rowData.push(0);}}matrix.push(rowData);}if(values.length===0){throw new Error('Sheet3中未找到有效的原始数据');}setRawData({values,positions,matrix});// 自动生成预测结果（延迟确保状态更新完成）\nsetTimeout(async()=>{await generatePredictions();},100);}catch(error){setError(error instanceof Error?error.message:'文件读取失败');}finally{setIsLoading(false);}},[]);// 获取颜色值\nconst getColor=value=>{if(!rawData||!rawData.matrix||rawData.matrix.length===0){return'rgb(255, 255, 255)';}const minValue=Math.min(...rawData.matrix.flat());const maxValue=Math.max(...rawData.matrix.flat());if(maxValue===minValue)return'rgb(255, 255, 255)';const normalized=(value-minValue)/(maxValue-minValue);const intensity=Math.floor(normalized*255);// 使用蓝色到红色的渐变\nconst red=intensity;const blue=255-intensity;const green=Math.floor(128*(1-Math.abs(normalized-0.5)*2));return\"rgb(\".concat(red,\", \").concat(green,\", \").concat(blue,\")\");};// 处理双击事件\nconst handleDoubleClick=useCallback((rowIndex,colIndex)=>{// 如果没有缓存的预测结果，提示用户先生成预测数据\nif(!cachedPredictionResults){setError('请先生成预测数据后再查看详细结果');return;}setDoubleClickedCell({row:rowIndex,col:colIndex});},[cachedPredictionResults]);// 关闭双击卡片\nconst handleCloseDoubleClickCard=useCallback(()=>{setDoubleClickedCell(null);},[]);// 计算双击卡片的预测结果\nconst doubleClickPredictionContent=useMemo(()=>{// 使用本地数据（如果有）或传入的props数据\nconst currentGrayScaleData=localGrayScaleData||grayScaleData;const currentBrightnessBlocks=localBrightnessBlocks||brightnessBlocks;if(!rawData||!currentGrayScaleData.values.length||!currentBrightnessBlocks.length||!doubleClickedCell){return/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"\\u9884\\u6D4B\\u6570\\u636E\\u5C1A\\u672A\\u751F\\u6210\\uFF0C\\u8BF7\\u7B49\\u5F85\\u6570\\u636E\\u5904\\u7406\\u5B8C\\u6210\"});}// 使用缓存的预测结果，如果没有缓存则返回提示\nif(!cachedPredictionResults){return/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"\\u8BF7\\u5148\\u751F\\u6210\\u9884\\u6D4B\\u6570\\u636E\"});}// 直接从缓存中读取该位置的预测结果\nconst cellIndex=doubleClickedCell.row*32+doubleClickedCell.col;const cachedResult=cachedPredictionResults[cellIndex];if(!cachedResult){return/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"\\u8BE5\\u4F4D\\u7F6E\\u6682\\u65E0\\u6709\\u6548\\u62DF\\u5408\\u7ED3\\u679C\"});}const{rawValue,methodPredictions}=cachedResult;const predictions=Object.entries(methodPredictions);if(predictions.length===0){return/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"\\u8BE5\\u4F4D\\u7F6E\\u6682\\u65E0\\u6709\\u6548\\u62DF\\u5408\\u7ED3\\u679C\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 p-4 rounded-lg\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"\\u4EAE\\u5EA6\\u503C:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-2 font-medium\",children:rawValue.toFixed(2)})]})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h6\",{className:\"font-medium text-gray-700 mb-3\",children:\"\\u6240\\u6709\\u62DF\\u5408\\u65B9\\u6CD5\\u9884\\u6D4B\\u7ED3\\u679C:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"w-full border-collapse border border-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"bg-gray-100\",children:[/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left font-medium\",children:\"\\u62DF\\u5408\\u7C7B\\u578B\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left font-medium\",children:\"\\u9884\\u6D4B\\u7ED3\\u679C\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left font-medium\",children:\"\\u7F6E\\u4FE1\\u5EA6(R\\xB2)\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left font-medium\",children:\"\\u62DF\\u5408\\u516C\\u5F0F\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:predictions.map(_ref2=>{let[method,prediction]=_ref2;const pred=prediction;return/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2\",children:/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-gray-700\",children:getTypeLabel(method)})}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-lg font-bold text-blue-600\",children:pred.predictedGrayScale.toFixed(6)})}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium\",children:[(pred.confidence*100).toFixed(2),\"%\"]})}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-mono text-gray-600 max-w-xs break-all\",children:pred.formula})})]},method);})})]})})]})]});},[doubleClickedCell,cachedPredictionResults,localGrayScaleData,localBrightnessBlocks,grayScaleData,brightnessBlocks,rawData,getTypeLabel]);// 生成预测结果\nconst generatePredictions=useCallback(async()=>{if(!rawData){setError('请先上传原始数据');return;}// 使用本地数据（如果有）或传入的props数据\nconst currentGrayScaleData=localGrayScaleData||grayScaleData;const currentBrightnessBlocks=localBrightnessBlocks||brightnessBlocks;if(!currentGrayScaleData.values.length||!currentBrightnessBlocks.length){setError('无法获取有效的拟合数据');return;}setIsGenerating(true);setGenerationProgress(0);setError(null);try{// 步骤1: 数据验证 (10%)\nsetGenerationProgress(10);await new Promise(resolve=>setTimeout(resolve,100));// 提取中心像素值和灰阶值\nconst centerPixelValues=currentBrightnessBlocks.map(block=>block.centerPixelValue);const grayScaleValues=currentGrayScaleData.values;if(centerPixelValues.length!==grayScaleValues.length){setError('拟合数据长度不匹配');return;}// 步骤2: 执行拟合算法 (30%)\nsetGenerationProgress(30);await new Promise(resolve=>setTimeout(resolve,200));const allFittingResults=performAllFittings({x:centerPixelValues,y:grayScaleValues});// 拟合结果已获取，继续处理预测\n// 步骤3: 找到最佳拟合结果 (50%)\nsetGenerationProgress(50);await new Promise(resolve=>setTimeout(resolve,100));const bestFitting=allFittingResults.reduce((best,current)=>{if(isNaN(current.rSquared)||current.rSquared<0)return best;if(!best||current.rSquared>best.rSquared)return current;return best;},null);if(!bestFitting){setError('无法获取有效的拟合结果');return;}setBestFittingResult(bestFitting);// 步骤4: 计算预测结果 (80%)\nsetGenerationProgress(80);await new Promise(resolve=>setTimeout(resolve,300));const totalValues=rawData.values.length;const predictions=[];const predictionCache=[];for(let index=0;index<totalValues;index++){const rawValue=rawData.values[index];// 计算对应的亮度值\nlet brightnessValue=rawValue;// 使用原始数据值作为亮度值\n// 为每种拟合方法计算预测值\nconst methodPredictions={};allFittingResults.forEach(fitting=>{if(isNaN(fitting.rSquared)||fitting.rSquared<0)return;let predictedGrayScale=0;// 根据拟合类型计算预测值\nswitch(fitting.type){case'logarithmic':if(rawValue>0){const[a,b]=fitting.coefficients;predictedGrayScale=a*Math.log(rawValue)+b;}break;case'exponential':const[a_exp,b_exp]=fitting.coefficients;predictedGrayScale=a_exp*Math.exp(b_exp*rawValue);break;case'polynomial':const[a_poly,b_poly,c_poly,d_poly]=fitting.coefficients;predictedGrayScale=a_poly*Math.pow(rawValue,3)+b_poly*Math.pow(rawValue,2)+c_poly*rawValue+d_poly;break;case'power':if(rawValue>0){const[a_pow,b_pow]=fitting.coefficients;predictedGrayScale=a_pow*Math.pow(rawValue,b_pow);}break;case'bivariate':const[a_biv,b_biv,c_biv]=fitting.coefficients;predictedGrayScale=a_biv*Math.pow(rawValue,2)+b_biv*rawValue+c_biv;break;}methodPredictions[fitting.type]={predictedGrayScale,formula:fitting.formula,confidence:fitting.rSquared,fittingType:fitting.type};});predictions.push({position:rawData.positions[index],brightnessValue,predictions:methodPredictions});// 缓存该位置的预测结果供双击功能使用\npredictionCache.push({rawValue,methodPredictions});// 更新进度 (80% - 95%)\nconst progress=80+Math.floor(index/totalValues*15);setGenerationProgress(progress);// 每处理100个数据点暂停一下，让UI更新\nif(index%100===0){await new Promise(resolve=>setTimeout(resolve,10));}}// 缓存预测结果\nsetCachedPredictionResults(predictionCache);// 步骤5: 完成 (100%)\nsetGenerationProgress(100);await new Promise(resolve=>setTimeout(resolve,200));setPredictionResults(predictions);setError(null);}catch(err){console.error('预测生成错误:',err);setError(err instanceof Error?err.message:'预测生成失败');}finally{setIsGenerating(false);setGenerationProgress(0);}},[rawData,grayScaleData,brightnessBlocks,localGrayScaleData,localBrightnessBlocks,getTypeLabel]);// 导出预测结果到Excel\nconst exportToExcel=useCallback(()=>{if(predictionResults.length===0||!rawData){setError('没有预测结果可导出');return;}const workbook=XLSX.utils.book_new();// 创建矩阵格式的预测结果工作表\nconst rows=20;// A2-AF21 共20行\nconst cols=32;// A-AF 共32列\n// 将列数字转换为字母的辅助函数\nconst numToCol=num=>{let result='';while(num>0){num--;result=String.fromCharCode('A'.charCodeAt(0)+num%26)+result;num=Math.floor(num/26);}return result;};// 创建列标题 (A-AF)\nconst colHeaders=[];for(let i=0;i<cols;i++){colHeaders.push(numToCol(i+1));}// 创建原始数据矩阵工作表\nconst originalMatrixData=[];originalMatrixData.push(['',...colHeaders]);for(let row=0;row<rows;row++){const rowData=[row+2];// 行号从2开始\nfor(let col=0;col<cols;col++){if(row<rawData.matrix.length&&col<rawData.matrix[row].length){rowData.push(rawData.matrix[row][col]);}else{rowData.push('');}}originalMatrixData.push(rowData);}const originalWorksheet=XLSX.utils.aoa_to_sheet(originalMatrixData);XLSX.utils.book_append_sheet(workbook,originalWorksheet,'原始数据');// 获取所有拟合方法\nconst allMethods=new Set();predictionResults.forEach(result=>{Object.keys(result.predictions).forEach(method=>allMethods.add(method));});// 为每种拟合方法创建单独的预测结果矩阵\nArray.from(allMethods).forEach(method=>{const methodMatrixData=[];methodMatrixData.push(['',...colHeaders]);for(let row=0;row<rows;row++){const rowData=[row+2];// 行号从2开始\nfor(let col=0;col<cols;col++){const dataIndex=row*cols+col;if(dataIndex<predictionResults.length&&predictionResults[dataIndex].predictions[method]){rowData.push(parseFloat(predictionResults[dataIndex].predictions[method].predictedGrayScale.toFixed(6)));}else{rowData.push('');}}methodMatrixData.push(rowData);}const methodWorksheet=XLSX.utils.aoa_to_sheet(methodMatrixData);XLSX.utils.book_append_sheet(workbook,methodWorksheet,getTypeLabel(method));});// 创建详细预测结果工作表\nconst detailData=[];detailData.push(['位置','亮度值','拟合方法','预测灰阶值','置信度(R²)','拟合公式']);predictionResults.forEach(result=>{Object.entries(result.predictions).forEach(_ref3=>{let[method,prediction]=_ref3;detailData.push([result.position,result.brightnessValue.toFixed(2),getTypeLabel(method),prediction.predictedGrayScale.toFixed(6),prediction.confidence.toFixed(6),prediction.formula]);});});const detailWorksheet=XLSX.utils.aoa_to_sheet(detailData);XLSX.utils.book_append_sheet(workbook,detailWorksheet,'详细结果');// 添加拟合信息工作表\nif(bestFittingResult){const fittingInfo=[['拟合信息',''],['最佳拟合类型',getTypeLabel(bestFittingResult.type)],['拟合公式',bestFittingResult.formula],['R²值',bestFittingResult.rSquared.toFixed(6)],['RMSE',bestFittingResult.rmse.toFixed(6)],['MAE',bestFittingResult.mae.toFixed(6)],['最大误差',bestFittingResult.maxError.toFixed(6)]];const fittingWs=XLSX.utils.aoa_to_sheet(fittingInfo);XLSX.utils.book_append_sheet(workbook,fittingWs,'拟合信息');}// 下载文件\nconst fileName=\"\\u539F\\u59CB\\u6570\\u636E\\u9884\\u6D4B\\u7ED3\\u679C_\".concat(new Date().toISOString().slice(0,10),\".xlsx\");XLSX.writeFile(workbook,fileName);},[predictionResults,bestFittingResult,rawData]);return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-lg p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-6\",children:\"\\u539F\\u59CB\\u6570\\u636E\\u9884\\u6D4B\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-3\",children:\"\\u4E0A\\u4F20\\u539F\\u59CB\\u6570\\u636E\\u6587\\u4EF6 (Sheet3)\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".xlsx,.xls\",onChange:handleFileUpload,className:\"hidden\",id:\"raw-file-upload\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"raw-file-upload\",className:\"cursor-pointer inline-flex items-center px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\",children:\"\\u9009\\u62E9Excel\\u6587\\u4EF6\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 text-sm text-gray-500\",children:\"\\u8BF7\\u9009\\u62E9\\u5305\\u542BSheet3\\u5DE5\\u4F5C\\u8868\\u7684Excel\\u6587\\u4EF6\\uFF0C\\u539F\\u59CB\\u6570\\u636E\\u5E94\\u4F4D\\u4E8EA2-AF21\\u8303\\u56F4\"})]})]}),isLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-blue-700\",children:\"\\u6B63\\u5728\\u8BFB\\u53D6\\u6587\\u4EF6...\"})}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-red-700\",children:error})}),rawData&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 p-4 bg-gray-50 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-2\",children:\"\\u539F\\u59CB\\u6570\\u636E\\u6982\\u89C8\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"\\u77E9\\u9635\\u7EF4\\u5EA6:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 font-medium\",children:[rawData.matrix.length,\" \\xD7 \",((_rawData$matrix$=rawData.matrix[0])===null||_rawData$matrix$===void 0?void 0:_rawData$matrix$.length)||0]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"\\u6570\\u503C\\u8303\\u56F4:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"ml-2 font-medium\",children:[Math.min(...rawData.matrix.flat()).toFixed(2),\" - \",Math.max(...rawData.matrix.flat()).toFixed(2)]})]})]})]}),isGenerating&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 bg-blue-50 p-4 rounded-lg border border-blue-200\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-blue-800\",children:\"\\u6B63\\u5728\\u751F\\u6210\\u9884\\u6D4B\\u6570\\u636E...\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium text-blue-600\",children:[generationProgress,\"%\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-blue-200 rounded-full h-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-blue-600 h-3 rounded-full transition-all duration-300 ease-out\",style:{width:\"\".concat(generationProgress,\"%\")}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 text-sm text-blue-700\",children:[generationProgress<=10&&'正在验证数据...',generationProgress>10&&generationProgress<=30&&'正在执行拟合算法...',generationProgress>30&&generationProgress<=50&&'正在分析最佳拟合结果...',generationProgress>50&&generationProgress<=95&&'正在计算预测结果...',generationProgress>95&&'即将完成...']})]}),rawData&&(localGrayScaleData&&localBrightnessBlocks||grayScaleData.values.length>0&&brightnessBlocks.length>0)&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-6\",children:/*#__PURE__*/_jsx(\"button\",{onClick:generatePredictions,className:\"px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\",children:\"\\u751F\\u6210\\u9884\\u6D4B\\u7ED3\\u679C\"})}),bestFittingResult&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6 p-4 bg-blue-50 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-2\",children:\"\\u4F7F\\u7528\\u7684\\u6700\\u4F73\\u62DF\\u5408\\u6A21\\u578B\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"\\u62DF\\u5408\\u7C7B\\u578B\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:getTypeLabel(bestFittingResult.type)})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"R\\xB2\\u503C\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:bestFittingResult.rSquared.toFixed(6)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-span-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"\\u62DF\\u5408\\u516C\\u5F0F\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium font-mono\",children:bestFittingResult.formula})]})]})]}),rawData&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-3\",children:\"\\u539F\\u59CB\\u6570\\u636E\\u70ED\\u529B\\u56FE\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-2\",children:\"\\u53CC\\u51FB\\u4EFB\\u610F\\u50CF\\u7D20\\u4F4D\\u7F6E\\u67E5\\u770B\\u8BE5\\u4F4D\\u7F6E\\u7684\\u62DF\\u5408\\u7ED3\\u679C\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white p-4 rounded-lg border border-gray-200 overflow-x-auto\",children:/*#__PURE__*/_jsx(\"div\",{className:\"inline-block\",children:/*#__PURE__*/_jsxs(\"svg\",{width:\"\".concat((((_rawData$matrix$2=rawData.matrix[0])===null||_rawData$matrix$2===void 0?void 0:_rawData$matrix$2.length)||32)*24+60),height:\"\".concat(rawData.matrix.length*24+60),className:\"bg-white\",children:[Array.from({length:((_rawData$matrix$3=rawData.matrix[0])===null||_rawData$matrix$3===void 0?void 0:_rawData$matrix$3.length)||32},(_,colIndex)=>/*#__PURE__*/_jsx(\"text\",{x:30+colIndex*24+12,y:15,textAnchor:\"middle\",className:\"text-xs fill-gray-600 font-mono\",children:colIndex},\"col-label-\".concat(colIndex))),rawData.matrix.map((_,rowIndex)=>/*#__PURE__*/_jsx(\"text\",{x:15,y:30+rowIndex*24+16,textAnchor:\"middle\",className:\"text-xs fill-gray-600 font-mono\",children:rowIndex},\"row-label-\".concat(rowIndex))),rawData.matrix.map((row,rowIndex)=>row.map((value,colIndex)=>{const backgroundColor=getColor(value);// 根据背景色调整文字颜色\nconst minValue=Math.min(...rawData.matrix.flat());const maxValue=Math.max(...rawData.matrix.flat());const normalizedValue=(value-minValue)/(maxValue-minValue);const textColor=normalizedValue>0.5?'white':'black';return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"rect\",{x:30+colIndex*24,y:30+rowIndex*24,width:\"24\",height:\"24\",fill:backgroundColor,stroke:\"#e5e7eb\",strokeWidth:\"0.5\",className:\"cursor-pointer hover:stroke-2 hover:stroke-blue-500\",onDoubleClick:()=>handleDoubleClick(rowIndex,colIndex)}),/*#__PURE__*/_jsx(\"text\",{x:30+colIndex*24+12,y:30+rowIndex*24+16,textAnchor:\"middle\",className:\"text-xs font-medium pointer-events-none\",fill:textColor,children:value.toFixed(1)}),/*#__PURE__*/_jsx(\"title\",{children:\"\\u4F4D\\u7F6E: \".concat(numToCol(colIndex+1)).concat(rowIndex+2,\", \\u503C: \").concat(value.toFixed(2))})]},\"\".concat(rowIndex,\"-\").concat(colIndex));})),/*#__PURE__*/_jsxs(\"text\",{x:\"\".concat(((((_rawData$matrix$4=rawData.matrix[0])===null||_rawData$matrix$4===void 0?void 0:_rawData$matrix$4.length)||32)*24+60)/2),y:\"\".concat(rawData.matrix.length*24+50),textAnchor:\"middle\",className:\"text-sm fill-gray-700 font-medium\",children:[\"\\u5217\\u7D22\\u5F15 (0-\",(((_rawData$matrix$5=rawData.matrix[0])===null||_rawData$matrix$5===void 0?void 0:_rawData$matrix$5.length)||32)-1,\")\"]}),/*#__PURE__*/_jsxs(\"text\",{x:\"15\",y:\"\".concat((rawData.matrix.length*24+60)/2),textAnchor:\"middle\",className:\"text-sm fill-gray-700 font-medium\",transform:\"rotate(-90 15 \".concat((rawData.matrix.length*24+60)/2,\")\"),children:[\"\\u884C\\u7D22\\u5F15 (0-\",rawData.matrix.length-1,\")\"]})]})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 flex items-center gap-4\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600\",children:\"\\u6570\\u503C\\u8303\\u56F4:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4\",style:{backgroundColor:getColor(Math.min(...rawData.matrix.flat()))}}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs\",children:Math.min(...rawData.matrix.flat()).toFixed(2)}),/*#__PURE__*/_jsx(\"div\",{className:\"w-20 h-4 bg-gradient-to-r\",style:{backgroundImage:\"linear-gradient(to right, \".concat(getColor(Math.min(...rawData.matrix.flat())),\", \").concat(getColor(Math.max(...rawData.matrix.flat())),\")\")}}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs\",children:Math.max(...rawData.matrix.flat()).toFixed(2)}),/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4\",style:{backgroundColor:getColor(Math.max(...rawData.matrix.flat()))}})]})]}),doubleClickedCell&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",onClick:handleCloseDoubleClickCard,children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg p-6 max-w-2xl w-full mx-4 max-h-[80vh] overflow-y-auto\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsxs(\"h5\",{className:\"text-lg font-semibold\",children:[\"\\u4F4D\\u7F6E \",numToCol(doubleClickedCell.col+1),doubleClickedCell.row+2,\" \\u8BE6\\u7EC6\\u62DF\\u5408\\u7ED3\\u679C\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCloseDoubleClickCard,className:\"text-gray-500 hover:text-gray-700 text-2xl font-bold leading-none\",\"aria-label\":\"\\u5173\\u95ED\",children:\"\\xD7\"})]}),doubleClickPredictionContent]})})]}),predictionResults.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-3\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium\",children:\"\\u9884\\u6D4B\\u7ED3\\u679C\"}),/*#__PURE__*/_jsx(\"button\",{onClick:exportToExcel,className:\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm\",children:\"\\u5BFC\\u51FA\\u5230Excel\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\",children:predictionResults.map((result,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gradient-to-br from-blue-50 to-indigo-100 p-4 rounded-lg border border-blue-200 hover:shadow-md transition-shadow\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-between items-center mb-2\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium text-gray-600\",children:[\"\\u4F4D\\u7F6E: \",result.position]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600\",children:\"\\u4EAE\\u5EA6\\u503C:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-sm font-medium\",children:result.brightnessValue.toFixed(2)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3 pt-2 border-t border-blue-200\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-xs font-medium text-gray-700 mb-2\",children:\"\\u5404\\u62DF\\u5408\\u65B9\\u6CD5\\u9884\\u6D4B\\u503C:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:Object.entries(result.predictions).map(_ref4=>{let[method,prediction]=_ref4;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded p-2 border\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-1\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-xs font-medium text-gray-600\",children:getTypeLabel(method)}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-blue-600 font-medium\",children:prediction.predictedGrayScale.toFixed(4)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mb-1\",children:[\"\\u7F6E\\u4FE1\\u5EA6: \",(prediction.confidence*100).toFixed(1),\"%\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs text-gray-400 break-all font-mono\",children:prediction.formula})]},method);})})]})]})]},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 p-4 bg-gray-50 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium mb-2\",children:\"\\u9884\\u6D4B\\u7EDF\\u8BA1\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-3 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"\\u9884\\u6D4B\\u6570\\u636E\\u70B9\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:predictionResults.length})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"\\u62DF\\u5408\\u65B9\\u6CD5\\u6570\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:predictionResults.length>0?Object.keys(predictionResults[0].predictions).length:0})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-600\",children:\"\\u6700\\u4F73\\u62DF\\u5408\\uFF1A\"}),/*#__PURE__*/_jsx(\"span\",{className:\"font-medium\",children:bestFittingResult?getTypeLabel(bestFittingResult.type):'N/A'})]})]})]})]}),!rawData&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium mb-2 text-yellow-800\",children:\"\\u4F7F\\u7528\\u8BF4\\u660E\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"text-sm text-yellow-700 space-y-1\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"1. \\u9996\\u5148\\u786E\\u4FDD\\u5DF2\\u4E0A\\u4F20\\u5E76\\u5904\\u7406\\u4E86\\u539F\\u59CB\\u6570\\u636E\\u6587\\u4EF6\"}),/*#__PURE__*/_jsx(\"li\",{children:\"2. \\u4E0A\\u4F20\\u5305\\u542BSheet3\\u5DE5\\u4F5C\\u8868\\u7684Excel\\u6587\\u4EF6\\uFF0C\\u76EE\\u6807\\u6570\\u636E\\u5E94\\u4F4D\\u4E8EB\\u5217\"}),/*#__PURE__*/_jsx(\"li\",{children:\"3. \\u7CFB\\u7EDF\\u5C06\\u81EA\\u52A8\\u9009\\u62E9\\u6700\\u4F73\\u62DF\\u5408\\u6A21\\u578B\\u8FDB\\u884C\\u9884\\u6D4B\"}),/*#__PURE__*/_jsx(\"li\",{children:\"4. \\u751F\\u6210\\u9884\\u6D4B\\u7ED3\\u679C\\u540E\\u53EF\\u5BFC\\u51FA\\u5230Excel\\u6587\\u4EF6\"})]})]})]});};export default TargetDataPrediction;","map":{"version":3,"names":["React","useState","useCallback","useMemo","XLSX","performAllFittings","parseExcelData","jsx","_jsx","jsxs","_jsxs","TargetDataPrediction","_ref","_rawData$matrix$","_rawData$matrix$2","_rawData$matrix$3","_rawData$matrix$4","_rawData$matrix$5","grayScaleData","brightnessBlocks","rawData","setRawData","predictionResults","setPredictionResults","bestFittingResult","setBestFittingResult","isLoading","setIsLoading","error","setError","localGrayScaleData","setLocalGrayScaleData","localBrightnessBlocks","setLocalBrightnessBlocks","doubleClickedCell","setDoubleClickedCell","generationProgress","setGenerationProgress","isGenerating","setIsGenerating","cachedPredictionResults","setCachedPredictionResults","getTypeLabel","type","labels","numToCol","num","result","String","fromCharCode","Math","floor","handleFileUpload","event","_event$target$files","file","target","files","parsedData","grayScale","data","arrayBuffer","workbook","read","Uint8Array","SheetNames","includes","Error","worksheet","Sheets","values","positions","startRow","endRow","startCol","endCol","colToNum","col","i","length","charCodeAt","startColNum","endColNum","matrix","row","rowData","colNum","cellAddress","concat","cell","v","undefined","value","parseFloat","toString","isNaN","push","setTimeout","generatePredictions","message","getColor","minValue","min","flat","maxValue","max","normalized","intensity","red","blue","green","abs","handleDoubleClick","rowIndex","colIndex","handleCloseDoubleClickCard","doubleClickPredictionContent","currentGrayScaleData","currentBrightnessBlocks","className","children","cellIndex","cachedResult","rawValue","methodPredictions","predictions","Object","entries","toFixed","map","_ref2","method","prediction","pred","predictedGrayScale","confidence","formula","Promise","resolve","centerPixelValues","block","centerPixelValue","grayScaleValues","allFittingResults","x","y","bestFitting","reduce","best","current","rSquared","totalValues","predictionCache","index","brightnessValue","forEach","fitting","a","b","coefficients","log","a_exp","b_exp","exp","a_poly","b_poly","c_poly","d_poly","pow","a_pow","b_pow","a_biv","b_biv","c_biv","fittingType","position","progress","err","console","exportToExcel","utils","book_new","rows","cols","colHeaders","originalMatrixData","originalWorksheet","aoa_to_sheet","book_append_sheet","allMethods","Set","keys","add","Array","from","methodMatrixData","dataIndex","methodWorksheet","detailData","_ref3","detailWorksheet","fittingInfo","rmse","mae","maxError","fittingWs","fileName","Date","toISOString","slice","writeFile","accept","onChange","id","htmlFor","style","width","onClick","height","_","textAnchor","backgroundColor","normalizedValue","textColor","fill","stroke","strokeWidth","onDoubleClick","transform","backgroundImage","e","stopPropagation","_ref4"],"sources":["D:/source/fitdata/fitdata-visualizer/src/components/TargetDataPrediction.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\nimport * as XLSX from 'xlsx';\nimport { FittingResult, performAllFittings } from '../utils/curveFitting';\nimport { parseExcelData } from '../utils/dataParser';\n\ninterface RawData {\n  values: number[];\n  positions: string[];\n  matrix: number[][];\n}\n\ninterface CachedPredictionResult {\n  rawValue: number;\n  methodPredictions: {\n    [key: string]: {\n      predictedGrayScale: number;\n      formula: string;\n      confidence: number;\n      fittingType: string;\n    }\n  };\n}\n\ninterface PredictionResult {\n  position: string;\n  brightnessValue: number;\n  predictions: {\n    [key: string]: {\n      predictedGrayScale: number;\n      formula: string;\n      confidence: number;\n      fittingType: string;\n    }\n  };\n}\n\ninterface TargetDataPredictionProps {\n  grayScaleData: {\n    values: number[];\n    positions: string[];\n  };\n  brightnessBlocks: Array<{\n    label: string;\n    startRow: number;\n    endRow: number;\n    data: number[][];\n    centerPixelValue: number;\n    normalizedData?: number[][];\n  }>;\n}\n\nconst TargetDataPrediction: React.FC<TargetDataPredictionProps> = ({ grayScaleData, brightnessBlocks }) => {\n  const [rawData, setRawData] = useState<RawData | null>(null);\n  const [predictionResults, setPredictionResults] = useState<PredictionResult[]>([]);\n  const [bestFittingResult, setBestFittingResult] = useState<FittingResult | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  // 本地状态用于存储从文件解析的数据\n  const [localGrayScaleData, setLocalGrayScaleData] = useState<{ values: number[]; positions: string[]; } | null>(null);\n  const [localBrightnessBlocks, setLocalBrightnessBlocks] = useState<Array<{ label: string; startRow: number; endRow: number; data: number[][]; centerPixelValue: number; normalizedData?: number[][]; }> | null>(null);\n\n  const [doubleClickedCell, setDoubleClickedCell] = useState<{ row: number; col: number } | null>(null);\n  const [generationProgress, setGenerationProgress] = useState<number>(0);\n  const [isGenerating, setIsGenerating] = useState<boolean>(false);\n  const [cachedPredictionResults, setCachedPredictionResults] = useState<CachedPredictionResult[] | null>(null);\n\n  // 获取拟合类型标签\n  const getTypeLabel = (type: string) => {\n    const labels: { [key: string]: string } = {\n      'logarithmic': '对数拟合',\n      'exponential': '指数拟合',\n      'polynomial': '三次多项式拟合',\n      'power': '幂函数拟合',\n      'bivariate': '二次多项式拟合'\n    };\n    return labels[type] || type;\n  };\n\n  // 将数字转换为Excel列名\n  const numToCol = (num: number): string => {\n    let result = '';\n    while (num > 0) {\n      num--;\n      result = String.fromCharCode(65 + (num % 26)) + result;\n      num = Math.floor(num / 26);\n    }\n    return result;\n  };\n\n  // 读取Excel Sheet3数据\n  const handleFileUpload = useCallback(async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // 清除缓存的预测结果\n      setCachedPredictionResults(null);\n      \n      // 使用parseExcelData解析完整数据\n      const parsedData = await parseExcelData(file);\n      \n      // 更新本地的grayScaleData和brightnessBlocks\n      setLocalGrayScaleData(parsedData.grayScale);\n      setLocalBrightnessBlocks(parsedData.brightnessBlocks);\n      \n      // 设置原始数据（从Sheet3读取）\n      const data = await file.arrayBuffer();\n      const workbook = XLSX.read(new Uint8Array(data), { type: 'array' });\n      \n      // 检查是否有Sheet3\n      if (!workbook.SheetNames.includes('Sheet3')) {\n        throw new Error('未找到Sheet3工作表');\n      }\n      \n      const worksheet = workbook.Sheets['Sheet3'];\n      const values: number[] = [];\n      const positions: string[] = [];\n      \n      // 读取A2-AF21范围的原始数据（20行×32列）\n      const startRow = 2;\n      const endRow = 21;\n      const startCol = 'A';\n      const endCol = 'AF';\n      \n      // 将列字母转换为数字\n      const colToNum = (col: string): number => {\n        let result = 0;\n        for (let i = 0; i < col.length; i++) {\n          result = result * 26 + (col.charCodeAt(i) - 'A'.charCodeAt(0) + 1);\n        }\n        return result;\n      };\n      \n      const numToCol = (num: number): string => {\n        let result = '';\n        while (num > 0) {\n          num--;\n          result = String.fromCharCode('A'.charCodeAt(0) + (num % 26)) + result;\n          num = Math.floor(num / 26);\n        }\n        return result;\n      };\n      \n      const startColNum = colToNum(startCol);\n      const endColNum = colToNum(endCol);\n      \n      // 创建矩阵结构\n      const matrix: number[][] = [];\n      \n      // 按行读取数据\n      for (let row = startRow; row <= endRow; row++) {\n        const rowData: number[] = [];\n        for (let colNum = startColNum; colNum <= endColNum; colNum++) {\n          const col = numToCol(colNum);\n          const cellAddress = `${col}${row}`;\n          const cell = worksheet[cellAddress];\n          \n          if (cell && cell.v !== undefined && cell.v !== null && cell.v !== '') {\n            const value = typeof cell.v === 'number' ? cell.v : parseFloat(cell.v.toString());\n            if (!isNaN(value)) {\n              values.push(value);\n              positions.push(cellAddress);\n              rowData.push(value);\n            } else {\n              rowData.push(0);\n            }\n          } else {\n            rowData.push(0);\n          }\n        }\n        matrix.push(rowData);\n      }\n      \n      if (values.length === 0) {\n        throw new Error('Sheet3中未找到有效的原始数据');\n      }\n      \n      setRawData({ values, positions, matrix });\n      \n      // 自动生成预测结果（延迟确保状态更新完成）\n      setTimeout(async () => {\n        await generatePredictions();\n      }, 100);\n    } catch (error) {\n      setError(error instanceof Error ? error.message : '文件读取失败');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n\n\n  // 获取颜色值\n  const getColor = (value: number) => {\n    if (!rawData || !rawData.matrix || rawData.matrix.length === 0) {\n      return 'rgb(255, 255, 255)';\n    }\n    \n    const minValue = Math.min(...rawData.matrix.flat());\n    const maxValue = Math.max(...rawData.matrix.flat());\n    \n    if (maxValue === minValue) return 'rgb(255, 255, 255)';\n    \n    const normalized = (value - minValue) / (maxValue - minValue);\n    const intensity = Math.floor(normalized * 255);\n    \n    // 使用蓝色到红色的渐变\n    const red = intensity;\n    const blue = 255 - intensity;\n    const green = Math.floor(128 * (1 - Math.abs(normalized - 0.5) * 2));\n    \n    return `rgb(${red}, ${green}, ${blue})`;\n  };\n\n  // 处理双击事件\n  const handleDoubleClick = useCallback((rowIndex: number, colIndex: number) => {\n    // 如果没有缓存的预测结果，提示用户先生成预测数据\n    if (!cachedPredictionResults) {\n      setError('请先生成预测数据后再查看详细结果');\n      return;\n    }\n    setDoubleClickedCell({ row: rowIndex, col: colIndex });\n  }, [cachedPredictionResults]);\n\n  // 关闭双击卡片\n  const handleCloseDoubleClickCard = useCallback(() => {\n    setDoubleClickedCell(null);\n  }, []);\n\n  // 计算双击卡片的预测结果\n  const doubleClickPredictionContent = useMemo(() => {\n    // 使用本地数据（如果有）或传入的props数据\n    const currentGrayScaleData = localGrayScaleData || grayScaleData;\n    const currentBrightnessBlocks = localBrightnessBlocks || brightnessBlocks;\n    \n    if (!rawData || !currentGrayScaleData.values.length || !currentBrightnessBlocks.length || !doubleClickedCell) {\n      return <p className=\"text-gray-500\">预测数据尚未生成，请等待数据处理完成</p>;\n    }\n    \n    // 使用缓存的预测结果，如果没有缓存则返回提示\n    if (!cachedPredictionResults) {\n      return <p className=\"text-gray-500\">请先生成预测数据</p>;\n    }\n    \n    // 直接从缓存中读取该位置的预测结果\n    const cellIndex = doubleClickedCell.row * 32 + doubleClickedCell.col;\n    const cachedResult = cachedPredictionResults[cellIndex];\n    \n    if (!cachedResult) {\n      return <p className=\"text-gray-500\">该位置暂无有效拟合结果</p>;\n    }\n    \n    const { rawValue, methodPredictions } = cachedResult;\n    const predictions = Object.entries(methodPredictions);\n    \n    if (predictions.length === 0) {\n      return <p className=\"text-gray-500\">该位置暂无有效拟合结果</p>;\n    }\n    \n    return (\n      <div className=\"space-y-4\">\n        <div className=\"bg-gray-50 p-4 rounded-lg\">\n          <div className=\"text-sm mb-2\">\n            <span className=\"text-gray-600\">亮度值:</span>\n            <span className=\"ml-2 font-medium\">{rawValue.toFixed(2)}</span>\n          </div>\n        </div>\n        \n        <div>\n          <h6 className=\"font-medium text-gray-700 mb-3\">所有拟合方法预测结果:</h6>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full border-collapse border border-gray-200\">\n              <thead>\n                <tr className=\"bg-gray-100\">\n                  <th className=\"border border-gray-200 px-3 py-2 text-left font-medium\">拟合类型</th>\n                  <th className=\"border border-gray-200 px-3 py-2 text-left font-medium\">预测结果</th>\n                  <th className=\"border border-gray-200 px-3 py-2 text-left font-medium\">置信度(R²)</th>\n                  <th className=\"border border-gray-200 px-3 py-2 text-left font-medium\">拟合公式</th>\n                </tr>\n              </thead>\n              <tbody>\n                {predictions.map(([method, prediction]) => {\n                  const pred = prediction as {\n                    predictedGrayScale: number;\n                    formula: string;\n                    confidence: number;\n                    fittingType: string;\n                  };\n                  return (\n                    <tr key={method} className=\"hover:bg-gray-50\">\n                      <td className=\"border border-gray-200 px-3 py-2\">\n                        <span className=\"font-medium text-gray-700\">\n                          {getTypeLabel(method)}\n                        </span>\n                      </td>\n                      <td className=\"border border-gray-200 px-3 py-2\">\n                        <span className=\"text-lg font-bold text-blue-600\">\n                          {pred.predictedGrayScale.toFixed(6)}\n                        </span>\n                      </td>\n                      <td className=\"border border-gray-200 px-3 py-2\">\n                        <span className=\"font-medium\">\n                          {(pred.confidence * 100).toFixed(2)}%\n                        </span>\n                      </td>\n                      <td className=\"border border-gray-200 px-3 py-2\">\n                        <div className=\"text-sm font-mono text-gray-600 max-w-xs break-all\">\n                          {pred.formula}\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }, [doubleClickedCell, cachedPredictionResults, localGrayScaleData, localBrightnessBlocks, grayScaleData, brightnessBlocks, rawData, getTypeLabel]);\n\n  // 生成预测结果\n  const generatePredictions = useCallback(async () => {\n    if (!rawData) {\n      setError('请先上传原始数据');\n      return;\n    }\n\n    // 使用本地数据（如果有）或传入的props数据\n    const currentGrayScaleData = localGrayScaleData || grayScaleData;\n    const currentBrightnessBlocks = localBrightnessBlocks || brightnessBlocks;\n\n    if (!currentGrayScaleData.values.length || !currentBrightnessBlocks.length) {\n      setError('无法获取有效的拟合数据');\n      return;\n    }\n\n    setIsGenerating(true);\n    setGenerationProgress(0);\n    setError(null);\n\n    try {\n      // 步骤1: 数据验证 (10%)\n      setGenerationProgress(10);\n      await new Promise(resolve => setTimeout(resolve, 100));\n\n      // 提取中心像素值和灰阶值\n      const centerPixelValues = currentBrightnessBlocks.map(block => block.centerPixelValue);\n      const grayScaleValues = currentGrayScaleData.values;\n\n      if (centerPixelValues.length !== grayScaleValues.length) {\n        setError('拟合数据长度不匹配');\n        return;\n      }\n\n      // 步骤2: 执行拟合算法 (30%)\n      setGenerationProgress(30);\n      await new Promise(resolve => setTimeout(resolve, 200));\n\n      const allFittingResults = performAllFittings({\n        x: centerPixelValues,\n        y: grayScaleValues\n      });\n\n      // 拟合结果已获取，继续处理预测\n\n      // 步骤3: 找到最佳拟合结果 (50%)\n      setGenerationProgress(50);\n      await new Promise(resolve => setTimeout(resolve, 100));\n\n      const bestFitting = allFittingResults.reduce((best, current) => {\n        if (isNaN(current.rSquared) || current.rSquared < 0) return best;\n        if (!best || current.rSquared > best.rSquared) return current;\n        return best;\n      }, null as FittingResult | null);\n\n      if (!bestFitting) {\n        setError('无法获取有效的拟合结果');\n        return;\n      }\n\n      setBestFittingResult(bestFitting);\n\n      // 步骤4: 计算预测结果 (80%)\n      setGenerationProgress(80);\n      await new Promise(resolve => setTimeout(resolve, 300));\n\n      const totalValues = rawData.values.length;\n      const predictions: PredictionResult[] = [];\n      const predictionCache: CachedPredictionResult[] = [];\n\n      for (let index = 0; index < totalValues; index++) {\n        const rawValue = rawData.values[index];\n        // 计算对应的亮度值\n        let brightnessValue = rawValue; // 使用原始数据值作为亮度值\n\n        // 为每种拟合方法计算预测值\n        const methodPredictions: { [key: string]: { predictedGrayScale: number; formula: string; confidence: number; fittingType: string } } = {};\n        \n        allFittingResults.forEach(fitting => {\n          if (isNaN(fitting.rSquared) || fitting.rSquared < 0) return;\n          \n          let predictedGrayScale = 0;\n          \n          // 根据拟合类型计算预测值\n          switch (fitting.type) {\n            case 'logarithmic':\n              if (rawValue > 0) {\n                const [a, b] = fitting.coefficients;\n                predictedGrayScale = a * Math.log(rawValue) + b;\n              }\n              break;\n            case 'exponential':\n              const [a_exp, b_exp] = fitting.coefficients;\n              predictedGrayScale = a_exp * Math.exp(b_exp * rawValue);\n              break;\n            case 'polynomial':\n              const [a_poly, b_poly, c_poly, d_poly] = fitting.coefficients;\n              predictedGrayScale = a_poly * Math.pow(rawValue, 3) + \n                                  b_poly * Math.pow(rawValue, 2) + \n                                  c_poly * rawValue + d_poly;\n              break;\n            case 'power':\n              if (rawValue > 0) {\n                const [a_pow, b_pow] = fitting.coefficients;\n                predictedGrayScale = a_pow * Math.pow(rawValue, b_pow);\n              }\n              break;\n            case 'bivariate':\n              const [a_biv, b_biv, c_biv] = fitting.coefficients;\n              predictedGrayScale = a_biv * Math.pow(rawValue, 2) + \n                                  b_biv * rawValue + c_biv;\n              break;\n          }\n\n          methodPredictions[fitting.type] = {\n            predictedGrayScale,\n            formula: fitting.formula,\n            confidence: fitting.rSquared,\n            fittingType: fitting.type\n          };\n        });\n\n        predictions.push({\n          position: rawData.positions[index],\n          brightnessValue,\n          predictions: methodPredictions\n        });\n\n        // 缓存该位置的预测结果供双击功能使用\n        predictionCache.push({\n          rawValue,\n          methodPredictions\n        });\n\n        // 更新进度 (80% - 95%)\n        const progress = 80 + Math.floor((index / totalValues) * 15);\n        setGenerationProgress(progress);\n        \n        // 每处理100个数据点暂停一下，让UI更新\n        if (index % 100 === 0) {\n          await new Promise(resolve => setTimeout(resolve, 10));\n        }\n      }\n\n      // 缓存预测结果\n      setCachedPredictionResults(predictionCache);\n\n      // 步骤5: 完成 (100%)\n      setGenerationProgress(100);\n      await new Promise(resolve => setTimeout(resolve, 200));\n\n      setPredictionResults(predictions);\n      setError(null);\n    } catch (err) {\n      console.error('预测生成错误:', err);\n      setError(err instanceof Error ? err.message : '预测生成失败');\n    } finally {\n      setIsGenerating(false);\n      setGenerationProgress(0);\n    }\n  }, [rawData, grayScaleData, brightnessBlocks, localGrayScaleData, localBrightnessBlocks, getTypeLabel]);\n\n  // 导出预测结果到Excel\n  const exportToExcel = useCallback(() => {\n    if (predictionResults.length === 0 || !rawData) {\n      setError('没有预测结果可导出');\n      return;\n    }\n\n    const workbook = XLSX.utils.book_new();\n    \n    // 创建矩阵格式的预测结果工作表\n    const rows = 20; // A2-AF21 共20行\n    const cols = 32; // A-AF 共32列\n    \n    // 将列数字转换为字母的辅助函数\n    const numToCol = (num: number): string => {\n      let result = '';\n      while (num > 0) {\n        num--;\n        result = String.fromCharCode('A'.charCodeAt(0) + (num % 26)) + result;\n        num = Math.floor(num / 26);\n      }\n      return result;\n    };\n    \n    // 创建列标题 (A-AF)\n    const colHeaders: string[] = [];\n    for (let i = 0; i < cols; i++) {\n      colHeaders.push(numToCol(i + 1));\n    }\n    \n    // 创建原始数据矩阵工作表\n    const originalMatrixData = [];\n    originalMatrixData.push(['', ...colHeaders]);\n    \n    for (let row = 0; row < rows; row++) {\n      const rowData: (string | number)[] = [row + 2]; // 行号从2开始\n      for (let col = 0; col < cols; col++) {\n        if (row < rawData.matrix.length && col < rawData.matrix[row].length) {\n          rowData.push(rawData.matrix[row][col]);\n        } else {\n          rowData.push('');\n        }\n      }\n      originalMatrixData.push(rowData);\n    }\n    \n    const originalWorksheet = XLSX.utils.aoa_to_sheet(originalMatrixData);\n    XLSX.utils.book_append_sheet(workbook, originalWorksheet, '原始数据');\n    \n    // 获取所有拟合方法\n    const allMethods = new Set<string>();\n    predictionResults.forEach(result => {\n      Object.keys(result.predictions).forEach(method => allMethods.add(method));\n    });\n    \n    // 为每种拟合方法创建单独的预测结果矩阵\n    Array.from(allMethods).forEach(method => {\n      const methodMatrixData: (string | number)[][] = [];\n      methodMatrixData.push(['', ...colHeaders]);\n      \n      for (let row = 0; row < rows; row++) {\n        const rowData: (string | number)[] = [row + 2]; // 行号从2开始\n        for (let col = 0; col < cols; col++) {\n          const dataIndex = row * cols + col;\n          if (dataIndex < predictionResults.length && predictionResults[dataIndex].predictions[method]) {\n            rowData.push(parseFloat(predictionResults[dataIndex].predictions[method].predictedGrayScale.toFixed(6)));\n          } else {\n            rowData.push('');\n          }\n        }\n        methodMatrixData.push(rowData);\n      }\n      \n      const methodWorksheet = XLSX.utils.aoa_to_sheet(methodMatrixData);\n      XLSX.utils.book_append_sheet(workbook, methodWorksheet, getTypeLabel(method));\n    });\n    \n    // 创建详细预测结果工作表\n    const detailData: any[] = [];\n    detailData.push(['位置', '亮度值', '拟合方法', '预测灰阶值', '置信度(R²)', '拟合公式']);\n    \n    predictionResults.forEach(result => {\n      Object.entries(result.predictions).forEach(([method, prediction]) => {\n        detailData.push([\n          result.position,\n          result.brightnessValue.toFixed(2),\n          getTypeLabel(method),\n          prediction.predictedGrayScale.toFixed(6),\n          prediction.confidence.toFixed(6),\n          prediction.formula\n        ]);\n      });\n    });\n    \n    const detailWorksheet = XLSX.utils.aoa_to_sheet(detailData);\n    XLSX.utils.book_append_sheet(workbook, detailWorksheet, '详细结果');\n    \n    // 添加拟合信息工作表\n    if (bestFittingResult) {\n      const fittingInfo = [\n        ['拟合信息', ''],\n        ['最佳拟合类型', getTypeLabel(bestFittingResult.type)],\n        ['拟合公式', bestFittingResult.formula],\n        ['R²值', bestFittingResult.rSquared.toFixed(6)],\n        ['RMSE', bestFittingResult.rmse.toFixed(6)],\n        ['MAE', bestFittingResult.mae.toFixed(6)],\n        ['最大误差', bestFittingResult.maxError.toFixed(6)]\n      ];\n      \n      const fittingWs = XLSX.utils.aoa_to_sheet(fittingInfo);\n      XLSX.utils.book_append_sheet(workbook, fittingWs, '拟合信息');\n    }\n    \n    // 下载文件\n    const fileName = `原始数据预测结果_${new Date().toISOString().slice(0, 10)}.xlsx`;\n    XLSX.writeFile(workbook, fileName);\n  }, [predictionResults, bestFittingResult, rawData]);\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <h3 className=\"text-lg font-semibold mb-6\">原始数据预测</h3>\n      \n      {/* 文件上传区域 */}\n      <div className=\"mb-6\">\n        <h4 className=\"font-medium mb-3\">上传原始数据文件 (Sheet3)</h4>\n        <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\n          <input\n            type=\"file\"\n            accept=\".xlsx,.xls\"\n            onChange={handleFileUpload}\n            className=\"hidden\"\n            id=\"raw-file-upload\"\n          />\n          <label\n            htmlFor=\"raw-file-upload\"\n            className=\"cursor-pointer inline-flex items-center px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\"\n          >\n            选择Excel文件\n          </label>\n          <p className=\"mt-2 text-sm text-gray-500\">\n            请选择包含Sheet3工作表的Excel文件，原始数据应位于A2-AF21范围\n          </p>\n        </div>\n      </div>\n\n      {/* 加载状态 */}\n      {isLoading && (\n        <div className=\"mb-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n          <p className=\"text-blue-700\">正在读取文件...</p>\n        </div>\n      )}\n\n      {/* 错误信息 */}\n      {error && (\n        <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <p className=\"text-red-700\">{error}</p>\n        </div>\n      )}\n\n      {/* 原始数据概览 */}\n      {rawData && (\n        <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n          <h4 className=\"font-medium mb-2\">原始数据概览</h4>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">矩阵维度:</span>\n              <span className=\"ml-2 font-medium\">{rawData.matrix.length} × {rawData.matrix[0]?.length || 0}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">数值范围:</span>\n              <span className=\"ml-2 font-medium\">\n                {Math.min(...rawData.matrix.flat()).toFixed(2)} - {Math.max(...rawData.matrix.flat()).toFixed(2)}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 预测生成进度 */}\n      {isGenerating && (\n        <div className=\"mb-6 bg-blue-50 p-4 rounded-lg border border-blue-200\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <h4 className=\"font-medium text-blue-800\">正在生成预测数据...</h4>\n            <span className=\"text-sm font-medium text-blue-600\">{generationProgress}%</span>\n          </div>\n          <div className=\"w-full bg-blue-200 rounded-full h-3\">\n            <div \n              className=\"bg-blue-600 h-3 rounded-full transition-all duration-300 ease-out\"\n              style={{ width: `${generationProgress}%` }}\n            ></div>\n          </div>\n          <div className=\"mt-2 text-sm text-blue-700\">\n            {generationProgress <= 10 && '正在验证数据...'}\n            {generationProgress > 10 && generationProgress <= 30 && '正在执行拟合算法...'}\n            {generationProgress > 30 && generationProgress <= 50 && '正在分析最佳拟合结果...'}\n            {generationProgress > 50 && generationProgress <= 95 && '正在计算预测结果...'}\n            {generationProgress > 95 && '即将完成...'}\n          </div>\n        </div>\n      )}\n\n      {/* 生成预测按钮 */}\n      {rawData && ((localGrayScaleData && localBrightnessBlocks) || (grayScaleData.values.length > 0 && brightnessBlocks.length > 0)) && (\n        <div className=\"mb-6\">\n          <button\n            onClick={generatePredictions}\n            className=\"px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\"\n          >\n            生成预测结果\n          </button>\n        </div>\n      )}\n\n      {/* 最佳拟合信息 */}\n      {bestFittingResult && (\n        <div className=\"mb-6 p-4 bg-blue-50 rounded-lg\">\n          <h4 className=\"font-medium mb-2\">使用的最佳拟合模型</h4>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">拟合类型：</span>\n              <span className=\"font-medium\">{getTypeLabel(bestFittingResult.type)}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">R²值：</span>\n              <span className=\"font-medium\">{bestFittingResult.rSquared.toFixed(6)}</span>\n            </div>\n            <div className=\"col-span-2\">\n              <span className=\"text-gray-600\">拟合公式：</span>\n              <span className=\"font-medium font-mono\">{bestFittingResult.formula}</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 原始数据热力图 */}\n      {rawData && (\n        <div className=\"mb-6\">\n          <h4 className=\"font-medium mb-3\">原始数据热力图</h4>\n          <p className=\"text-sm text-gray-600 mb-2\">\n            双击任意像素位置查看该位置的拟合结果\n          </p>\n          \n          {/* SVG热力图 */}\n          <div className=\"bg-white p-4 rounded-lg border border-gray-200 overflow-x-auto\">\n            <div className=\"inline-block\">\n              <svg \n                width={`${(rawData.matrix[0]?.length || 32) * 24 + 60}`} \n                height={`${rawData.matrix.length * 24 + 60}`} \n                className=\"bg-white\"\n              >\n                {/* 列标识 (顶部) */}\n                {Array.from({ length: rawData.matrix[0]?.length || 32 }, (_, colIndex) => (\n                  <text\n                    key={`col-label-${colIndex}`}\n                    x={30 + colIndex * 24 + 12}\n                    y={15}\n                    textAnchor=\"middle\"\n                    className=\"text-xs fill-gray-600 font-mono\"\n                  >\n                    {colIndex}\n                  </text>\n                ))}\n                \n                {/* 行标识 (左侧) */}\n                {rawData.matrix.map((_, rowIndex) => (\n                  <text\n                    key={`row-label-${rowIndex}`}\n                    x={15}\n                    y={30 + rowIndex * 24 + 16}\n                    textAnchor=\"middle\"\n                    className=\"text-xs fill-gray-600 font-mono\"\n                  >\n                    {rowIndex}\n                  </text>\n                ))}\n                \n                {/* 热力图数据 */}\n                {rawData.matrix.map((row, rowIndex) =>\n                  row.map((value, colIndex) => {\n                    const backgroundColor = getColor(value);\n                    \n                    // 根据背景色调整文字颜色\n                    const minValue = Math.min(...rawData.matrix.flat());\n                    const maxValue = Math.max(...rawData.matrix.flat());\n                    const normalizedValue = (value - minValue) / (maxValue - minValue);\n                    const textColor = normalizedValue > 0.5 ? 'white' : 'black';\n                    \n                    return (\n                      <g key={`${rowIndex}-${colIndex}`}>\n                        <rect\n                          x={30 + colIndex * 24}\n                          y={30 + rowIndex * 24}\n                          width=\"24\"\n                          height=\"24\"\n                          fill={backgroundColor}\n                          stroke=\"#e5e7eb\"\n                          strokeWidth=\"0.5\"\n                          className=\"cursor-pointer hover:stroke-2 hover:stroke-blue-500\"\n                          onDoubleClick={() => handleDoubleClick(rowIndex, colIndex)}\n                        />\n                        <text\n                          x={30 + colIndex * 24 + 12}\n                          y={30 + rowIndex * 24 + 16}\n                          textAnchor=\"middle\"\n                          className=\"text-xs font-medium pointer-events-none\"\n                          fill={textColor}\n                        >\n                          {value.toFixed(1)}\n                        </text>\n                        <title>{`位置: ${numToCol(colIndex + 1)}${rowIndex + 2}, 值: ${value.toFixed(2)}`}</title>\n                      </g>\n                    );\n                  })\n                )}\n                \n                {/* 坐标轴标签 */}\n                <text \n                  x={`${((rawData.matrix[0]?.length || 32) * 24 + 60) / 2}`} \n                  y={`${rawData.matrix.length * 24 + 50}`} \n                  textAnchor=\"middle\" \n                  className=\"text-sm fill-gray-700 font-medium\"\n                >\n                  列索引 (0-{(rawData.matrix[0]?.length || 32) - 1})\n                </text>\n                <text \n                  x=\"15\" \n                  y={`${(rawData.matrix.length * 24 + 60) / 2}`} \n                  textAnchor=\"middle\" \n                  className=\"text-sm fill-gray-700 font-medium\" \n                  transform={`rotate(-90 15 ${(rawData.matrix.length * 24 + 60) / 2})`}\n                >\n                  行索引 (0-{rawData.matrix.length - 1})\n                </text>\n              </svg>\n            </div>\n          </div>\n          \n          {/* 颜色图例 */}\n           <div className=\"mt-4 flex items-center gap-4\">\n             <span className=\"text-sm text-gray-600\">数值范围:</span>\n             <div className=\"flex items-center gap-2\">\n               <div className=\"w-4 h-4\" style={{ backgroundColor: getColor(Math.min(...rawData.matrix.flat())) }}></div>\n               <span className=\"text-xs\">{Math.min(...rawData.matrix.flat()).toFixed(2)}</span>\n               <div className=\"w-20 h-4 bg-gradient-to-r\" \n                    style={{ \n                      backgroundImage: `linear-gradient(to right, ${getColor(Math.min(...rawData.matrix.flat()))}, ${getColor(Math.max(...rawData.matrix.flat()))})` \n                    }}>\n               </div>\n               <span className=\"text-xs\">{Math.max(...rawData.matrix.flat()).toFixed(2)}</span>\n               <div className=\"w-4 h-4\" style={{ backgroundColor: getColor(Math.max(...rawData.matrix.flat())) }}></div>\n             </div>\n           </div>\n\n          \n          {/* 双击拟合结果卡片 */}\n          {doubleClickedCell && (\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\" onClick={handleCloseDoubleClickCard}>\n              <div className=\"bg-white rounded-lg p-6 max-w-2xl w-full mx-4 max-h-[80vh] overflow-y-auto\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h5 className=\"text-lg font-semibold\">位置 {numToCol(doubleClickedCell.col + 1)}{doubleClickedCell.row + 2} 详细拟合结果</h5>\n                  <button\n                    onClick={handleCloseDoubleClickCard}\n                    className=\"text-gray-500 hover:text-gray-700 text-2xl font-bold leading-none\"\n                    aria-label=\"关闭\"\n                  >\n                    ×\n                  </button>\n                </div>\n                {doubleClickPredictionContent}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* 预测结果 */}\n      {predictionResults.length > 0 && (\n        <div className=\"mb-6\">\n          <div className=\"flex justify-between items-center mb-3\">\n            <h4 className=\"font-medium\">预测结果</h4>\n            <button\n              onClick={exportToExcel}\n              className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm\"\n            >\n              导出到Excel\n            </button>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n            {predictionResults.map((result, index) => (\n              <div key={index} className=\"bg-gradient-to-br from-blue-50 to-indigo-100 p-4 rounded-lg border border-blue-200 hover:shadow-md transition-shadow\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm font-medium text-gray-600\">位置: {result.position}</span>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-gray-600\">亮度值:</span>\n                    <span className=\"text-sm font-medium\">{result.brightnessValue.toFixed(2)}</span>\n                  </div>\n                  \n                  {/* 显示所有拟合方法的预测结果 */}\n                  <div className=\"mt-3 pt-2 border-t border-blue-200\">\n                    <div className=\"text-xs font-medium text-gray-700 mb-2\">各拟合方法预测值:</div>\n                    <div className=\"space-y-2\">\n                      {Object.entries(result.predictions).map(([method, prediction]) => (\n                        <div key={method} className=\"bg-white rounded p-2 border\">\n                          <div className=\"flex justify-between items-center mb-1\">\n                            <span className=\"text-xs font-medium text-gray-600\">\n                              {getTypeLabel(method)}\n                            </span>\n                            <span className=\"text-xs text-blue-600 font-medium\">\n                              {prediction.predictedGrayScale.toFixed(4)}\n                            </span>\n                          </div>\n                          <div className=\"text-xs text-gray-500 mb-1\">\n                            置信度: {(prediction.confidence * 100).toFixed(1)}%\n                          </div>\n                          <div className=\"text-xs text-gray-400 break-all font-mono\">\n                            {prediction.formula}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          {/* 统计信息 */}\n          <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n            <h5 className=\"font-medium mb-2\">预测统计</h5>\n            <div className=\"grid grid-cols-3 gap-4 text-sm\">\n              <div>\n                <span className=\"text-gray-600\">预测数据点：</span>\n                <span className=\"font-medium\">{predictionResults.length}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">拟合方法数：</span>\n                <span className=\"font-medium\">\n                  {predictionResults.length > 0 ? Object.keys(predictionResults[0].predictions).length : 0}\n                </span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">最佳拟合：</span>\n                <span className=\"font-medium\">\n                  {bestFittingResult ? getTypeLabel(bestFittingResult.type) : 'N/A'}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 使用说明 */}\n      {!rawData && (\n        <div className=\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n          <h4 className=\"font-medium mb-2 text-yellow-800\">使用说明</h4>\n          <ul className=\"text-sm text-yellow-700 space-y-1\">\n            <li>1. 首先确保已上传并处理了原始数据文件</li>\n            <li>2. 上传包含Sheet3工作表的Excel文件，目标数据应位于B列</li>\n            <li>3. 系统将自动选择最佳拟合模型进行预测</li>\n            <li>4. 生成预测结果后可导出到Excel文件</li>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TargetDataPrediction;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}