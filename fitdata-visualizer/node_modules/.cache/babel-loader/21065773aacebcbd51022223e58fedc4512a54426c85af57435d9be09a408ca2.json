{"ast":null,"code":"var _jsxFileName = \"D:\\\\source\\\\fitdata\\\\fitdata-visualizer\\\\src\\\\components\\\\TargetDataPrediction.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport * as XLSX from 'xlsx';\nimport { performAllFittings } from '../utils/curveFitting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TargetDataPrediction = ({\n  grayScaleData,\n  brightnessBlocks\n}) => {\n  _s();\n  const [targetData, setTargetData] = useState(null);\n  const [predictionResults, setPredictionResults] = useState([]);\n  const [bestFittingResult, setBestFittingResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // 读取Excel Sheet3数据\n  const handleFileUpload = useCallback(event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setIsLoading(true);\n    setError(null);\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        var _e$target;\n        const data = new Uint8Array((_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.result);\n        const workbook = XLSX.read(data, {\n          type: 'array'\n        });\n\n        // 检查是否有Sheet3\n        if (!workbook.SheetNames.includes('Sheet3')) {\n          throw new Error('未找到Sheet3工作表');\n        }\n        const worksheet = workbook.Sheets['Sheet3'];\n        const values = [];\n        const positions = [];\n\n        // 读取A2-AF21范围的目标数据（20行×32列）\n        const startRow = 2;\n        const endRow = 21;\n        const startCol = 'A';\n        const endCol = 'AF';\n\n        // 将列字母转换为数字\n        const colToNum = col => {\n          let result = 0;\n          for (let i = 0; i < col.length; i++) {\n            result = result * 26 + (col.charCodeAt(i) - 'A'.charCodeAt(0) + 1);\n          }\n          return result;\n        };\n        const numToCol = num => {\n          let result = '';\n          while (num > 0) {\n            num--;\n            result = String.fromCharCode('A'.charCodeAt(0) + num % 26) + result;\n            num = Math.floor(num / 26);\n          }\n          return result;\n        };\n        const startColNum = colToNum(startCol);\n        const endColNum = colToNum(endCol);\n\n        // 按行读取数据\n        for (let row = startRow; row <= endRow; row++) {\n          for (let colNum = startColNum; colNum <= endColNum; colNum++) {\n            const col = numToCol(colNum);\n            const cellAddress = `${col}${row}`;\n            const cell = worksheet[cellAddress];\n            if (cell && cell.v !== undefined && cell.v !== null && cell.v !== '') {\n              const value = typeof cell.v === 'number' ? cell.v : parseFloat(cell.v.toString());\n              if (!isNaN(value)) {\n                values.push(value);\n                positions.push(cellAddress);\n              }\n            }\n          }\n        }\n        if (values.length === 0) {\n          throw new Error('Sheet3中未找到有效的目标数据');\n        }\n        setTargetData({\n          values,\n          positions\n        });\n      } catch (error) {\n        setError(error instanceof Error ? error.message : '文件读取失败');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    reader.onerror = () => {\n      setError('文件读取失败');\n      setIsLoading(false);\n    };\n    reader.readAsArrayBuffer(file);\n  }, []);\n\n  // 生成预测结果\n  const generatePredictions = useCallback(() => {\n    if (!targetData) {\n      setError('请先上传目标数据');\n      return;\n    }\n    if (!grayScaleData.values.length || !brightnessBlocks.length) {\n      setError('无法获取有效的拟合数据');\n      return;\n    }\n\n    // 提取中心像素值和灰阶值\n    const centerPixelValues = brightnessBlocks.map(block => block.centerPixelValue);\n    const grayScaleValues = grayScaleData.values;\n    if (centerPixelValues.length !== grayScaleValues.length) {\n      setError('拟合数据长度不匹配');\n      return;\n    }\n\n    // 执行所有拟合算法\n    const allFittingResults = performAllFittings({\n      x: centerPixelValues,\n      y: grayScaleValues\n    });\n\n    // 找到最佳拟合结果用于显示\n    const bestFitting = allFittingResults.reduce((best, current) => {\n      if (isNaN(current.rSquared) || current.rSquared < 0) return best;\n      if (!best || current.rSquared > best.rSquared) return current;\n      return best;\n    }, null);\n    if (!bestFitting) {\n      setError('无法获取有效的拟合结果');\n      return;\n    }\n    setBestFittingResult(bestFitting);\n    const predictions = targetData.values.map((targetValue, index) => {\n      // 计算对应的亮度值\n      let brightnessValue = 0;\n      if (index < brightnessBlocks.length) {\n        brightnessValue = brightnessBlocks[index].centerPixelValue;\n      }\n\n      // 为每种拟合方法计算预测值\n      const methodPredictions = {};\n      allFittingResults.forEach(fitting => {\n        if (isNaN(fitting.rSquared) || fitting.rSquared < 0) return;\n        let predictedGrayScale = 0;\n\n        // 根据拟合类型计算预测值\n        switch (fitting.type) {\n          case 'logarithmic':\n            if (targetValue > 0) {\n              const [a, b] = fitting.coefficients;\n              predictedGrayScale = a * Math.log(targetValue) + b;\n            }\n            break;\n          case 'exponential':\n            const [a_exp, b_exp] = fitting.coefficients;\n            predictedGrayScale = a_exp * Math.exp(b_exp * targetValue);\n            break;\n          case 'polynomial':\n            const [a_poly, b_poly, c_poly, d_poly] = fitting.coefficients;\n            predictedGrayScale = a_poly * Math.pow(targetValue, 3) + b_poly * Math.pow(targetValue, 2) + c_poly * targetValue + d_poly;\n            break;\n          case 'power':\n            if (targetValue > 0) {\n              const [a_pow, b_pow] = fitting.coefficients;\n              predictedGrayScale = a_pow * Math.pow(targetValue, b_pow);\n            }\n            break;\n          case 'bivariate':\n            const [a_biv, b_biv, c_biv] = fitting.coefficients;\n            predictedGrayScale = a_biv * Math.pow(targetValue, 2) + b_biv * targetValue + c_biv;\n            break;\n        }\n        methodPredictions[fitting.type] = {\n          predictedGrayScale,\n          formula: fitting.formula,\n          confidence: fitting.rSquared,\n          fittingType: fitting.type\n        };\n      });\n      return {\n        targetValue,\n        position: targetData.positions[index],\n        brightnessValue,\n        predictions: methodPredictions\n      };\n    });\n    setPredictionResults(predictions);\n    setError(null);\n  }, [targetData, grayScaleData, brightnessBlocks]);\n\n  // 导出预测结果到Excel\n  const exportToExcel = useCallback(() => {\n    if (predictionResults.length === 0 || !targetData) {\n      setError('没有预测结果可导出');\n      return;\n    }\n    const workbook = XLSX.utils.book_new();\n\n    // 创建矩阵格式的预测结果工作表\n    const rows = 20; // A2-AF21 共20行\n    const cols = 32; // A-AF 共32列\n\n    // 将列数字转换为字母的辅助函数\n    const numToCol = num => {\n      let result = '';\n      while (num > 0) {\n        num--;\n        result = String.fromCharCode('A'.charCodeAt(0) + num % 26) + result;\n        num = Math.floor(num / 26);\n      }\n      return result;\n    };\n\n    // 创建列标题 (A-AF)\n    const colHeaders = [];\n    for (let i = 0; i < cols; i++) {\n      colHeaders.push(numToCol(i + 1));\n    }\n\n    // 创建原始目标数据矩阵工作表\n    const originalMatrixData = [];\n    originalMatrixData.push(['', ...colHeaders]);\n    for (let row = 0; row < rows; row++) {\n      const rowData = [row + 2]; // 行号从2开始\n      for (let col = 0; col < cols; col++) {\n        const dataIndex = row * cols + col;\n        if (dataIndex < targetData.values.length) {\n          rowData.push(targetData.values[dataIndex]);\n        } else {\n          rowData.push('');\n        }\n      }\n      originalMatrixData.push(rowData);\n    }\n    const originalWorksheet = XLSX.utils.aoa_to_sheet(originalMatrixData);\n    XLSX.utils.book_append_sheet(workbook, originalWorksheet, '原始目标数据');\n\n    // 获取所有拟合方法\n    const allMethods = new Set();\n    predictionResults.forEach(result => {\n      Object.keys(result.predictions).forEach(method => allMethods.add(method));\n    });\n\n    // 为每种拟合方法创建单独的预测结果矩阵\n    Array.from(allMethods).forEach(method => {\n      const methodMatrixData = [];\n      methodMatrixData.push(['', ...colHeaders]);\n      for (let row = 0; row < rows; row++) {\n        const rowData = [row + 2]; // 行号从2开始\n        for (let col = 0; col < cols; col++) {\n          const dataIndex = row * cols + col;\n          if (dataIndex < predictionResults.length && predictionResults[dataIndex].predictions[method]) {\n            rowData.push(parseFloat(predictionResults[dataIndex].predictions[method].predictedGrayScale.toFixed(6)));\n          } else {\n            rowData.push('');\n          }\n        }\n        methodMatrixData.push(rowData);\n      }\n      const methodWorksheet = XLSX.utils.aoa_to_sheet(methodMatrixData);\n      XLSX.utils.book_append_sheet(workbook, methodWorksheet, getTypeLabel(method));\n    });\n\n    // 创建详细预测结果工作表\n    const detailData = [];\n    detailData.push(['位置', '目标数据值', '亮度值', '拟合方法', '预测灰阶值', '置信度(R²)', '拟合公式']);\n    predictionResults.forEach(result => {\n      Object.entries(result.predictions).forEach(([method, prediction]) => {\n        detailData.push([result.position, result.targetValue, result.brightnessValue.toFixed(2), getTypeLabel(method), prediction.predictedGrayScale.toFixed(6), prediction.confidence.toFixed(6), prediction.formula]);\n      });\n    });\n    const detailWorksheet = XLSX.utils.aoa_to_sheet(detailData);\n    XLSX.utils.book_append_sheet(workbook, detailWorksheet, '详细结果');\n\n    // 添加拟合信息工作表\n    if (bestFittingResult) {\n      const fittingInfo = [['拟合信息', ''], ['最佳拟合类型', getTypeLabel(bestFittingResult.type)], ['拟合公式', bestFittingResult.formula], ['R²值', bestFittingResult.rSquared.toFixed(6)], ['RMSE', bestFittingResult.rmse.toFixed(6)], ['MAE', bestFittingResult.mae.toFixed(6)], ['最大误差', bestFittingResult.maxError.toFixed(6)]];\n      const fittingWs = XLSX.utils.aoa_to_sheet(fittingInfo);\n      XLSX.utils.book_append_sheet(workbook, fittingWs, '拟合信息');\n    }\n\n    // 下载文件\n    const fileName = `目标数据预测结果_${new Date().toISOString().slice(0, 10)}.xlsx`;\n    XLSX.writeFile(workbook, fileName);\n  }, [predictionResults, bestFittingResult, targetData]);\n\n  // 获取拟合类型标签\n  const getTypeLabel = type => {\n    const labels = {\n      'logarithmic': '对数拟合',\n      'exponential': '指数拟合',\n      'polynomial': '三次多项式拟合',\n      'power': '幂函数拟合',\n      'bivariate': '二次多项式拟合'\n    };\n    return labels[type] || type;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-lg p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold mb-6\",\n      children: \"\\u76EE\\u6807\\u6570\\u636E\\u9884\\u6D4B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-3\",\n        children: \"\\u4E0A\\u4F20\\u76EE\\u6807\\u6570\\u636E\\u6587\\u4EF6 (Sheet3)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".xlsx,.xls\",\n          onChange: handleFileUpload,\n          className: \"hidden\",\n          id: \"target-file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"target-file-upload\",\n          className: \"cursor-pointer inline-flex items-center px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\",\n          children: \"\\u9009\\u62E9Excel\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-sm text-gray-500\",\n          children: \"\\u8BF7\\u9009\\u62E9\\u5305\\u542BSheet3\\u5DE5\\u4F5C\\u8868\\u7684Excel\\u6587\\u4EF6\\uFF0C\\u76EE\\u6807\\u6570\\u636E\\u5E94\\u4F4D\\u4E8EB\\u5217\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-blue-700\",\n        children: \"\\u6B63\\u5728\\u8BFB\\u53D6\\u6587\\u4EF6...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-700\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 9\n    }, this), targetData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-gray-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-2\",\n        children: \"\\u76EE\\u6807\\u6570\\u636E\\u6982\\u89C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u6570\\u636E\\u70B9\\u6570\\u91CF\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: targetData.values.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u6570\\u503C\\u8303\\u56F4\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: [Math.min(...targetData.values).toFixed(2), \" - \", Math.max(...targetData.values).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }, this), targetData && grayScaleData.values.length > 0 && brightnessBlocks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generatePredictions,\n        className: \"px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\",\n        children: \"\\u751F\\u6210\\u9884\\u6D4B\\u7ED3\\u679C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }, this), bestFittingResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-blue-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-2\",\n        children: \"\\u4F7F\\u7528\\u7684\\u6700\\u4F73\\u62DF\\u5408\\u6A21\\u578B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u62DF\\u5408\\u7C7B\\u578B\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: getTypeLabel(bestFittingResult.type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"R\\xB2\\u503C\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: bestFittingResult.rSquared.toFixed(6)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u62DF\\u5408\\u516C\\u5F0F\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium font-mono\",\n            children: bestFittingResult.formula\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }, this), predictionResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium\",\n          children: \"\\u9884\\u6D4B\\u7ED3\\u679C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportToExcel,\n          className: \"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm\",\n          children: \"\\u5BFC\\u51FA\\u5230Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\",\n        children: predictionResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gradient-to-br from-blue-50 to-indigo-100 p-4 rounded-lg border border-blue-200 hover:shadow-md transition-shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-medium text-gray-600\",\n              children: [\"\\u4F4D\\u7F6E: \", result.position]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-gray-600\",\n                children: \"\\u4EAE\\u5EA6\\u503C:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-medium\",\n                children: result.brightnessValue.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-gray-600\",\n                children: \"\\u76EE\\u6807\\u503C:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-medium\",\n                children: result.targetValue.toFixed(4)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 pt-2 border-t border-blue-200\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs font-medium text-gray-700 mb-2\",\n                children: \"\\u5404\\u62DF\\u5408\\u65B9\\u6CD5\\u9884\\u6D4B\\u503C:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: Object.entries(result.predictions).map(([method, prediction]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-white rounded p-2 border\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center mb-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-xs font-medium text-gray-600\",\n                      children: getTypeLabel(method)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 506,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-xs text-blue-600 font-medium\",\n                      children: prediction.predictedGrayScale.toFixed(4)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 509,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500 mb-1\",\n                    children: [\"\\u7F6E\\u4FE1\\u5EA6: \", (prediction.confidence * 100).toFixed(1), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-400 break-all font-mono\",\n                    children: prediction.formula\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 516,\n                    columnNumber: 27\n                  }, this)]\n                }, method, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-4 bg-gray-50 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"font-medium mb-2\",\n          children: \"\\u9884\\u6D4B\\u7EDF\\u8BA1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-4 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: \"\\u9884\\u6D4B\\u6570\\u636E\\u70B9\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: predictionResults.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: \"\\u62DF\\u5408\\u65B9\\u6CD5\\u6570\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: predictionResults.length > 0 ? Object.keys(predictionResults[0].predictions).length : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: \"\\u6700\\u4F73\\u62DF\\u5408\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: bestFittingResult ? getTypeLabel(bestFittingResult.type) : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }, this), !targetData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-2 text-yellow-800\",\n        children: \"\\u4F7F\\u7528\\u8BF4\\u660E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"text-sm text-yellow-700 space-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"1. \\u9996\\u5148\\u786E\\u4FDD\\u5DF2\\u4E0A\\u4F20\\u5E76\\u5904\\u7406\\u4E86\\u539F\\u59CB\\u6570\\u636E\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"2. \\u4E0A\\u4F20\\u5305\\u542BSheet3\\u5DE5\\u4F5C\\u8868\\u7684Excel\\u6587\\u4EF6\\uFF0C\\u76EE\\u6807\\u6570\\u636E\\u5E94\\u4F4D\\u4E8EB\\u5217\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"3. \\u7CFB\\u7EDF\\u5C06\\u81EA\\u52A8\\u9009\\u62E9\\u6700\\u4F73\\u62DF\\u5408\\u6A21\\u578B\\u8FDB\\u884C\\u9884\\u6D4B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"4. \\u751F\\u6210\\u9884\\u6D4B\\u7ED3\\u679C\\u540E\\u53EF\\u5BFC\\u51FA\\u5230Excel\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 376,\n    columnNumber: 5\n  }, this);\n};\n_s(TargetDataPrediction, \"Hi3W37cBvsM6Ny0Nq19BmYXaNus=\");\n_c = TargetDataPrediction;\nexport default TargetDataPrediction;\nvar _c;\n$RefreshReg$(_c, \"TargetDataPrediction\");","map":{"version":3,"names":["React","useState","useCallback","XLSX","performAllFittings","jsxDEV","_jsxDEV","TargetDataPrediction","grayScaleData","brightnessBlocks","_s","targetData","setTargetData","predictionResults","setPredictionResults","bestFittingResult","setBestFittingResult","isLoading","setIsLoading","error","setError","handleFileUpload","event","_event$target$files","file","target","files","reader","FileReader","onload","e","_e$target","data","Uint8Array","result","workbook","read","type","SheetNames","includes","Error","worksheet","Sheets","values","positions","startRow","endRow","startCol","endCol","colToNum","col","i","length","charCodeAt","numToCol","num","String","fromCharCode","Math","floor","startColNum","endColNum","row","colNum","cellAddress","cell","v","undefined","value","parseFloat","toString","isNaN","push","message","onerror","readAsArrayBuffer","generatePredictions","centerPixelValues","map","block","centerPixelValue","grayScaleValues","allFittingResults","x","y","bestFitting","reduce","best","current","rSquared","predictions","targetValue","index","brightnessValue","methodPredictions","forEach","fitting","predictedGrayScale","a","b","coefficients","log","a_exp","b_exp","exp","a_poly","b_poly","c_poly","d_poly","pow","a_pow","b_pow","a_biv","b_biv","c_biv","formula","confidence","fittingType","position","exportToExcel","utils","book_new","rows","cols","colHeaders","originalMatrixData","rowData","dataIndex","originalWorksheet","aoa_to_sheet","book_append_sheet","allMethods","Set","Object","keys","method","add","Array","from","methodMatrixData","toFixed","methodWorksheet","getTypeLabel","detailData","entries","prediction","detailWorksheet","fittingInfo","rmse","mae","maxError","fittingWs","fileName","Date","toISOString","slice","writeFile","labels","className","children","_jsxFileName","lineNumber","columnNumber","accept","onChange","id","htmlFor","min","max","onClick","_c","$RefreshReg$"],"sources":["D:/source/fitdata/fitdata-visualizer/src/components/TargetDataPrediction.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport * as XLSX from 'xlsx';\nimport { FittingResult, performAllFittings } from '../utils/curveFitting';\n\ninterface TargetData {\n  values: number[];\n  positions: string[];\n}\n\ninterface PredictionResult {\n  targetValue: number;\n  position: string;\n  brightnessValue: number;\n  predictions: {\n    [key: string]: {\n      predictedGrayScale: number;\n      formula: string;\n      confidence: number;\n      fittingType: string;\n    }\n  };\n}\n\ninterface TargetDataPredictionProps {\n  grayScaleData: {\n    values: number[];\n    positions: string[];\n  };\n  brightnessBlocks: Array<{\n    label: string;\n    startRow: number;\n    endRow: number;\n    data: number[][];\n    centerPixelValue: number;\n    normalizedData?: number[][];\n  }>;\n}\n\nconst TargetDataPrediction: React.FC<TargetDataPredictionProps> = ({ grayScaleData, brightnessBlocks }) => {\n  const [targetData, setTargetData] = useState<TargetData | null>(null);\n  const [predictionResults, setPredictionResults] = useState<PredictionResult[]>([]);\n  const [bestFittingResult, setBestFittingResult] = useState<FittingResult | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // 读取Excel Sheet3数据\n  const handleFileUpload = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const data = new Uint8Array(e.target?.result as ArrayBuffer);\n        const workbook = XLSX.read(data, { type: 'array' });\n        \n        // 检查是否有Sheet3\n        if (!workbook.SheetNames.includes('Sheet3')) {\n          throw new Error('未找到Sheet3工作表');\n        }\n        \n        const worksheet = workbook.Sheets['Sheet3'];\n        const values: number[] = [];\n        const positions: string[] = [];\n        \n        // 读取A2-AF21范围的目标数据（20行×32列）\n        const startRow = 2;\n        const endRow = 21;\n        const startCol = 'A';\n        const endCol = 'AF';\n        \n        // 将列字母转换为数字\n        const colToNum = (col: string): number => {\n          let result = 0;\n          for (let i = 0; i < col.length; i++) {\n            result = result * 26 + (col.charCodeAt(i) - 'A'.charCodeAt(0) + 1);\n          }\n          return result;\n        };\n        \n        const numToCol = (num: number): string => {\n          let result = '';\n          while (num > 0) {\n            num--;\n            result = String.fromCharCode('A'.charCodeAt(0) + (num % 26)) + result;\n            num = Math.floor(num / 26);\n          }\n          return result;\n        };\n        \n        const startColNum = colToNum(startCol);\n        const endColNum = colToNum(endCol);\n        \n        // 按行读取数据\n        for (let row = startRow; row <= endRow; row++) {\n          for (let colNum = startColNum; colNum <= endColNum; colNum++) {\n            const col = numToCol(colNum);\n            const cellAddress = `${col}${row}`;\n            const cell = worksheet[cellAddress];\n            \n            if (cell && cell.v !== undefined && cell.v !== null && cell.v !== '') {\n              const value = typeof cell.v === 'number' ? cell.v : parseFloat(cell.v.toString());\n              if (!isNaN(value)) {\n                values.push(value);\n                positions.push(cellAddress);\n              }\n            }\n          }\n        }\n        \n        if (values.length === 0) {\n          throw new Error('Sheet3中未找到有效的目标数据');\n        }\n        \n        setTargetData({ values, positions });\n      } catch (error) {\n        setError(error instanceof Error ? error.message : '文件读取失败');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    reader.onerror = () => {\n      setError('文件读取失败');\n      setIsLoading(false);\n    };\n    \n    reader.readAsArrayBuffer(file);\n  }, []);\n\n\n\n  // 生成预测结果\n  const generatePredictions = useCallback(() => {\n    if (!targetData) {\n      setError('请先上传目标数据');\n      return;\n    }\n\n    if (!grayScaleData.values.length || !brightnessBlocks.length) {\n      setError('无法获取有效的拟合数据');\n      return;\n    }\n\n    // 提取中心像素值和灰阶值\n    const centerPixelValues = brightnessBlocks.map(block => block.centerPixelValue);\n    const grayScaleValues = grayScaleData.values;\n\n    if (centerPixelValues.length !== grayScaleValues.length) {\n      setError('拟合数据长度不匹配');\n      return;\n    }\n\n    // 执行所有拟合算法\n    const allFittingResults = performAllFittings({\n      x: centerPixelValues,\n      y: grayScaleValues\n    });\n\n    // 找到最佳拟合结果用于显示\n    const bestFitting = allFittingResults.reduce((best, current) => {\n      if (isNaN(current.rSquared) || current.rSquared < 0) return best;\n      if (!best || current.rSquared > best.rSquared) return current;\n      return best;\n    }, null as FittingResult | null);\n\n    if (!bestFitting) {\n      setError('无法获取有效的拟合结果');\n      return;\n    }\n\n    setBestFittingResult(bestFitting);\n\n    const predictions: PredictionResult[] = targetData.values.map((targetValue, index) => {\n      // 计算对应的亮度值\n      let brightnessValue = 0;\n      if (index < brightnessBlocks.length) {\n        brightnessValue = brightnessBlocks[index].centerPixelValue;\n      }\n\n      // 为每种拟合方法计算预测值\n      const methodPredictions: { [key: string]: { predictedGrayScale: number; formula: string; confidence: number; fittingType: string } } = {};\n      \n      allFittingResults.forEach(fitting => {\n        if (isNaN(fitting.rSquared) || fitting.rSquared < 0) return;\n        \n        let predictedGrayScale = 0;\n        \n        // 根据拟合类型计算预测值\n        switch (fitting.type) {\n          case 'logarithmic':\n            if (targetValue > 0) {\n              const [a, b] = fitting.coefficients;\n              predictedGrayScale = a * Math.log(targetValue) + b;\n            }\n            break;\n          case 'exponential':\n            const [a_exp, b_exp] = fitting.coefficients;\n            predictedGrayScale = a_exp * Math.exp(b_exp * targetValue);\n            break;\n          case 'polynomial':\n            const [a_poly, b_poly, c_poly, d_poly] = fitting.coefficients;\n            predictedGrayScale = a_poly * Math.pow(targetValue, 3) + \n                                b_poly * Math.pow(targetValue, 2) + \n                                c_poly * targetValue + d_poly;\n            break;\n          case 'power':\n            if (targetValue > 0) {\n              const [a_pow, b_pow] = fitting.coefficients;\n              predictedGrayScale = a_pow * Math.pow(targetValue, b_pow);\n            }\n            break;\n          case 'bivariate':\n            const [a_biv, b_biv, c_biv] = fitting.coefficients;\n            predictedGrayScale = a_biv * Math.pow(targetValue, 2) + \n                                b_biv * targetValue + c_biv;\n            break;\n        }\n\n        methodPredictions[fitting.type] = {\n          predictedGrayScale,\n          formula: fitting.formula,\n          confidence: fitting.rSquared,\n          fittingType: fitting.type\n        };\n      });\n\n      return {\n        targetValue,\n        position: targetData.positions[index],\n        brightnessValue,\n        predictions: methodPredictions\n      };\n    });\n\n    setPredictionResults(predictions);\n    setError(null);\n  }, [targetData, grayScaleData, brightnessBlocks]);\n\n  // 导出预测结果到Excel\n  const exportToExcel = useCallback(() => {\n    if (predictionResults.length === 0 || !targetData) {\n      setError('没有预测结果可导出');\n      return;\n    }\n\n    const workbook = XLSX.utils.book_new();\n    \n    // 创建矩阵格式的预测结果工作表\n    const rows = 20; // A2-AF21 共20行\n    const cols = 32; // A-AF 共32列\n    \n    // 将列数字转换为字母的辅助函数\n    const numToCol = (num: number): string => {\n      let result = '';\n      while (num > 0) {\n        num--;\n        result = String.fromCharCode('A'.charCodeAt(0) + (num % 26)) + result;\n        num = Math.floor(num / 26);\n      }\n      return result;\n    };\n    \n    // 创建列标题 (A-AF)\n    const colHeaders: string[] = [];\n    for (let i = 0; i < cols; i++) {\n      colHeaders.push(numToCol(i + 1));\n    }\n    \n    // 创建原始目标数据矩阵工作表\n    const originalMatrixData = [];\n    originalMatrixData.push(['', ...colHeaders]);\n    \n    for (let row = 0; row < rows; row++) {\n      const rowData: (string | number)[] = [row + 2]; // 行号从2开始\n      for (let col = 0; col < cols; col++) {\n        const dataIndex = row * cols + col;\n        if (dataIndex < targetData.values.length) {\n          rowData.push(targetData.values[dataIndex]);\n        } else {\n          rowData.push('');\n        }\n      }\n      originalMatrixData.push(rowData);\n    }\n    \n    const originalWorksheet = XLSX.utils.aoa_to_sheet(originalMatrixData);\n    XLSX.utils.book_append_sheet(workbook, originalWorksheet, '原始目标数据');\n    \n    // 获取所有拟合方法\n    const allMethods = new Set<string>();\n    predictionResults.forEach(result => {\n      Object.keys(result.predictions).forEach(method => allMethods.add(method));\n    });\n    \n    // 为每种拟合方法创建单独的预测结果矩阵\n    Array.from(allMethods).forEach(method => {\n      const methodMatrixData = [];\n      methodMatrixData.push(['', ...colHeaders]);\n      \n      for (let row = 0; row < rows; row++) {\n        const rowData: (string | number)[] = [row + 2]; // 行号从2开始\n        for (let col = 0; col < cols; col++) {\n          const dataIndex = row * cols + col;\n          if (dataIndex < predictionResults.length && predictionResults[dataIndex].predictions[method]) {\n            rowData.push(parseFloat(predictionResults[dataIndex].predictions[method].predictedGrayScale.toFixed(6)));\n          } else {\n            rowData.push('');\n          }\n        }\n        methodMatrixData.push(rowData);\n      }\n      \n      const methodWorksheet = XLSX.utils.aoa_to_sheet(methodMatrixData);\n      XLSX.utils.book_append_sheet(workbook, methodWorksheet, getTypeLabel(method));\n    });\n    \n    // 创建详细预测结果工作表\n    const detailData: any[] = [];\n    detailData.push(['位置', '目标数据值', '亮度值', '拟合方法', '预测灰阶值', '置信度(R²)', '拟合公式']);\n    \n    predictionResults.forEach(result => {\n      Object.entries(result.predictions).forEach(([method, prediction]) => {\n        detailData.push([\n          result.position,\n          result.targetValue,\n          result.brightnessValue.toFixed(2),\n          getTypeLabel(method),\n          prediction.predictedGrayScale.toFixed(6),\n          prediction.confidence.toFixed(6),\n          prediction.formula\n        ]);\n      });\n    });\n    \n    const detailWorksheet = XLSX.utils.aoa_to_sheet(detailData);\n    XLSX.utils.book_append_sheet(workbook, detailWorksheet, '详细结果');\n    \n    // 添加拟合信息工作表\n    if (bestFittingResult) {\n      const fittingInfo = [\n        ['拟合信息', ''],\n        ['最佳拟合类型', getTypeLabel(bestFittingResult.type)],\n        ['拟合公式', bestFittingResult.formula],\n        ['R²值', bestFittingResult.rSquared.toFixed(6)],\n        ['RMSE', bestFittingResult.rmse.toFixed(6)],\n        ['MAE', bestFittingResult.mae.toFixed(6)],\n        ['最大误差', bestFittingResult.maxError.toFixed(6)]\n      ];\n      \n      const fittingWs = XLSX.utils.aoa_to_sheet(fittingInfo);\n      XLSX.utils.book_append_sheet(workbook, fittingWs, '拟合信息');\n    }\n    \n    // 下载文件\n    const fileName = `目标数据预测结果_${new Date().toISOString().slice(0, 10)}.xlsx`;\n    XLSX.writeFile(workbook, fileName);\n  }, [predictionResults, bestFittingResult, targetData]);\n\n  // 获取拟合类型标签\n  const getTypeLabel = (type: string) => {\n    const labels: { [key: string]: string } = {\n      'logarithmic': '对数拟合',\n      'exponential': '指数拟合',\n      'polynomial': '三次多项式拟合',\n      'power': '幂函数拟合',\n      'bivariate': '二次多项式拟合'\n    };\n    return labels[type] || type;\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <h3 className=\"text-lg font-semibold mb-6\">目标数据预测</h3>\n      \n      {/* 文件上传区域 */}\n      <div className=\"mb-6\">\n        <h4 className=\"font-medium mb-3\">上传目标数据文件 (Sheet3)</h4>\n        <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\n          <input\n            type=\"file\"\n            accept=\".xlsx,.xls\"\n            onChange={handleFileUpload}\n            className=\"hidden\"\n            id=\"target-file-upload\"\n          />\n          <label\n            htmlFor=\"target-file-upload\"\n            className=\"cursor-pointer inline-flex items-center px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\"\n          >\n            选择Excel文件\n          </label>\n          <p className=\"mt-2 text-sm text-gray-500\">\n            请选择包含Sheet3工作表的Excel文件，目标数据应位于B列\n          </p>\n        </div>\n      </div>\n\n      {/* 加载状态 */}\n      {isLoading && (\n        <div className=\"mb-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n          <p className=\"text-blue-700\">正在读取文件...</p>\n        </div>\n      )}\n\n      {/* 错误信息 */}\n      {error && (\n        <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <p className=\"text-red-700\">{error}</p>\n        </div>\n      )}\n\n      {/* 目标数据概览 */}\n      {targetData && (\n        <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n          <h4 className=\"font-medium mb-2\">目标数据概览</h4>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">数据点数量：</span>\n              <span className=\"font-medium\">{targetData.values.length}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">数值范围：</span>\n              <span className=\"font-medium\">\n                {Math.min(...targetData.values).toFixed(2)} - {Math.max(...targetData.values).toFixed(2)}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 生成预测按钮 */}\n      {targetData && grayScaleData.values.length > 0 && brightnessBlocks.length > 0 && (\n        <div className=\"mb-6\">\n          <button\n            onClick={generatePredictions}\n            className=\"px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\"\n          >\n            生成预测结果\n          </button>\n        </div>\n      )}\n\n      {/* 最佳拟合信息 */}\n      {bestFittingResult && (\n        <div className=\"mb-6 p-4 bg-blue-50 rounded-lg\">\n          <h4 className=\"font-medium mb-2\">使用的最佳拟合模型</h4>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">拟合类型：</span>\n              <span className=\"font-medium\">{getTypeLabel(bestFittingResult.type)}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">R²值：</span>\n              <span className=\"font-medium\">{bestFittingResult.rSquared.toFixed(6)}</span>\n            </div>\n            <div className=\"col-span-2\">\n              <span className=\"text-gray-600\">拟合公式：</span>\n              <span className=\"font-medium font-mono\">{bestFittingResult.formula}</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 预测结果数据块 */}\n      {predictionResults.length > 0 && (\n        <div className=\"mb-6\">\n          <div className=\"flex justify-between items-center mb-3\">\n            <h4 className=\"font-medium\">预测结果</h4>\n            <button\n              onClick={exportToExcel}\n              className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm\"\n            >\n              导出到Excel\n            </button>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n            {predictionResults.map((result, index) => (\n              <div key={index} className=\"bg-gradient-to-br from-blue-50 to-indigo-100 p-4 rounded-lg border border-blue-200 hover:shadow-md transition-shadow\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm font-medium text-gray-600\">位置: {result.position}</span>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-gray-600\">亮度值:</span>\n                    <span className=\"text-sm font-medium\">{result.brightnessValue.toFixed(2)}</span>\n                  </div>\n                  \n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-gray-600\">目标值:</span>\n                    <span className=\"text-sm font-medium\">{result.targetValue.toFixed(4)}</span>\n                  </div>\n                  \n                  {/* 显示所有拟合方法的预测结果 */}\n                  <div className=\"mt-3 pt-2 border-t border-blue-200\">\n                    <div className=\"text-xs font-medium text-gray-700 mb-2\">各拟合方法预测值:</div>\n                    <div className=\"space-y-2\">\n                      {Object.entries(result.predictions).map(([method, prediction]) => (\n                        <div key={method} className=\"bg-white rounded p-2 border\">\n                          <div className=\"flex justify-between items-center mb-1\">\n                            <span className=\"text-xs font-medium text-gray-600\">\n                              {getTypeLabel(method)}\n                            </span>\n                            <span className=\"text-xs text-blue-600 font-medium\">\n                              {prediction.predictedGrayScale.toFixed(4)}\n                            </span>\n                          </div>\n                          <div className=\"text-xs text-gray-500 mb-1\">\n                            置信度: {(prediction.confidence * 100).toFixed(1)}%\n                          </div>\n                          <div className=\"text-xs text-gray-400 break-all font-mono\">\n                            {prediction.formula}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          {/* 统计信息 */}\n          <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n            <h5 className=\"font-medium mb-2\">预测统计</h5>\n            <div className=\"grid grid-cols-3 gap-4 text-sm\">\n              <div>\n                <span className=\"text-gray-600\">预测数据点：</span>\n                <span className=\"font-medium\">{predictionResults.length}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">拟合方法数：</span>\n                <span className=\"font-medium\">\n                  {predictionResults.length > 0 ? Object.keys(predictionResults[0].predictions).length : 0}\n                </span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">最佳拟合：</span>\n                <span className=\"font-medium\">\n                  {bestFittingResult ? getTypeLabel(bestFittingResult.type) : 'N/A'}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 使用说明 */}\n      {!targetData && (\n        <div className=\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n          <h4 className=\"font-medium mb-2 text-yellow-800\">使用说明</h4>\n          <ul className=\"text-sm text-yellow-700 space-y-1\">\n            <li>1. 首先确保已上传并处理了原始数据文件</li>\n            <li>2. 上传包含Sheet3工作表的Excel文件，目标数据应位于B列</li>\n            <li>3. 系统将自动选择最佳拟合模型进行预测</li>\n            <li>4. 生成预测结果后可导出到Excel文件</li>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TargetDataPrediction;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}