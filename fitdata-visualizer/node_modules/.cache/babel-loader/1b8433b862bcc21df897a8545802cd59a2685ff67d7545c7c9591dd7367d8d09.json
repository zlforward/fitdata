{"ast":null,"code":"import _objectSpread from\"D:/source/fitdata/fitdata-visualizer/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useMemo}from'react';import{performAllFittings}from'../utils/curveFitting';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PixelHeatmap=_ref=>{let{brightnessBlocks,grayScaleValues,dataType,onPositionSelect}=_ref;const[selectedPosition,setSelectedPosition]=useState(null);const[showFittingModal,setShowFittingModal]=useState(false);const[hoveredPosition,setHoveredPosition]=useState(null);const[predictionInput,setPredictionInput]=useState('');const[predictionResults,setPredictionResults]=useState(null);// 计算热力图数据\nconst heatmapData=useMemo(()=>{if(brightnessBlocks.length===0)return[];const rows=20;const cols=32;const data=[];for(let row=0;row<rows;row++){const rowData=[];for(let col=0;col<cols;col++){// 计算该位置所有数据块的平均值\nlet sum=0;let count=0;brightnessBlocks.forEach(block=>{if(row<block.data.length&&col<block.data[row].length){var _block$normalizedData,_block$normalizedData2,_block$normalizedData3;const value=dataType==='original'?block.data[row][col]:(_block$normalizedData=(_block$normalizedData2=block.normalizedData)===null||_block$normalizedData2===void 0?void 0:(_block$normalizedData3=_block$normalizedData2[row])===null||_block$normalizedData3===void 0?void 0:_block$normalizedData3[col])!==null&&_block$normalizedData!==void 0?_block$normalizedData:block.data[row][col]/(block.centerPixelValue||1);sum+=value;count++;}});rowData.push(count>0?sum/count:0);}data.push(rowData);}return data;},[brightnessBlocks,dataType]);// 计算选中位置的拟合结果\nconst positionFittingResult=useMemo(()=>{if(!selectedPosition||brightnessBlocks.length===0||grayScaleValues.length===0){return null;}const{row,col}=selectedPosition;const positionValues=[];brightnessBlocks.forEach(block=>{if(row<block.data.length&&col<block.data[row].length){var _block$normalizedData4,_block$normalizedData5,_block$normalizedData6;const value=dataType==='original'?block.data[row][col]:(_block$normalizedData4=(_block$normalizedData5=block.normalizedData)===null||_block$normalizedData5===void 0?void 0:(_block$normalizedData6=_block$normalizedData5[row])===null||_block$normalizedData6===void 0?void 0:_block$normalizedData6[col])!==null&&_block$normalizedData4!==void 0?_block$normalizedData4:block.data[row][col]/(block.centerPixelValue||1);positionValues.push(value);}});if(positionValues.length!==grayScaleValues.length){return null;}const data={x:positionValues,y:grayScaleValues};const fittingResults=performAllFittings(data);return{row,col,fittingResults,xValues:positionValues};},[selectedPosition,brightnessBlocks,grayScaleValues,dataType]);// 计算热力图颜色范围\nconst{minValue,maxValue}=useMemo(()=>{const flatData=heatmapData.flat();return{minValue:Math.min(...flatData),maxValue:Math.max(...flatData)};},[heatmapData]);// 获取颜色值\nconst getColor=value=>{if(maxValue===minValue)return'rgb(255, 255, 255)';const normalized=(value-minValue)/(maxValue-minValue);const intensity=Math.floor(normalized*255);// 使用蓝色到红色的渐变\nconst red=intensity;const blue=255-intensity;const green=Math.floor(128*(1-Math.abs(normalized-0.5)*2));return\"rgb(\".concat(red,\", \").concat(green,\", \").concat(blue,\")\");};// 处理像素点击\nconst handlePixelDoubleClick=(row,col)=>{setSelectedPosition({row,col});setShowFittingModal(true);onPositionSelect===null||onPositionSelect===void 0?void 0:onPositionSelect(row,col);};// 处理鼠标悬停\nconst handlePixelMouseEnter=(row,col,event)=>{const rect=event.currentTarget.getBoundingClientRect();setHoveredPosition({row,col,x:rect.right+10,y:rect.top});};const handlePixelMouseLeave=()=>{setHoveredPosition(null);};// 计算悬停位置的拟合数据\nconst hoveredFittingData=useMemo(()=>{if(!hoveredPosition||brightnessBlocks.length===0||grayScaleValues.length===0){return null;}const{row,col}=hoveredPosition;const positionValues=[];brightnessBlocks.forEach(block=>{if(row<block.data.length&&col<block.data[row].length){var _block$normalizedData7,_block$normalizedData8,_block$normalizedData9;const value=dataType==='original'?block.data[row][col]:(_block$normalizedData7=(_block$normalizedData8=block.normalizedData)===null||_block$normalizedData8===void 0?void 0:(_block$normalizedData9=_block$normalizedData8[row])===null||_block$normalizedData9===void 0?void 0:_block$normalizedData9[col])!==null&&_block$normalizedData7!==void 0?_block$normalizedData7:block.data[row][col]/(block.centerPixelValue||1);positionValues.push(value);}});if(positionValues.length!==grayScaleValues.length){return null;}const data={x:positionValues,y:grayScaleValues};const fittingResults=performAllFittings(data);const bestFit=fittingResults.reduce((best,current)=>current.rSquared>best.rSquared?current:best);return{bestFit,dataPoints:positionValues.length,avgValue:positionValues.reduce((sum,val)=>sum+val,0)/positionValues.length};},[hoveredPosition,brightnessBlocks,grayScaleValues,dataType]);// 预测功能\nconst handlePrediction=inputValue=>{if(!positionFittingResult||!inputValue.trim())return null;const x=parseFloat(inputValue);if(isNaN(x))return null;return positionFittingResult.fittingResults.map(result=>{const[a,b,c,d]=result.coefficients;let y=0;switch(result.type){case'logarithmic':if(x>0){y=a*Math.log(x)+b;}else{return _objectSpread(_objectSpread({},result),{},{prediction:undefined,error:'输入值必须大于0'});}break;case'exponential':y=a*Math.exp(b*x);break;case'polynomial':y=a*Math.pow(x,3)+b*Math.pow(x,2)+c*x+d;break;case'power':if(x>0){y=a*Math.pow(x,b);}else{return _objectSpread(_objectSpread({},result),{},{prediction:undefined,error:'输入值必须大于0'});}break;}return _objectSpread(_objectSpread({},result),{},{prediction:y,error:undefined});});};// 处理预测输入变化\nconst handlePredictionInputChange=value=>{setPredictionInput(value);if(value&&!isNaN(Number(value))&&positionFittingResult){const results=handlePrediction(value);setPredictionResults(results);}else{setPredictionResults(null);}};// 获取拟合类型标签\nconst getTypeLabel=type=>{const labels={'logarithmic':'对数拟合','exponential':'指数拟合','polynomial':'多项式拟合','power':'幂函数拟合','bivariate':'二次多项式拟合'};return labels[type]||type;};// 获取拟合类型颜色\nconst getColorForFittingType=type=>{const colors={'logarithmic':'#ef4444','exponential':'#3b82f6','polynomial':'#10b981','power':'#f59e0b','bivariate':'#8b5cf6'};return colors[type]||'#6b7280';};// 生成SVG路径\nconst generateSVGPath=(result,xValues,width,height)=>{if(result.predictedValues.length===0||xValues.length===0)return'';const xMin=Math.min(...xValues);const xMax=Math.max(...xValues);const yMin=Math.min(...result.predictedValues,...grayScaleValues);const yMax=Math.max(...result.predictedValues,...grayScaleValues);const xRange=xMax-xMin||1;const yRange=yMax-yMin||1;const numPoints=100;const points=[];for(let i=0;i<=numPoints;i++){const t=i/numPoints;const x=xMin+t*xRange;let y=0;const[a,b,c,d]=result.coefficients;switch(result.type){case'logarithmic':if(x>0){y=a*Math.log(x)+b;}else{continue;}break;case'exponential':y=a*Math.exp(b*x);break;case'polynomial':y=a*Math.pow(x,3)+b*Math.pow(x,2)+c*x+d;break;case'power':if(x>0){y=a*Math.pow(x,b);}else{continue;}break;}const svgX=(x-xMin)/xRange*(width-40)+20;const svgY=height-20-(y-yMin)/yRange*(height-40);if(svgX>=20&&svgX<=width-20&&svgY>=20&&svgY<=height-20){points.push(\"\".concat(svgX,\",\").concat(svgY));}}if(points.length===0)return'';return\"M \".concat(points[0],\" L \").concat(points.slice(1).join(' L '));};// 生成散点图\nconst generateScatterPoints=(xValues,width,height)=>{if(xValues.length===0)return[];const xMin=Math.min(...xValues);const xMax=Math.max(...xValues);const yMin=Math.min(...grayScaleValues);const yMax=Math.max(...grayScaleValues);const xRange=xMax-xMin||1;const yRange=yMax-yMin||1;return xValues.map((x,i)=>{const y=grayScaleValues[i];const svgX=(x-xMin)/xRange*(width-40)+20;const svgY=height-20-(y-yMin)/yRange*(height-40);return{x:svgX,y:svgY,originalX:x,originalY:y};});};if(heatmapData.length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-lg p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-4\",children:\"\\u50CF\\u7D20\\u70ED\\u529B\\u56FE\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"\\u6682\\u65E0\\u6570\\u636E\\u663E\\u793A\\u70ED\\u529B\\u56FE\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-lg p-6\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"text-lg font-semibold mb-4\",children:[\"\\u50CF\\u7D20\\u70ED\\u529B\\u56FE (\",dataType==='original'?'原始数据':'归一化数据',\")\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-2\",children:\"\\u53CC\\u51FB\\u4EFB\\u610F\\u50CF\\u7D20\\u4F4D\\u7F6E\\u67E5\\u770B\\u8BE5\\u4F4D\\u7F6E\\u7684\\u62DF\\u5408\\u7ED3\\u679C\"}),/*#__PURE__*/_jsx(\"div\",{className:\"border border-gray-300 rounded-lg overflow-hidden inline-block\",children:/*#__PURE__*/_jsxs(\"svg\",{width:\"700\",height:\"470\",className:\"bg-white\",children:[Array.from({length:32},(_,colIndex)=>{const isEven=colIndex%2===0;return/*#__PURE__*/_jsx(\"text\",{x:30+colIndex*20+10,y:isEven?15:25,textAnchor:\"middle\",className:\"text-xs fill-gray-600 font-mono\",children:colIndex},\"col-label-\".concat(colIndex));}),Array.from({length:20},(_,rowIndex)=>{const isEven=rowIndex%2===0;return/*#__PURE__*/_jsx(\"text\",{x:isEven?15:5,y:30+rowIndex*20+14,textAnchor:\"middle\",className:\"text-xs fill-gray-600 font-mono\",children:rowIndex},\"row-label-\".concat(rowIndex));}),heatmapData.map((row,rowIndex)=>row.map((value,colIndex)=>/*#__PURE__*/_jsx(\"rect\",{x:30+colIndex*20,y:30+rowIndex*20,width:\"20\",height:\"20\",fill:getColor(value),stroke:\"#e5e7eb\",strokeWidth:\"0.5\",className:\"cursor-pointer hover:stroke-2 hover:stroke-blue-500\",onDoubleClick:()=>handlePixelDoubleClick(rowIndex,colIndex),onMouseEnter:e=>handlePixelMouseEnter(rowIndex,colIndex,e),onMouseLeave:handlePixelMouseLeave,children:/*#__PURE__*/_jsx(\"title\",{children:\"\\u4F4D\\u7F6E(\".concat(rowIndex,\",\").concat(colIndex,\"): \").concat(value.toFixed(4))})},\"\".concat(rowIndex,\"-\").concat(colIndex)))),/*#__PURE__*/_jsx(\"text\",{x:\"350\",y:\"460\",textAnchor:\"middle\",className:\"text-sm fill-gray-700 font-medium\",children:\"\\u5217\\u7D22\\u5F15 (0-31)\"}),/*#__PURE__*/_jsx(\"text\",{x:\"0\",y:\"230\",textAnchor:\"middle\",className:\"text-sm fill-gray-700 font-medium\",transform:\"rotate(-90 0 230)\",children:\"\\u884C\\u7D22\\u5F15 (0-19)\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 flex items-center gap-4\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-sm text-gray-600\",children:\"\\u6570\\u503C\\u8303\\u56F4:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4\",style:{backgroundColor:getColor(minValue)}}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs\",children:minValue.toFixed(2)}),/*#__PURE__*/_jsx(\"div\",{className:\"w-20 h-4 bg-gradient-to-r\",style:{backgroundImage:\"linear-gradient(to right, \".concat(getColor(minValue),\", \").concat(getColor(maxValue),\")\")}}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs\",children:maxValue.toFixed(2)}),/*#__PURE__*/_jsx(\"div\",{className:\"w-4 h-4\",style:{backgroundColor:getColor(maxValue)}})]})]})]}),hoveredPosition&&hoveredFittingData&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed bg-white border border-gray-300 rounded-lg shadow-lg p-3 z-40 pointer-events-none\",style:{left:hoveredPosition.x,top:hoveredPosition.y,transform:'translateY(-50%)'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"font-semibold mb-1\",children:[\"\\u4F4D\\u7F6E(\",hoveredPosition.row,\",\",hoveredPosition.col,\")\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-600 space-y-1\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"\\u6570\\u636E\\u70B9: \",hoveredFittingData.dataPoints,\"\\u4E2A\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"\\u5E73\\u5747\\u503C: \",hoveredFittingData.avgValue.toFixed(4)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"border-t pt-1 mt-1\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"font-medium\",children:[\"\\u6700\\u4F73\\u62DF\\u5408: \",getTypeLabel(hoveredFittingData.bestFit.type)]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"R\\xB2: \",hoveredFittingData.bestFit.rSquared.toFixed(4)]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xs font-mono\",children:hoveredFittingData.bestFit.formula})]})]})]})}),showFittingModal&&positionFittingResult&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-xl max-w-6xl max-h-[90vh] overflow-y-auto p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"text-lg font-semibold\",children:[\"\\u4F4D\\u7F6E(\",positionFittingResult.row,\",\",positionFittingResult.col,\")\\u7684\\u62DF\\u5408\\u7ED3\\u679C\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowFittingModal(false),className:\"text-gray-500 hover:text-gray-700 text-xl font-bold\",children:\"\\xD7\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium mb-3\",children:\"\\u62DF\\u5408\\u7ED3\\u679C\\u5BF9\\u6BD4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"w-full border-collapse border border-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"bg-gray-50\",children:[/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u62DF\\u5408\\u7C7B\\u578B\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u516C\\u5F0F\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"R\\xB2\\u503C\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"RMSE\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"MAE\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u6700\\u5927\\u8BEF\\u5DEE\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u62DF\\u5408\\u8D28\\u91CF\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:positionFittingResult.fittingResults.map((result,index)=>{var _result$rmse,_result$mae,_result$maxError;const quality=result.rSquared>0.9?'优秀':result.rSquared>0.7?'良好':result.rSquared>0.5?'一般':'较差';const qualityColor=result.rSquared>0.9?'text-green-600':result.rSquared>0.7?'text-blue-600':result.rSquared>0.5?'text-yellow-600':'text-red-600';return/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full\",style:{backgroundColor:getColorForFittingType(result.type)}}),getTypeLabel(result.type)]})}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-mono text-xs\",children:result.formula}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-medium\",children:result.rSquared.toFixed(4)}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-medium\",children:((_result$rmse=result.rmse)===null||_result$rmse===void 0?void 0:_result$rmse.toFixed(4))||'N/A'}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-medium\",children:((_result$mae=result.mae)===null||_result$mae===void 0?void 0:_result$mae.toFixed(4))||'N/A'}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-medium\",children:((_result$maxError=result.maxError)===null||_result$maxError===void 0?void 0:_result$maxError.toFixed(4))||'N/A'}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-medium \".concat(qualityColor),children:quality})]},index);})})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium mb-3\",children:\"\\u9884\\u6D4B\\u529F\\u80FD\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-4 mb-4\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"text-sm font-medium\",children:[\"\\u8F93\\u5165\",dataType==='original'?'原始':'归一化',\"\\u6570\\u636E\\u503C:\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:predictionInput,onChange:e=>handlePredictionInputChange(e.target.value),placeholder:\"\\u8BF7\\u8F93\\u5165\\u6570\\u503C\\u8FDB\\u884C\\u9884\\u6D4B\",className:\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"})]}),predictionResults&&/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"w-full border-collapse border border-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"bg-gray-100\",children:[/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u62DF\\u5408\\u7C7B\\u578B\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u9884\\u6D4B\\u7ED3\\u679C\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"R\\xB2\\u503C\"}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u72B6\\u6001\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:predictionResults.map((result,index)=>{var _result$prediction;return/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-50\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full\",style:{backgroundColor:getColorForFittingType(result.type)}}),getTypeLabel(result.type)]})}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-medium\",children:result.error?/*#__PURE__*/_jsx(\"span\",{className:\"text-red-600\",children:result.error}):/*#__PURE__*/_jsx(\"span\",{className:\"text-green-600\",children:((_result$prediction=result.prediction)===null||_result$prediction===void 0?void 0:_result$prediction.toFixed(4))||'N/A'})}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2\",children:result.rSquared.toFixed(4)}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2\",children:result.error?/*#__PURE__*/_jsx(\"span\",{className:\"text-red-600\",children:\"\\u9519\\u8BEF\"}):/*#__PURE__*/_jsx(\"span\",{className:\"text-green-600\",children:\"\\u6210\\u529F\"})})]},index);})})]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium mb-3\",children:\"\\u62DF\\u5408\\u8F93\\u5165\\u8F93\\u51FA\\u6570\\u636E\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 p-4 rounded-lg\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto max-h-60\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"w-full border-collapse border border-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"sticky top-0 bg-white\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u5E8F\\u53F7\"}),/*#__PURE__*/_jsxs(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:[\"\\u8F93\\u5165(\",dataType==='original'?'原始':'归一化',\"\\u6570\\u636E\\u503C)\"]}),/*#__PURE__*/_jsx(\"th\",{className:\"border border-gray-200 px-3 py-2 text-left\",children:\"\\u8F93\\u51FA(\\u7070\\u9636\\u503C)\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:positionFittingResult.xValues.map((xValue,index)=>{var _grayScaleValues$inde;return/*#__PURE__*/_jsxs(\"tr\",{className:\"hover:bg-gray-100\",children:[/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 text-center\",children:index+1}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-mono\",children:xValue.toFixed(4)}),/*#__PURE__*/_jsx(\"td\",{className:\"border border-gray-200 px-3 py-2 font-mono\",children:((_grayScaleValues$inde=grayScaleValues[index])===null||_grayScaleValues$inde===void 0?void 0:_grayScaleValues$inde.toFixed(4))||'N/A'})]},index);})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-3 text-sm text-gray-600\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u603B\\u6570\\u636E\\u70B9: \",positionFittingResult.xValues.length]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u8F93\\u5165\\u8303\\u56F4: \",Math.min(...positionFittingResult.xValues).toFixed(4),\" ~ \",Math.max(...positionFittingResult.xValues).toFixed(4)]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u8F93\\u51FA\\u8303\\u56F4: \",Math.min(...grayScaleValues).toFixed(4),\" ~ \",Math.max(...grayScaleValues).toFixed(4)]})]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium mb-3\",children:\"\\u62DF\\u5408\\u66F2\\u7EBF\\u56FE\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-50 p-4 rounded-lg\",children:/*#__PURE__*/_jsxs(\"svg\",{width:\"100%\",height:\"400\",viewBox:\"0 0 800 400\",className:\"border border-gray-200 bg-white\",children:[/*#__PURE__*/_jsx(\"defs\",{children:/*#__PURE__*/_jsx(\"pattern\",{id:\"grid\",width:\"40\",height:\"40\",patternUnits:\"userSpaceOnUse\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M 40 0 L 0 0 0 40\",fill:\"none\",stroke:\"#f3f4f6\",strokeWidth:\"1\"})})}),/*#__PURE__*/_jsx(\"rect\",{width:\"100%\",height:\"100%\",fill:\"url(#grid)\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"20\",y1:\"20\",x2:\"20\",y2:\"380\",stroke:\"#374151\",strokeWidth:\"2\"}),/*#__PURE__*/_jsx(\"line\",{x1:\"20\",y1:\"380\",x2:\"780\",y2:\"380\",stroke:\"#374151\",strokeWidth:\"2\"}),(()=>{const xMin=Math.min(...positionFittingResult.xValues);const xMax=Math.max(...positionFittingResult.xValues);const xRange=xMax-xMin||1;return Array.from({length:9},(_,i)=>{const value=xMin+xRange/8*i;const x=20+i/8*760;return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"line\",{x1:x,y1:\"380\",x2:x,y2:\"385\",stroke:\"#374151\",strokeWidth:\"1\"}),/*#__PURE__*/_jsx(\"text\",{x:x,y:\"398\",textAnchor:\"middle\",className:\"text-xs fill-gray-600\",children:value.toFixed(2)})]},\"x-tick-\".concat(i));});})(),(()=>{const yMin=Math.min(...grayScaleValues);const yMax=Math.max(...grayScaleValues);const yRange=yMax-yMin||1;return Array.from({length:6},(_,i)=>{const value=yMin+yRange/5*i;const y=380-i/5*360;return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"line\",{x1:\"15\",y1:y,x2:\"20\",y2:y,stroke:\"#374151\",strokeWidth:\"1\"}),/*#__PURE__*/_jsx(\"text\",{x:\"12\",y:y+3,textAnchor:\"end\",className:\"text-xs fill-gray-600\",children:value.toFixed(1)})]},\"y-tick-\".concat(i));});})(),generateScatterPoints(positionFittingResult.xValues,800,400).map((point,i)=>/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"circle\",{cx:point.x,cy:point.y,r:\"4\",fill:\"#1f2937\",stroke:\"white\",strokeWidth:\"2\"}),/*#__PURE__*/_jsx(\"title\",{children:\"\".concat(dataType==='original'?'原始':'归一化',\"\\u6570\\u636E: \").concat(point.originalX.toFixed(2),\", \\u7070\\u9636\\u503C: \").concat(point.originalY.toFixed(2))})]},\"point-\".concat(i))),positionFittingResult.fittingResults.map((result,index)=>{const path=generateSVGPath(result,positionFittingResult.xValues,800,400);if(!path)return null;return/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"path\",{d:path,fill:\"none\",stroke:getColorForFittingType(result.type),strokeWidth:\"2\",strokeDasharray:result.type==='polynomial'?'5,5':'none'}),/*#__PURE__*/_jsx(\"text\",{x:100+index*150,y:50+index*20,className:\"text-xs\",fill:getColorForFittingType(result.type),fontFamily:\"monospace\",children:result.formula})]},\"curve-\".concat(index));}),/*#__PURE__*/_jsx(\"text\",{x:\"400\",y:\"395\",textAnchor:\"middle\",className:\"text-sm fill-gray-600\",children:dataType==='original'?'原始数据值':'归一化数据值'}),/*#__PURE__*/_jsx(\"text\",{x:\"10\",y:\"200\",textAnchor:\"middle\",className:\"text-sm fill-gray-600\",transform:\"rotate(-90 10 200)\",children:\"\\u7070\\u9636\\u503C\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full bg-gray-800\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u539F\\u59CB\\u6570\\u636E\\u70B9\"})]}),positionFittingResult.fittingResults.map((result,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-1\",style:{backgroundColor:getColorForFittingType(result.type),borderStyle:result.type==='polynomial'?'dashed':'solid'}}),/*#__PURE__*/_jsx(\"span\",{children:getTypeLabel(result.type)})]},index))]})]})})]});};export default PixelHeatmap;","map":{"version":3,"names":["React","useState","useMemo","performAllFittings","jsx","_jsx","jsxs","_jsxs","PixelHeatmap","_ref","brightnessBlocks","grayScaleValues","dataType","onPositionSelect","selectedPosition","setSelectedPosition","showFittingModal","setShowFittingModal","hoveredPosition","setHoveredPosition","predictionInput","setPredictionInput","predictionResults","setPredictionResults","heatmapData","length","rows","cols","data","row","rowData","col","sum","count","forEach","block","_block$normalizedData","_block$normalizedData2","_block$normalizedData3","value","normalizedData","centerPixelValue","push","positionFittingResult","positionValues","_block$normalizedData4","_block$normalizedData5","_block$normalizedData6","x","y","fittingResults","xValues","minValue","maxValue","flatData","flat","Math","min","max","getColor","normalized","intensity","floor","red","blue","green","abs","concat","handlePixelDoubleClick","handlePixelMouseEnter","event","rect","currentTarget","getBoundingClientRect","right","top","handlePixelMouseLeave","hoveredFittingData","_block$normalizedData7","_block$normalizedData8","_block$normalizedData9","bestFit","reduce","best","current","rSquared","dataPoints","avgValue","val","handlePrediction","inputValue","trim","parseFloat","isNaN","map","result","a","b","c","d","coefficients","type","log","_objectSpread","prediction","undefined","error","exp","pow","handlePredictionInputChange","Number","results","getTypeLabel","labels","getColorForFittingType","colors","generateSVGPath","width","height","predictedValues","xMin","xMax","yMin","yMax","xRange","yRange","numPoints","points","i","t","svgX","svgY","slice","join","generateScatterPoints","originalX","originalY","className","children","Array","from","_","colIndex","isEven","textAnchor","rowIndex","fill","stroke","strokeWidth","onDoubleClick","onMouseEnter","e","onMouseLeave","toFixed","transform","style","backgroundColor","backgroundImage","left","formula","onClick","index","_result$rmse","_result$mae","_result$maxError","quality","qualityColor","rmse","mae","maxError","onChange","target","placeholder","_result$prediction","xValue","_grayScaleValues$inde","viewBox","id","patternUnits","x1","y1","x2","y2","point","cx","cy","r","path","strokeDasharray","fontFamily","borderStyle"],"sources":["D:/source/fitdata/fitdata-visualizer/src/components/PixelHeatmap.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { BrightnessBlock } from '../utils/dataParser';\nimport { FittingResult, FittingData, performAllFittings } from '../utils/curveFitting';\n\ninterface PixelHeatmapProps {\n  brightnessBlocks: BrightnessBlock[];\n  grayScaleValues: number[];\n  dataType: 'original' | 'normalized';\n  onPositionSelect?: (row: number, col: number) => void;\n}\n\ninterface PositionFittingResult {\n  row: number;\n  col: number;\n  fittingResults: FittingResult[];\n  xValues: number[];\n}\n\nconst PixelHeatmap: React.FC<PixelHeatmapProps> = ({\n  brightnessBlocks,\n  grayScaleValues,\n  dataType,\n  onPositionSelect\n}) => {\n  const [selectedPosition, setSelectedPosition] = useState<{row: number, col: number} | null>(null);\n  const [showFittingModal, setShowFittingModal] = useState(false);\n  const [hoveredPosition, setHoveredPosition] = useState<{row: number, col: number, x: number, y: number} | null>(null);\n  const [predictionInput, setPredictionInput] = useState<string>('');\n  const [predictionResults, setPredictionResults] = useState<Array<{\n    type: string;\n    prediction?: number;\n    error?: string;\n    rSquared: number;\n  }> | null>(null);\n\n  // 计算热力图数据\n  const heatmapData = useMemo(() => {\n    if (brightnessBlocks.length === 0) return [];\n    \n    const rows = 20;\n    const cols = 32;\n    const data: number[][] = [];\n    \n    for (let row = 0; row < rows; row++) {\n      const rowData: number[] = [];\n      for (let col = 0; col < cols; col++) {\n        // 计算该位置所有数据块的平均值\n        let sum = 0;\n        let count = 0;\n        \n        brightnessBlocks.forEach(block => {\n          if (row < block.data.length && col < block.data[row].length) {\n            const value = dataType === 'original' \n              ? block.data[row][col]\n              : (block.normalizedData?.[row]?.[col] ?? block.data[row][col] / (block.centerPixelValue || 1));\n            sum += value;\n            count++;\n          }\n        });\n        \n        rowData.push(count > 0 ? sum / count : 0);\n      }\n      data.push(rowData);\n    }\n    \n    return data;\n  }, [brightnessBlocks, dataType]);\n\n  // 计算选中位置的拟合结果\n  const positionFittingResult = useMemo((): PositionFittingResult | null => {\n    if (!selectedPosition || brightnessBlocks.length === 0 || grayScaleValues.length === 0) {\n      return null;\n    }\n    \n    const { row, col } = selectedPosition;\n    const positionValues: number[] = [];\n    \n    brightnessBlocks.forEach(block => {\n      if (row < block.data.length && col < block.data[row].length) {\n        const value = dataType === 'original' \n          ? block.data[row][col] \n          : (block.normalizedData?.[row]?.[col] ?? block.data[row][col] / (block.centerPixelValue || 1));\n        positionValues.push(value);\n      }\n    });\n    \n    if (positionValues.length !== grayScaleValues.length) {\n      return null;\n    }\n    \n    const data: FittingData = {\n      x: positionValues,\n      y: grayScaleValues\n    };\n    \n    const fittingResults = performAllFittings(data);\n    \n    return {\n      row,\n      col,\n      fittingResults,\n      xValues: positionValues\n    };\n  }, [selectedPosition, brightnessBlocks, grayScaleValues, dataType]);\n\n  // 计算热力图颜色范围\n  const { minValue, maxValue } = useMemo(() => {\n    const flatData = heatmapData.flat();\n    return {\n      minValue: Math.min(...flatData),\n      maxValue: Math.max(...flatData)\n    };\n  }, [heatmapData]);\n\n  // 获取颜色值\n  const getColor = (value: number) => {\n    if (maxValue === minValue) return 'rgb(255, 255, 255)';\n    \n    const normalized = (value - minValue) / (maxValue - minValue);\n    const intensity = Math.floor(normalized * 255);\n    \n    // 使用蓝色到红色的渐变\n    const red = intensity;\n    const blue = 255 - intensity;\n    const green = Math.floor(128 * (1 - Math.abs(normalized - 0.5) * 2));\n    \n    return `rgb(${red}, ${green}, ${blue})`;\n  };\n\n  // 处理像素点击\n  const handlePixelDoubleClick = (row: number, col: number) => {\n    setSelectedPosition({ row, col });\n    setShowFittingModal(true);\n    onPositionSelect?.(row, col);\n  };\n\n  // 处理鼠标悬停\n  const handlePixelMouseEnter = (row: number, col: number, event: React.MouseEvent) => {\n    const rect = event.currentTarget.getBoundingClientRect();\n    setHoveredPosition({\n      row,\n      col,\n      x: rect.right + 10,\n      y: rect.top\n    });\n  };\n\n  const handlePixelMouseLeave = () => {\n    setHoveredPosition(null);\n  };\n\n  // 计算悬停位置的拟合数据\n  const hoveredFittingData = useMemo(() => {\n    if (!hoveredPosition || brightnessBlocks.length === 0 || grayScaleValues.length === 0) {\n      return null;\n    }\n    \n    const { row, col } = hoveredPosition;\n    const positionValues: number[] = [];\n    \n    brightnessBlocks.forEach(block => {\n      if (row < block.data.length && col < block.data[row].length) {\n        const value = dataType === 'original' \n          ? block.data[row][col] \n          : (block.normalizedData?.[row]?.[col] ?? block.data[row][col] / (block.centerPixelValue || 1));\n        positionValues.push(value);\n      }\n    });\n    \n    if (positionValues.length !== grayScaleValues.length) {\n      return null;\n    }\n    \n    const data: FittingData = {\n      x: positionValues,\n      y: grayScaleValues\n    };\n    \n    const fittingResults = performAllFittings(data);\n    const bestFit = fittingResults.reduce((best, current) => \n      current.rSquared > best.rSquared ? current : best\n    );\n    \n    return {\n      bestFit,\n      dataPoints: positionValues.length,\n      avgValue: positionValues.reduce((sum, val) => sum + val, 0) / positionValues.length\n    };\n  }, [hoveredPosition, brightnessBlocks, grayScaleValues, dataType]);\n\n  // 预测功能\n  const handlePrediction = (inputValue: string) => {\n    if (!positionFittingResult || !inputValue.trim()) return null;\n    \n    const x = parseFloat(inputValue);\n    if (isNaN(x)) return null;\n    \n    return positionFittingResult.fittingResults.map(result => {\n      const [a, b, c, d] = result.coefficients;\n      let y = 0;\n      \n      switch (result.type) {\n        case 'logarithmic':\n          if (x > 0) {\n            y = a * Math.log(x) + b;\n          } else {\n            return { ...result, prediction: undefined, error: '输入值必须大于0' };\n          }\n          break;\n        case 'exponential':\n          y = a * Math.exp(b * x);\n          break;\n        case 'polynomial':\n          y = a * Math.pow(x, 3) + b * Math.pow(x, 2) + c * x + d;\n          break;\n        case 'power':\n          if (x > 0) {\n            y = a * Math.pow(x, b);\n          } else {\n            return { ...result, prediction: undefined, error: '输入值必须大于0' };\n          }\n          break;\n      }\n      \n      return { ...result, prediction: y, error: undefined };\n    });\n  };\n\n  // 处理预测输入变化\n   const handlePredictionInputChange = (value: string) => {\n     setPredictionInput(value);\n     if (value && !isNaN(Number(value)) && positionFittingResult) {\n       const results = handlePrediction(value);\n       setPredictionResults(results);\n     } else {\n       setPredictionResults(null);\n     }\n   };\n\n   // 获取拟合类型标签\n  const getTypeLabel = (type: string) => {\n    const labels: { [key: string]: string } = {\n      'logarithmic': '对数拟合',\n      'exponential': '指数拟合',\n      'polynomial': '多项式拟合',\n      'power': '幂函数拟合',\n      'bivariate': '二次多项式拟合'\n    };\n    return labels[type] || type;\n  };\n\n  // 获取拟合类型颜色\n  const getColorForFittingType = (type: string) => {\n    const colors: { [key: string]: string } = {\n      'logarithmic': '#ef4444',\n      'exponential': '#3b82f6',\n      'polynomial': '#10b981',\n      'power': '#f59e0b',\n      'bivariate': '#8b5cf6'\n    };\n    return colors[type] || '#6b7280';\n  };\n\n  // 生成SVG路径\n  const generateSVGPath = (result: FittingResult, xValues: number[], width: number, height: number) => {\n    if (result.predictedValues.length === 0 || xValues.length === 0) return '';\n    \n    const xMin = Math.min(...xValues);\n    const xMax = Math.max(...xValues);\n    const yMin = Math.min(...result.predictedValues, ...grayScaleValues);\n    const yMax = Math.max(...result.predictedValues, ...grayScaleValues);\n    \n    const xRange = xMax - xMin || 1;\n    const yRange = yMax - yMin || 1;\n    \n    const numPoints = 100;\n    const points: string[] = [];\n    \n    for (let i = 0; i <= numPoints; i++) {\n      const t = i / numPoints;\n      const x = xMin + t * xRange;\n      let y = 0;\n      \n      const [a, b, c, d] = result.coefficients;\n      switch (result.type) {\n        case 'logarithmic':\n          if (x > 0) {\n            y = a * Math.log(x) + b;\n          } else {\n            continue;\n          }\n          break;\n        case 'exponential':\n          y = a * Math.exp(b * x);\n          break;\n        case 'polynomial':\n          y = a * Math.pow(x, 3) + b * Math.pow(x, 2) + c * x + d;\n          break;\n        case 'power':\n          if (x > 0) {\n            y = a * Math.pow(x, b);\n          } else {\n            continue;\n          }\n          break;\n      }\n      \n      const svgX = ((x - xMin) / xRange) * (width - 40) + 20;\n      const svgY = height - 20 - ((y - yMin) / yRange) * (height - 40);\n      \n      if (svgX >= 20 && svgX <= width - 20 && svgY >= 20 && svgY <= height - 20) {\n        points.push(`${svgX},${svgY}`);\n      }\n    }\n    \n    if (points.length === 0) return '';\n    return `M ${points[0]} L ${points.slice(1).join(' L ')}`;\n  };\n\n  // 生成散点图\n  const generateScatterPoints = (xValues: number[], width: number, height: number) => {\n    if (xValues.length === 0) return [];\n    \n    const xMin = Math.min(...xValues);\n    const xMax = Math.max(...xValues);\n    const yMin = Math.min(...grayScaleValues);\n    const yMax = Math.max(...grayScaleValues);\n    \n    const xRange = xMax - xMin || 1;\n    const yRange = yMax - yMin || 1;\n    \n    return xValues.map((x, i) => {\n      const y = grayScaleValues[i];\n      const svgX = ((x - xMin) / xRange) * (width - 40) + 20;\n      const svgY = height - 20 - ((y - yMin) / yRange) * (height - 40);\n      return { x: svgX, y: svgY, originalX: x, originalY: y };\n    });\n  };\n\n  if (heatmapData.length === 0) {\n    return (\n      <div className=\"bg-white rounded-lg shadow-lg p-6\">\n        <h3 className=\"text-lg font-semibold mb-4\">像素热力图</h3>\n        <p className=\"text-gray-500\">暂无数据显示热力图</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <h3 className=\"text-lg font-semibold mb-4\">\n        像素热力图 ({dataType === 'original' ? '原始数据' : '归一化数据'})\n      </h3>\n      \n      <div className=\"mb-4\">\n        <p className=\"text-sm text-gray-600 mb-2\">\n          双击任意像素位置查看该位置的拟合结果\n        </p>\n        \n        {/* 热力图 */}\n        <div className=\"border border-gray-300 rounded-lg overflow-hidden inline-block\">\n          <svg width=\"700\" height=\"470\" className=\"bg-white\">\n            {/* 列标识 (顶部) */}\n            {Array.from({ length: 32 }, (_, colIndex) => {\n              const isEven = colIndex % 2 === 0;\n              return (\n                <text\n                  key={`col-label-${colIndex}`}\n                  x={30 + colIndex * 20 + 10}\n                  y={isEven ? 15 : 25}\n                  textAnchor=\"middle\"\n                  className=\"text-xs fill-gray-600 font-mono\"\n                >\n                  {colIndex}\n                </text>\n              );\n            })}\n            \n            {/* 行标识 (左侧) */}\n            {Array.from({ length: 20 }, (_, rowIndex) => {\n              const isEven = rowIndex % 2 === 0;\n              return (\n                <text\n                  key={`row-label-${rowIndex}`}\n                  x={isEven ? 15 : 5}\n                  y={30 + rowIndex * 20 + 14}\n                  textAnchor=\"middle\"\n                  className=\"text-xs fill-gray-600 font-mono\"\n                >\n                  {rowIndex}\n                </text>\n              );\n            })}\n            \n            {/* 热力图数据 */}\n            {heatmapData.map((row, rowIndex) =>\n              row.map((value, colIndex) => (\n                <rect\n                  key={`${rowIndex}-${colIndex}`}\n                  x={30 + colIndex * 20}\n                  y={30 + rowIndex * 20}\n                  width=\"20\"\n                  height=\"20\"\n                  fill={getColor(value)}\n                  stroke=\"#e5e7eb\"\n                  strokeWidth=\"0.5\"\n                  className=\"cursor-pointer hover:stroke-2 hover:stroke-blue-500\"\n                  onDoubleClick={() => handlePixelDoubleClick(rowIndex, colIndex)}\n                  onMouseEnter={(e) => handlePixelMouseEnter(rowIndex, colIndex, e)}\n                  onMouseLeave={handlePixelMouseLeave}\n                >\n                  <title>{`位置(${rowIndex},${colIndex}): ${value.toFixed(4)}`}</title>\n                </rect>\n              ))\n            )}\n            \n            {/* 坐标轴标签 */}\n            <text x=\"350\" y=\"460\" textAnchor=\"middle\" className=\"text-sm fill-gray-700 font-medium\">\n              列索引 (0-31)\n            </text>\n            <text x=\"0\" y=\"230\" textAnchor=\"middle\" className=\"text-sm fill-gray-700 font-medium\" transform=\"rotate(-90 0 230)\">\n              行索引 (0-19)\n            </text>\n          </svg>\n        </div>\n        \n        {/* 颜色图例 */}\n        <div className=\"mt-4 flex items-center gap-4\">\n          <span className=\"text-sm text-gray-600\">数值范围:</span>\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-4 h-4\" style={{ backgroundColor: getColor(minValue) }}></div>\n            <span className=\"text-xs\">{minValue.toFixed(2)}</span>\n            <div className=\"w-20 h-4 bg-gradient-to-r\" \n                 style={{ \n                   backgroundImage: `linear-gradient(to right, ${getColor(minValue)}, ${getColor(maxValue)})` \n                 }}>\n            </div>\n            <span className=\"text-xs\">{maxValue.toFixed(2)}</span>\n            <div className=\"w-4 h-4\" style={{ backgroundColor: getColor(maxValue) }}></div>\n          </div>\n        </div>\n      </div>\n\n      {/* 悬停提示框 */}\n      {hoveredPosition && hoveredFittingData && (\n        <div \n          className=\"fixed bg-white border border-gray-300 rounded-lg shadow-lg p-3 z-40 pointer-events-none\"\n          style={{\n            left: hoveredPosition.x,\n            top: hoveredPosition.y,\n            transform: 'translateY(-50%)'\n          }}\n        >\n          <div className=\"text-sm\">\n            <div className=\"font-semibold mb-1\">\n              位置({hoveredPosition.row},{hoveredPosition.col})\n            </div>\n            <div className=\"text-xs text-gray-600 space-y-1\">\n              <div>数据点: {hoveredFittingData.dataPoints}个</div>\n              <div>平均值: {hoveredFittingData.avgValue.toFixed(4)}</div>\n              <div className=\"border-t pt-1 mt-1\">\n                <div className=\"font-medium\">最佳拟合: {getTypeLabel(hoveredFittingData.bestFit.type)}</div>\n                <div>R²: {hoveredFittingData.bestFit.rSquared.toFixed(4)}</div>\n                <div className=\"text-xs font-mono\">{hoveredFittingData.bestFit.formula}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 拟合结果模态框 */}\n      {showFittingModal && positionFittingResult && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg shadow-xl max-w-6xl max-h-[90vh] overflow-y-auto p-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h4 className=\"text-lg font-semibold\">\n                位置({positionFittingResult.row},{positionFittingResult.col})的拟合结果\n              </h4>\n              <button\n                onClick={() => setShowFittingModal(false)}\n                className=\"text-gray-500 hover:text-gray-700 text-xl font-bold\"\n              >\n                ×\n              </button>\n            </div>\n            \n            {/* 拟合结果表格 */}\n            <div className=\"mb-6\">\n              <h5 className=\"font-medium mb-3\">拟合结果对比</h5>\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full border-collapse border border-gray-200\">\n                  <thead>\n                    <tr className=\"bg-gray-50\">\n                      <th className=\"border border-gray-200 px-3 py-2 text-left\">拟合类型</th>\n                      <th className=\"border border-gray-200 px-3 py-2 text-left\">公式</th>\n                      <th className=\"border border-gray-200 px-3 py-2 text-left\">R²值</th>\n                      <th className=\"border border-gray-200 px-3 py-2 text-left\">RMSE</th>\n                      <th className=\"border border-gray-200 px-3 py-2 text-left\">MAE</th>\n                      <th className=\"border border-gray-200 px-3 py-2 text-left\">最大误差</th>\n                      <th className=\"border border-gray-200 px-3 py-2 text-left\">拟合质量</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {positionFittingResult.fittingResults.map((result, index) => {\n                      const quality = result.rSquared > 0.9 ? '优秀' : \n                                     result.rSquared > 0.7 ? '良好' : \n                                     result.rSquared > 0.5 ? '一般' : '较差';\n                      const qualityColor = result.rSquared > 0.9 ? 'text-green-600' : \n                                         result.rSquared > 0.7 ? 'text-blue-600' : \n                                         result.rSquared > 0.5 ? 'text-yellow-600' : 'text-red-600';\n                      \n                      return (\n                        <tr key={index} className=\"hover:bg-gray-50\">\n                          <td className=\"border border-gray-200 px-3 py-2\">\n                            <div className=\"flex items-center gap-2\">\n                              <div \n                                className=\"w-3 h-3 rounded-full\" \n                                style={{ backgroundColor: getColorForFittingType(result.type) }}\n                              ></div>\n                              {getTypeLabel(result.type)}\n                            </div>\n                          </td>\n                          <td className=\"border border-gray-200 px-3 py-2 font-mono text-xs\">\n                            {result.formula}\n                          </td>\n                          <td className=\"border border-gray-200 px-3 py-2 font-medium\">\n                            {result.rSquared.toFixed(4)}\n                          </td>\n                          <td className=\"border border-gray-200 px-3 py-2 font-medium\">\n                            {result.rmse?.toFixed(4) || 'N/A'}\n                          </td>\n                          <td className=\"border border-gray-200 px-3 py-2 font-medium\">\n                            {result.mae?.toFixed(4) || 'N/A'}\n                          </td>\n                          <td className=\"border border-gray-200 px-3 py-2 font-medium\">\n                            {result.maxError?.toFixed(4) || 'N/A'}\n                          </td>\n                          <td className={`border border-gray-200 px-3 py-2 font-medium ${qualityColor}`}>\n                            {quality}\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n            \n            {/* 预测功能 */}\n            <div className=\"mb-6\">\n              <h5 className=\"font-medium mb-3\">预测功能</h5>\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <div className=\"flex items-center gap-4 mb-4\">\n                  <label className=\"text-sm font-medium\">输入{dataType === 'original' ? '原始' : '归一化'}数据值:</label>\n                  <input\n                    type=\"number\"\n                    value={predictionInput}\n                    onChange={(e) => handlePredictionInputChange(e.target.value)}\n                    placeholder=\"请输入数值进行预测\"\n                    className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                \n                {predictionResults && (\n                  <div className=\"overflow-x-auto\">\n                    <table className=\"w-full border-collapse border border-gray-200\">\n                      <thead>\n                        <tr className=\"bg-gray-100\">\n                          <th className=\"border border-gray-200 px-3 py-2 text-left\">拟合类型</th>\n                          <th className=\"border border-gray-200 px-3 py-2 text-left\">预测结果</th>\n                          <th className=\"border border-gray-200 px-3 py-2 text-left\">R²值</th>\n                          <th className=\"border border-gray-200 px-3 py-2 text-left\">状态</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {predictionResults.map((result, index) => (\n                          <tr key={index} className=\"hover:bg-gray-50\">\n                            <td className=\"border border-gray-200 px-3 py-2\">\n                              <div className=\"flex items-center gap-2\">\n                                <div \n                                  className=\"w-3 h-3 rounded-full\" \n                                  style={{ backgroundColor: getColorForFittingType(result.type) }}\n                                ></div>\n                                {getTypeLabel(result.type)}\n                              </div>\n                            </td>\n                            <td className=\"border border-gray-200 px-3 py-2 font-medium\">\n                              {result.error ? (\n                                <span className=\"text-red-600\">{result.error}</span>\n                              ) : (\n                                <span className=\"text-green-600\">{result.prediction?.toFixed(4) || 'N/A'}</span>\n                              )}\n                            </td>\n                            <td className=\"border border-gray-200 px-3 py-2\">\n                              {result.rSquared.toFixed(4)}\n                            </td>\n                            <td className=\"border border-gray-200 px-3 py-2\">\n                              {result.error ? (\n                                <span className=\"text-red-600\">错误</span>\n                              ) : (\n                                <span className=\"text-green-600\">成功</span>\n                              )}\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* 输入输出数据表格 */}\n            <div className=\"mb-6\">\n              <h5 className=\"font-medium mb-3\">拟合输入输出数据</h5>\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <div className=\"overflow-x-auto max-h-60\">\n                  <table className=\"w-full border-collapse border border-gray-200\">\n                    <thead className=\"sticky top-0 bg-white\">\n                      <tr>\n                        <th className=\"border border-gray-200 px-3 py-2 text-left\">序号</th>\n                        <th className=\"border border-gray-200 px-3 py-2 text-left\">\n                          输入({dataType === 'original' ? '原始' : '归一化'}数据值)\n                        </th>\n                        <th className=\"border border-gray-200 px-3 py-2 text-left\">输出(灰阶值)</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {positionFittingResult.xValues.map((xValue, index) => (\n                        <tr key={index} className=\"hover:bg-gray-100\">\n                          <td className=\"border border-gray-200 px-3 py-2 text-center\">{index + 1}</td>\n                          <td className=\"border border-gray-200 px-3 py-2 font-mono\">\n                            {xValue.toFixed(4)}\n                          </td>\n                          <td className=\"border border-gray-200 px-3 py-2 font-mono\">\n                            {grayScaleValues[index]?.toFixed(4) || 'N/A'}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n                <div className=\"mt-3 text-sm text-gray-600\">\n                  <div className=\"flex justify-between\">\n                    <span>总数据点: {positionFittingResult.xValues.length}</span>\n                    <span>输入范围: {Math.min(...positionFittingResult.xValues).toFixed(4)} ~ {Math.max(...positionFittingResult.xValues).toFixed(4)}</span>\n                    <span>输出范围: {Math.min(...grayScaleValues).toFixed(4)} ~ {Math.max(...grayScaleValues).toFixed(4)}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* 拟合曲线图 */}\n            <div className=\"mb-4\">\n              <h5 className=\"font-medium mb-3\">拟合曲线图</h5>\n              <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <svg width=\"100%\" height=\"400\" viewBox=\"0 0 800 400\" className=\"border border-gray-200 bg-white\">\n                  {/* 网格线 */}\n                  <defs>\n                    <pattern id=\"grid\" width=\"40\" height=\"40\" patternUnits=\"userSpaceOnUse\">\n                      <path d=\"M 40 0 L 0 0 0 40\" fill=\"none\" stroke=\"#f3f4f6\" strokeWidth=\"1\"/>\n                    </pattern>\n                  </defs>\n                  <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\n                  \n                  {/* 坐标轴 */}\n                  <line x1=\"20\" y1=\"20\" x2=\"20\" y2=\"380\" stroke=\"#374151\" strokeWidth=\"2\" />\n                  <line x1=\"20\" y1=\"380\" x2=\"780\" y2=\"380\" stroke=\"#374151\" strokeWidth=\"2\" />\n                  \n                  {/* X轴刻度和数值 */}\n                  {(() => {\n                    const xMin = Math.min(...positionFittingResult.xValues);\n                    const xMax = Math.max(...positionFittingResult.xValues);\n                    const xRange = xMax - xMin || 1;\n                    return Array.from({ length: 9 }, (_, i) => {\n                      const value = xMin + (xRange / 8) * i;\n                      const x = 20 + (i / 8) * 760;\n                      return (\n                        <g key={`x-tick-${i}`}>\n                          <line x1={x} y1=\"380\" x2={x} y2=\"385\" stroke=\"#374151\" strokeWidth=\"1\" />\n                          <text x={x} y=\"398\" textAnchor=\"middle\" className=\"text-xs fill-gray-600\">\n                            {value.toFixed(2)}\n                          </text>\n                        </g>\n                      );\n                    });\n                  })()}\n                  \n                  {/* Y轴刻度和数值 */}\n                  {(() => {\n                    const yMin = Math.min(...grayScaleValues);\n                    const yMax = Math.max(...grayScaleValues);\n                    const yRange = yMax - yMin || 1;\n                    return Array.from({ length: 6 }, (_, i) => {\n                      const value = yMin + (yRange / 5) * i;\n                      const y = 380 - (i / 5) * 360;\n                      return (\n                        <g key={`y-tick-${i}`}>\n                          <line x1=\"15\" y1={y} x2=\"20\" y2={y} stroke=\"#374151\" strokeWidth=\"1\" />\n                          <text x=\"12\" y={y + 3} textAnchor=\"end\" className=\"text-xs fill-gray-600\">\n                            {value.toFixed(1)}\n                          </text>\n                        </g>\n                      );\n                    });\n                  })()}\n                  \n                  {/* 原始数据点 */}\n                  {generateScatterPoints(positionFittingResult.xValues, 800, 400).map((point, i) => (\n                    <g key={`point-${i}`}>\n                      <circle \n                        cx={point.x} \n                        cy={point.y} \n                        r=\"4\" \n                        fill=\"#1f2937\" \n                        stroke=\"white\" \n                        strokeWidth=\"2\"\n                      />\n                      <title>{`${dataType === 'original' ? '原始' : '归一化'}数据: ${point.originalX.toFixed(2)}, 灰阶值: ${point.originalY.toFixed(2)}`}</title>\n                    </g>\n                  ))}\n                  \n                  {/* 拟合曲线 */}\n                  {positionFittingResult.fittingResults.map((result, index) => {\n                    const path = generateSVGPath(result, positionFittingResult.xValues, 800, 400);\n                    if (!path) return null;\n                    \n                    return (\n                      <g key={`curve-${index}`}>\n                        <path \n                          d={path} \n                          fill=\"none\" \n                          stroke={getColorForFittingType(result.type)} \n                          strokeWidth=\"2\" \n                          strokeDasharray={result.type === 'polynomial' ? '5,5' : 'none'}\n                        />\n                        <text \n                          x={100 + index * 150} \n                          y={50 + index * 20} \n                          className=\"text-xs\" \n                          fill={getColorForFittingType(result.type)}\n                          fontFamily=\"monospace\"\n                        >\n                          {result.formula}\n                        </text>\n                      </g>\n                    );\n                  })}\n                  \n                  {/* 坐标轴标签 */}\n                  <text x=\"400\" y=\"395\" textAnchor=\"middle\" className=\"text-sm fill-gray-600\">\n                    {dataType === 'original' ? '原始数据值' : '归一化数据值'}\n                  </text>\n                  <text x=\"10\" y=\"200\" textAnchor=\"middle\" className=\"text-sm fill-gray-600\" transform=\"rotate(-90 10 200)\">\n                    灰阶值\n                  </text>\n                </svg>\n              </div>\n            </div>\n            \n            {/* 图例 */}\n            <div className=\"flex flex-wrap gap-4 text-sm\">\n              <div className=\"flex items-center gap-2\">\n                <div className=\"w-3 h-3 rounded-full bg-gray-800\"></div>\n                <span>原始数据点</span>\n              </div>\n              {positionFittingResult.fittingResults.map((result, index) => (\n                <div key={index} className=\"flex items-center gap-2\">\n                  <div \n                    className=\"w-3 h-1\" \n                    style={{ \n                      backgroundColor: getColorForFittingType(result.type),\n                      borderStyle: result.type === 'polynomial' ? 'dashed' : 'solid'\n                    }}\n                  ></div>\n                  <span>{getTypeLabel(result.type)}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PixelHeatmap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}