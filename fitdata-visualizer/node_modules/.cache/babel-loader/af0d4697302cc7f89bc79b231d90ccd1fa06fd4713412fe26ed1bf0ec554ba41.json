{"ast":null,"code":"var _jsxFileName = \"D:\\\\source\\\\fitdata\\\\fitdata-visualizer\\\\src\\\\components\\\\TargetDataPrediction.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useMemo } from 'react';\nimport * as XLSX from 'xlsx';\nimport { performAllFittings } from '../utils/curveFitting';\nimport { parseExcelData } from '../utils/dataParser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TargetDataPrediction = ({\n  grayScaleData,\n  brightnessBlocks\n}) => {\n  _s();\n  var _rawData$matrix$, _rawData$matrix$2, _rawData$matrix$3, _rawData$matrix$4, _rawData$matrix$5;\n  const [rawData, setRawData] = useState(null);\n  const [predictionResults, setPredictionResults] = useState([]);\n  const [bestFittingResult, setBestFittingResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // 本地状态用于存储从文件解析的数据\n  const [localGrayScaleData, setLocalGrayScaleData] = useState(null);\n  const [localBrightnessBlocks, setLocalBrightnessBlocks] = useState(null);\n  const [doubleClickedCell, setDoubleClickedCell] = useState(null);\n  const [generationProgress, setGenerationProgress] = useState(0);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [cachedPredictionResults, setCachedPredictionResults] = useState(null);\n\n  // 获取拟合类型标签\n  const getTypeLabel = type => {\n    const labels = {\n      'logarithmic': '对数拟合',\n      'exponential': '指数拟合',\n      'polynomial': '三次多项式拟合',\n      'power': '幂函数拟合',\n      'bivariate': '二次多项式拟合'\n    };\n    return labels[type] || type;\n  };\n\n  // 将数字转换为Excel列名\n  const numToCol = num => {\n    let result = '';\n    while (num > 0) {\n      num--;\n      result = String.fromCharCode(65 + num % 26) + result;\n      num = Math.floor(num / 26);\n    }\n    return result;\n  };\n\n  // 读取Excel Sheet3数据\n  const handleFileUpload = useCallback(async event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setIsLoading(true);\n    setError(null);\n    try {\n      // 清除缓存的预测结果\n      setCachedPredictionResults(null);\n\n      // 使用parseExcelData解析完整数据\n      const parsedData = await parseExcelData(file);\n\n      // 更新本地的grayScaleData和brightnessBlocks\n      setLocalGrayScaleData(parsedData.grayScale);\n      setLocalBrightnessBlocks(parsedData.brightnessBlocks);\n\n      // 设置原始数据（从Sheet3读取）\n      const data = await file.arrayBuffer();\n      const workbook = XLSX.read(new Uint8Array(data), {\n        type: 'array'\n      });\n\n      // 检查是否有Sheet3\n      if (!workbook.SheetNames.includes('Sheet3')) {\n        throw new Error('未找到Sheet3工作表');\n      }\n      const worksheet = workbook.Sheets['Sheet3'];\n      const values = [];\n      const positions = [];\n\n      // 读取A2-AF21范围的原始数据（20行×32列）\n      const startRow = 2;\n      const endRow = 21;\n      const startCol = 'A';\n      const endCol = 'AF';\n\n      // 将列字母转换为数字\n      const colToNum = col => {\n        let result = 0;\n        for (let i = 0; i < col.length; i++) {\n          result = result * 26 + (col.charCodeAt(i) - 'A'.charCodeAt(0) + 1);\n        }\n        return result;\n      };\n      const numToCol = num => {\n        let result = '';\n        while (num > 0) {\n          num--;\n          result = String.fromCharCode('A'.charCodeAt(0) + num % 26) + result;\n          num = Math.floor(num / 26);\n        }\n        return result;\n      };\n      const startColNum = colToNum(startCol);\n      const endColNum = colToNum(endCol);\n\n      // 创建矩阵结构\n      const matrix = [];\n\n      // 按行读取数据\n      for (let row = startRow; row <= endRow; row++) {\n        const rowData = [];\n        for (let colNum = startColNum; colNum <= endColNum; colNum++) {\n          const col = numToCol(colNum);\n          const cellAddress = `${col}${row}`;\n          const cell = worksheet[cellAddress];\n          if (cell && cell.v !== undefined && cell.v !== null && cell.v !== '') {\n            const value = typeof cell.v === 'number' ? cell.v : parseFloat(cell.v.toString());\n            if (!isNaN(value)) {\n              values.push(value);\n              positions.push(cellAddress);\n              rowData.push(value);\n            } else {\n              rowData.push(0);\n            }\n          } else {\n            rowData.push(0);\n          }\n        }\n        matrix.push(rowData);\n      }\n      if (values.length === 0) {\n        throw new Error('Sheet3中未找到有效的原始数据');\n      }\n      setRawData({\n        values,\n        positions,\n        matrix\n      });\n\n      // 自动生成预测结果（延迟确保状态更新完成）\n      setTimeout(async () => {\n        await generatePredictions();\n      }, 100);\n    } catch (error) {\n      setError(error instanceof Error ? error.message : '文件读取失败');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // 处理双击事件\n  const handleDoubleClick = useCallback((rowIndex, colIndex) => {\n    // 如果没有缓存的预测结果，提示用户先生成预测数据\n    if (!cachedPredictionResults) {\n      setError('请先生成预测数据后再查看详细结果');\n      return;\n    }\n    setDoubleClickedCell({\n      row: rowIndex,\n      col: colIndex\n    });\n  }, [cachedPredictionResults]);\n\n  // 关闭双击卡片\n  const handleCloseDoubleClickCard = useCallback(() => {\n    setDoubleClickedCell(null);\n  }, []);\n\n  // 计算双击卡片的预测结果\n  const doubleClickPredictionContent = useMemo(() => {\n    // 使用本地数据（如果有）或传入的props数据\n    const currentGrayScaleData = localGrayScaleData || grayScaleData;\n    const currentBrightnessBlocks = localBrightnessBlocks || brightnessBlocks;\n    if (!rawData || !currentGrayScaleData.values.length || !currentBrightnessBlocks.length || !doubleClickedCell) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"\\u9884\\u6D4B\\u6570\\u636E\\u5C1A\\u672A\\u751F\\u6210\\uFF0C\\u8BF7\\u7B49\\u5F85\\u6570\\u636E\\u5904\\u7406\\u5B8C\\u6210\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 14\n      }, this);\n    }\n\n    // 使用缓存的预测结果，如果没有缓存则返回提示\n    if (!cachedPredictionResults) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"\\u8BF7\\u5148\\u751F\\u6210\\u9884\\u6D4B\\u6570\\u636E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 14\n      }, this);\n    }\n\n    // 直接从缓存中读取该位置的预测结果\n    const cellIndex = doubleClickedCell.row * 32 + doubleClickedCell.col;\n    const cachedResult = cachedPredictionResults[cellIndex];\n    if (!cachedResult) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"\\u8BE5\\u4F4D\\u7F6E\\u6682\\u65E0\\u6709\\u6548\\u62DF\\u5408\\u7ED3\\u679C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 14\n      }, this);\n    }\n    const {\n      rawValue,\n      methodPredictions\n    } = cachedResult;\n    const predictions = Object.entries(methodPredictions);\n    if (predictions.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"\\u8BE5\\u4F4D\\u7F6E\\u6682\\u65E0\\u6709\\u6548\\u62DF\\u5408\\u7ED3\\u679C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-50 p-4 rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u4EAE\\u5EA6\\u503C:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 font-medium\",\n            children: rawValue.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"font-medium text-gray-700\",\n          children: \"\\u6240\\u6709\\u62DF\\u5408\\u65B9\\u6CD5\\u9884\\u6D4B\\u7ED3\\u679C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), predictions.map(([method, prediction]) => {\n          const pred = prediction;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-50 p-4 rounded-lg border border-blue-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium text-gray-700\",\n                children: getTypeLabel(method)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-lg font-bold text-blue-600\",\n                children: pred.predictedGrayScale.toFixed(6)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mb-2\",\n              children: [\"\\u7F6E\\u4FE1\\u5EA6(R\\xB2): \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-medium\",\n                children: [(pred.confidence * 100).toFixed(2), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 28\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500 font-mono bg-white p-2 rounded border\",\n              children: pred.formula\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this)]\n          }, method, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this);\n  }, [doubleClickedCell, cachedPredictionResults, localGrayScaleData, localBrightnessBlocks, grayScaleData, brightnessBlocks, rawData, getTypeLabel]);\n\n  // 生成预测结果\n  const generatePredictions = useCallback(async () => {\n    if (!rawData) {\n      setError('请先上传原始数据');\n      return;\n    }\n\n    // 使用本地数据（如果有）或传入的props数据\n    const currentGrayScaleData = localGrayScaleData || grayScaleData;\n    const currentBrightnessBlocks = localBrightnessBlocks || brightnessBlocks;\n    if (!currentGrayScaleData.values.length || !currentBrightnessBlocks.length) {\n      setError('无法获取有效的拟合数据');\n      return;\n    }\n    setIsGenerating(true);\n    setGenerationProgress(0);\n    setError(null);\n    try {\n      // 步骤1: 数据验证 (10%)\n      setGenerationProgress(10);\n      await new Promise(resolve => setTimeout(resolve, 100));\n\n      // 提取中心像素值和灰阶值\n      const centerPixelValues = currentBrightnessBlocks.map(block => block.centerPixelValue);\n      const grayScaleValues = currentGrayScaleData.values;\n      if (centerPixelValues.length !== grayScaleValues.length) {\n        setError('拟合数据长度不匹配');\n        return;\n      }\n\n      // 步骤2: 执行拟合算法 (30%)\n      setGenerationProgress(30);\n      await new Promise(resolve => setTimeout(resolve, 200));\n      const allFittingResults = performAllFittings({\n        x: centerPixelValues,\n        y: grayScaleValues\n      });\n\n      // 拟合结果已获取，继续处理预测\n\n      // 步骤3: 找到最佳拟合结果 (50%)\n      setGenerationProgress(50);\n      await new Promise(resolve => setTimeout(resolve, 100));\n      const bestFitting = allFittingResults.reduce((best, current) => {\n        if (isNaN(current.rSquared) || current.rSquared < 0) return best;\n        if (!best || current.rSquared > best.rSquared) return current;\n        return best;\n      }, null);\n      if (!bestFitting) {\n        setError('无法获取有效的拟合结果');\n        return;\n      }\n      setBestFittingResult(bestFitting);\n\n      // 步骤4: 计算预测结果 (80%)\n      setGenerationProgress(80);\n      await new Promise(resolve => setTimeout(resolve, 300));\n      const totalValues = rawData.values.length;\n      const predictions = [];\n      const predictionCache = [];\n      for (let index = 0; index < totalValues; index++) {\n        const rawValue = rawData.values[index];\n        // 计算对应的亮度值\n        let brightnessValue = rawValue; // 使用原始数据值作为亮度值\n\n        // 为每种拟合方法计算预测值\n        const methodPredictions = {};\n        allFittingResults.forEach(fitting => {\n          if (isNaN(fitting.rSquared) || fitting.rSquared < 0) return;\n          let predictedGrayScale = 0;\n\n          // 根据拟合类型计算预测值\n          switch (fitting.type) {\n            case 'logarithmic':\n              if (rawValue > 0) {\n                const [a, b] = fitting.coefficients;\n                predictedGrayScale = a * Math.log(rawValue) + b;\n              }\n              break;\n            case 'exponential':\n              const [a_exp, b_exp] = fitting.coefficients;\n              predictedGrayScale = a_exp * Math.exp(b_exp * rawValue);\n              break;\n            case 'polynomial':\n              const [a_poly, b_poly, c_poly, d_poly] = fitting.coefficients;\n              predictedGrayScale = a_poly * Math.pow(rawValue, 3) + b_poly * Math.pow(rawValue, 2) + c_poly * rawValue + d_poly;\n              break;\n            case 'power':\n              if (rawValue > 0) {\n                const [a_pow, b_pow] = fitting.coefficients;\n                predictedGrayScale = a_pow * Math.pow(rawValue, b_pow);\n              }\n              break;\n            case 'bivariate':\n              const [a_biv, b_biv, c_biv] = fitting.coefficients;\n              predictedGrayScale = a_biv * Math.pow(rawValue, 2) + b_biv * rawValue + c_biv;\n              break;\n          }\n          methodPredictions[fitting.type] = {\n            predictedGrayScale,\n            formula: fitting.formula,\n            confidence: fitting.rSquared,\n            fittingType: fitting.type\n          };\n        });\n        predictions.push({\n          position: rawData.positions[index],\n          brightnessValue,\n          predictions: methodPredictions\n        });\n\n        // 缓存该位置的预测结果供双击功能使用\n        predictionCache.push({\n          rawValue,\n          methodPredictions\n        });\n\n        // 更新进度 (80% - 95%)\n        const progress = 80 + Math.floor(index / totalValues * 15);\n        setGenerationProgress(progress);\n\n        // 每处理100个数据点暂停一下，让UI更新\n        if (index % 100 === 0) {\n          await new Promise(resolve => setTimeout(resolve, 10));\n        }\n      }\n\n      // 缓存预测结果\n      setCachedPredictionResults(predictionCache);\n\n      // 步骤5: 完成 (100%)\n      setGenerationProgress(100);\n      await new Promise(resolve => setTimeout(resolve, 200));\n      setPredictionResults(predictions);\n      setError(null);\n    } catch (err) {\n      console.error('预测生成错误:', err);\n      setError(err instanceof Error ? err.message : '预测生成失败');\n    } finally {\n      setIsGenerating(false);\n      setGenerationProgress(0);\n    }\n  }, [rawData, grayScaleData, brightnessBlocks, localGrayScaleData, localBrightnessBlocks, getTypeLabel]);\n\n  // 导出预测结果到Excel\n  const exportToExcel = useCallback(() => {\n    if (predictionResults.length === 0 || !rawData) {\n      setError('没有预测结果可导出');\n      return;\n    }\n    const workbook = XLSX.utils.book_new();\n\n    // 创建矩阵格式的预测结果工作表\n    const rows = 20; // A2-AF21 共20行\n    const cols = 32; // A-AF 共32列\n\n    // 将列数字转换为字母的辅助函数\n    const numToCol = num => {\n      let result = '';\n      while (num > 0) {\n        num--;\n        result = String.fromCharCode('A'.charCodeAt(0) + num % 26) + result;\n        num = Math.floor(num / 26);\n      }\n      return result;\n    };\n\n    // 创建列标题 (A-AF)\n    const colHeaders = [];\n    for (let i = 0; i < cols; i++) {\n      colHeaders.push(numToCol(i + 1));\n    }\n\n    // 创建原始数据矩阵工作表\n    const originalMatrixData = [];\n    originalMatrixData.push(['', ...colHeaders]);\n    for (let row = 0; row < rows; row++) {\n      const rowData = [row + 2]; // 行号从2开始\n      for (let col = 0; col < cols; col++) {\n        if (row < rawData.matrix.length && col < rawData.matrix[row].length) {\n          rowData.push(rawData.matrix[row][col]);\n        } else {\n          rowData.push('');\n        }\n      }\n      originalMatrixData.push(rowData);\n    }\n    const originalWorksheet = XLSX.utils.aoa_to_sheet(originalMatrixData);\n    XLSX.utils.book_append_sheet(workbook, originalWorksheet, '原始数据');\n\n    // 获取所有拟合方法\n    const allMethods = new Set();\n    predictionResults.forEach(result => {\n      Object.keys(result.predictions).forEach(method => allMethods.add(method));\n    });\n\n    // 为每种拟合方法创建单独的预测结果矩阵\n    Array.from(allMethods).forEach(method => {\n      const methodMatrixData = [];\n      methodMatrixData.push(['', ...colHeaders]);\n      for (let row = 0; row < rows; row++) {\n        const rowData = [row + 2]; // 行号从2开始\n        for (let col = 0; col < cols; col++) {\n          const dataIndex = row * cols + col;\n          if (dataIndex < predictionResults.length && predictionResults[dataIndex].predictions[method]) {\n            rowData.push(parseFloat(predictionResults[dataIndex].predictions[method].predictedGrayScale.toFixed(6)));\n          } else {\n            rowData.push('');\n          }\n        }\n        methodMatrixData.push(rowData);\n      }\n      const methodWorksheet = XLSX.utils.aoa_to_sheet(methodMatrixData);\n      XLSX.utils.book_append_sheet(workbook, methodWorksheet, getTypeLabel(method));\n    });\n\n    // 创建详细预测结果工作表\n    const detailData = [];\n    detailData.push(['位置', '亮度值', '拟合方法', '预测灰阶值', '置信度(R²)', '拟合公式']);\n    predictionResults.forEach(result => {\n      Object.entries(result.predictions).forEach(([method, prediction]) => {\n        detailData.push([result.position, result.brightnessValue.toFixed(2), getTypeLabel(method), prediction.predictedGrayScale.toFixed(6), prediction.confidence.toFixed(6), prediction.formula]);\n      });\n    });\n    const detailWorksheet = XLSX.utils.aoa_to_sheet(detailData);\n    XLSX.utils.book_append_sheet(workbook, detailWorksheet, '详细结果');\n\n    // 添加拟合信息工作表\n    if (bestFittingResult) {\n      const fittingInfo = [['拟合信息', ''], ['最佳拟合类型', getTypeLabel(bestFittingResult.type)], ['拟合公式', bestFittingResult.formula], ['R²值', bestFittingResult.rSquared.toFixed(6)], ['RMSE', bestFittingResult.rmse.toFixed(6)], ['MAE', bestFittingResult.mae.toFixed(6)], ['最大误差', bestFittingResult.maxError.toFixed(6)]];\n      const fittingWs = XLSX.utils.aoa_to_sheet(fittingInfo);\n      XLSX.utils.book_append_sheet(workbook, fittingWs, '拟合信息');\n    }\n\n    // 下载文件\n    const fileName = `原始数据预测结果_${new Date().toISOString().slice(0, 10)}.xlsx`;\n    XLSX.writeFile(workbook, fileName);\n  }, [predictionResults, bestFittingResult, rawData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-lg p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold mb-6\",\n      children: \"\\u539F\\u59CB\\u6570\\u636E\\u9884\\u6D4B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-3\",\n        children: \"\\u4E0A\\u4F20\\u539F\\u59CB\\u6570\\u636E\\u6587\\u4EF6 (Sheet3)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".xlsx,.xls\",\n          onChange: handleFileUpload,\n          className: \"hidden\",\n          id: \"raw-file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"raw-file-upload\",\n          className: \"cursor-pointer inline-flex items-center px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\",\n          children: \"\\u9009\\u62E9Excel\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-sm text-gray-500\",\n          children: \"\\u8BF7\\u9009\\u62E9\\u5305\\u542BSheet3\\u5DE5\\u4F5C\\u8868\\u7684Excel\\u6587\\u4EF6\\uFF0C\\u539F\\u59CB\\u6570\\u636E\\u5E94\\u4F4D\\u4E8EA2-AF21\\u8303\\u56F4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-blue-700\",\n        children: \"\\u6B63\\u5728\\u8BFB\\u53D6\\u6587\\u4EF6...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-700\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 9\n    }, this), rawData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-gray-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-2\",\n        children: \"\\u539F\\u59CB\\u6570\\u636E\\u6982\\u89C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u77E9\\u9635\\u7EF4\\u5EA6:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 font-medium\",\n            children: [rawData.matrix.length, \" \\xD7 \", ((_rawData$matrix$ = rawData.matrix[0]) === null || _rawData$matrix$ === void 0 ? void 0 : _rawData$matrix$.length) || 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u6570\\u503C\\u8303\\u56F4:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 font-medium\",\n            children: [Math.min(...rawData.matrix.flat()).toFixed(2), \" - \", Math.max(...rawData.matrix.flat()).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 9\n    }, this), isGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 bg-blue-50 p-4 rounded-lg border border-blue-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium text-blue-800\",\n          children: \"\\u6B63\\u5728\\u751F\\u6210\\u9884\\u6D4B\\u6570\\u636E...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-medium text-blue-600\",\n          children: [generationProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full bg-blue-200 rounded-full h-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-600 h-3 rounded-full transition-all duration-300 ease-out\",\n          style: {\n            width: `${generationProgress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 text-sm text-blue-700\",\n        children: [generationProgress <= 10 && '正在验证数据...', generationProgress > 10 && generationProgress <= 30 && '正在执行拟合算法...', generationProgress > 30 && generationProgress <= 50 && '正在分析最佳拟合结果...', generationProgress > 50 && generationProgress <= 95 && '正在计算预测结果...', generationProgress > 95 && '即将完成...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 9\n    }, this), rawData && (localGrayScaleData && localBrightnessBlocks || grayScaleData.values.length > 0 && brightnessBlocks.length > 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generatePredictions,\n        className: \"px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\",\n        children: \"\\u751F\\u6210\\u9884\\u6D4B\\u7ED3\\u679C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 9\n    }, this), bestFittingResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-blue-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-2\",\n        children: \"\\u4F7F\\u7528\\u7684\\u6700\\u4F73\\u62DF\\u5408\\u6A21\\u578B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u62DF\\u5408\\u7C7B\\u578B\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: getTypeLabel(bestFittingResult.type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"R\\xB2\\u503C\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: bestFittingResult.rSquared.toFixed(6)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u62DF\\u5408\\u516C\\u5F0F\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium font-mono\",\n            children: bestFittingResult.formula\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 9\n    }, this), rawData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-3\",\n        children: \"\\u539F\\u59CB\\u6570\\u636E\\u70ED\\u529B\\u56FE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mb-2\",\n        children: \"\\u53CC\\u51FB\\u4EFB\\u610F\\u50CF\\u7D20\\u4F4D\\u7F6E\\u67E5\\u770B\\u8BE5\\u4F4D\\u7F6E\\u7684\\u62DF\\u5408\\u7ED3\\u679C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg border border-gray-200 overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inline-block\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: `${(((_rawData$matrix$2 = rawData.matrix[0]) === null || _rawData$matrix$2 === void 0 ? void 0 : _rawData$matrix$2.length) || 32) * 24 + 60}`,\n            height: `${rawData.matrix.length * 24 + 60}`,\n            className: \"bg-white\",\n            children: [Array.from({\n              length: ((_rawData$matrix$3 = rawData.matrix[0]) === null || _rawData$matrix$3 === void 0 ? void 0 : _rawData$matrix$3.length) || 32\n            }, (_, colIndex) => /*#__PURE__*/_jsxDEV(\"text\", {\n              x: 30 + colIndex * 24 + 12,\n              y: 15,\n              textAnchor: \"middle\",\n              className: \"text-xs fill-gray-600 font-mono\",\n              children: colIndex\n            }, `col-label-${colIndex}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 19\n            }, this)), rawData.matrix.map((_, rowIndex) => /*#__PURE__*/_jsxDEV(\"text\", {\n              x: 15,\n              y: 30 + rowIndex * 24 + 16,\n              textAnchor: \"middle\",\n              className: \"text-xs fill-gray-600 font-mono\",\n              children: rowIndex\n            }, `row-label-${rowIndex}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 19\n            }, this)), rawData.matrix.map((row, rowIndex) => row.map((value, colIndex) => {\n              const minValue = Math.min(...rawData.matrix.flat());\n              const maxValue = Math.max(...rawData.matrix.flat());\n              const normalizedValue = (value - minValue) / (maxValue - minValue);\n\n              // 使用蓝色渐变色彩映射\n              const blueIntensity = Math.round(normalizedValue * 200 + 55); // 55-255范围\n              const backgroundColor = `rgb(${255 - blueIntensity}, ${255 - blueIntensity}, 255)`;\n\n              // 根据背景色调整文字颜色\n              const textColor = normalizedValue > 0.5 ? 'white' : 'black';\n              return /*#__PURE__*/_jsxDEV(\"g\", {\n                children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n                  x: 30 + colIndex * 24,\n                  y: 30 + rowIndex * 24,\n                  width: \"24\",\n                  height: \"24\",\n                  fill: backgroundColor,\n                  stroke: \"#e5e7eb\",\n                  strokeWidth: \"0.5\",\n                  className: \"cursor-pointer hover:stroke-2 hover:stroke-blue-500\",\n                  onDoubleClick: () => handleDoubleClick(rowIndex, colIndex)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 738,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                  x: 30 + colIndex * 24 + 12,\n                  y: 30 + rowIndex * 24 + 16,\n                  textAnchor: \"middle\",\n                  className: \"text-xs font-medium pointer-events-none\",\n                  fill: textColor,\n                  children: value.toFixed(1)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 749,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n                  children: `位置: ${numToCol(colIndex + 1)}${rowIndex + 2}, 值: ${value.toFixed(2)}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 758,\n                  columnNumber: 25\n                }, this)]\n              }, `${rowIndex}-${colIndex}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 23\n              }, this);\n            })), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: `${((((_rawData$matrix$4 = rawData.matrix[0]) === null || _rawData$matrix$4 === void 0 ? void 0 : _rawData$matrix$4.length) || 32) * 24 + 60) / 2}`,\n              y: `${rawData.matrix.length * 24 + 50}`,\n              textAnchor: \"middle\",\n              className: \"text-sm fill-gray-700 font-medium\",\n              children: [\"\\u5217\\u7D22\\u5F15 (0-\", (((_rawData$matrix$5 = rawData.matrix[0]) === null || _rawData$matrix$5 === void 0 ? void 0 : _rawData$matrix$5.length) || 32) - 1, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: \"15\",\n              y: `${(rawData.matrix.length * 24 + 60) / 2}`,\n              textAnchor: \"middle\",\n              className: \"text-sm fill-gray-700 font-medium\",\n              transform: `rotate(-90 15 ${(rawData.matrix.length * 24 + 60) / 2})`,\n              children: [\"\\u884C\\u7D22\\u5F15 (0-\", rawData.matrix.length - 1, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 flex items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-600\",\n          children: \"\\u989C\\u8272\\u56FE\\u4F8B:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4 bg-blue-900 border border-gray-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-gray-600\",\n            children: \"\\u9AD8\\u503C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-20 h-4 bg-gradient-to-r from-blue-900 via-blue-400 to-blue-100 border border-gray-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4 bg-blue-100 border border-gray-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-gray-600\",\n            children: \"\\u4F4E\\u503C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 794,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500\",\n          children: [\"\\u8303\\u56F4: \", Math.min(...rawData.matrix.flat()).toFixed(2), \" - \", Math.max(...rawData.matrix.flat()).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 11\n      }, this), doubleClickedCell && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n        onClick: handleCloseDoubleClickCard,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg p-6 max-w-2xl w-full mx-4 max-h-[80vh] overflow-y-auto\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"text-lg font-semibold\",\n              children: [\"\\u4F4D\\u7F6E \", numToCol(doubleClickedCell.col + 1), doubleClickedCell.row + 2, \" \\u8BE6\\u7EC6\\u62DF\\u5408\\u7ED3\\u679C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCloseDoubleClickCard,\n              className: \"text-gray-500 hover:text-gray-700 text-2xl font-bold leading-none\",\n              \"aria-label\": \"\\u5173\\u95ED\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 17\n          }, this), doubleClickPredictionContent]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 9\n    }, this), predictionResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium\",\n          children: \"\\u9884\\u6D4B\\u7ED3\\u679C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportToExcel,\n          className: \"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm\",\n          children: \"\\u5BFC\\u51FA\\u5230Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\",\n        children: predictionResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gradient-to-br from-blue-50 to-indigo-100 p-4 rounded-lg border border-blue-200 hover:shadow-md transition-shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-medium text-gray-600\",\n              children: [\"\\u4F4D\\u7F6E: \", result.position]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 840,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-gray-600\",\n                children: \"\\u4EAE\\u5EA6\\u503C:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 845,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-medium\",\n                children: result.brightnessValue.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 846,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 844,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 pt-2 border-t border-blue-200\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs font-medium text-gray-700 mb-2\",\n                children: \"\\u5404\\u62DF\\u5408\\u65B9\\u6CD5\\u9884\\u6D4B\\u503C:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: Object.entries(result.predictions).map(([method, prediction]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-white rounded p-2 border\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center mb-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-xs font-medium text-gray-600\",\n                      children: getTypeLabel(method)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 856,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-xs text-blue-600 font-medium\",\n                      children: prediction.predictedGrayScale.toFixed(4)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 859,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 855,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500 mb-1\",\n                    children: [\"\\u7F6E\\u4FE1\\u5EA6: \", (prediction.confidence * 100).toFixed(1), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 863,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-400 break-all font-mono\",\n                    children: prediction.formula\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 866,\n                    columnNumber: 27\n                  }, this)]\n                }, method, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 854,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 852,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 843,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-4 bg-gray-50 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"font-medium mb-2\",\n          children: \"\\u9884\\u6D4B\\u7EDF\\u8BA1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-4 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: \"\\u9884\\u6D4B\\u6570\\u636E\\u70B9\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: predictionResults.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: \"\\u62DF\\u5408\\u65B9\\u6CD5\\u6570\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 887,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: predictionResults.length > 0 ? Object.keys(predictionResults[0].predictions).length : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 886,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: \"\\u6700\\u4F73\\u62DF\\u5408\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: bestFittingResult ? getTypeLabel(bestFittingResult.type) : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 894,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 9\n    }, this), !rawData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-2 text-yellow-800\",\n        children: \"\\u4F7F\\u7528\\u8BF4\\u660E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"text-sm text-yellow-700 space-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"1. \\u9996\\u5148\\u786E\\u4FDD\\u5DF2\\u4E0A\\u4F20\\u5E76\\u5904\\u7406\\u4E86\\u539F\\u59CB\\u6570\\u636E\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"2. \\u4E0A\\u4F20\\u5305\\u542BSheet3\\u5DE5\\u4F5C\\u8868\\u7684Excel\\u6587\\u4EF6\\uFF0C\\u76EE\\u6807\\u6570\\u636E\\u5E94\\u4F4D\\u4E8EB\\u5217\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"3. \\u7CFB\\u7EDF\\u5C06\\u81EA\\u52A8\\u9009\\u62E9\\u6700\\u4F73\\u62DF\\u5408\\u6A21\\u578B\\u8FDB\\u884C\\u9884\\u6D4B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"4. \\u751F\\u6210\\u9884\\u6D4B\\u7ED3\\u679C\\u540E\\u53EF\\u5BFC\\u51FA\\u5230Excel\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 565,\n    columnNumber: 5\n  }, this);\n};\n_s(TargetDataPrediction, \"X3Tk6W/Kg60baQKk/hw0xQuNfC4=\");\n_c = TargetDataPrediction;\nexport default TargetDataPrediction;\nvar _c;\n$RefreshReg$(_c, \"TargetDataPrediction\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","XLSX","performAllFittings","parseExcelData","jsxDEV","_jsxDEV","TargetDataPrediction","grayScaleData","brightnessBlocks","_s","_rawData$matrix$","_rawData$matrix$2","_rawData$matrix$3","_rawData$matrix$4","_rawData$matrix$5","rawData","setRawData","predictionResults","setPredictionResults","bestFittingResult","setBestFittingResult","isLoading","setIsLoading","error","setError","localGrayScaleData","setLocalGrayScaleData","localBrightnessBlocks","setLocalBrightnessBlocks","doubleClickedCell","setDoubleClickedCell","generationProgress","setGenerationProgress","isGenerating","setIsGenerating","cachedPredictionResults","setCachedPredictionResults","getTypeLabel","type","labels","numToCol","num","result","String","fromCharCode","Math","floor","handleFileUpload","event","_event$target$files","file","target","files","parsedData","grayScale","data","arrayBuffer","workbook","read","Uint8Array","SheetNames","includes","Error","worksheet","Sheets","values","positions","startRow","endRow","startCol","endCol","colToNum","col","i","length","charCodeAt","startColNum","endColNum","matrix","row","rowData","colNum","cellAddress","cell","v","undefined","value","parseFloat","toString","isNaN","push","setTimeout","generatePredictions","message","handleDoubleClick","rowIndex","colIndex","handleCloseDoubleClickCard","doubleClickPredictionContent","currentGrayScaleData","currentBrightnessBlocks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","cellIndex","cachedResult","rawValue","methodPredictions","predictions","Object","entries","toFixed","map","method","prediction","pred","predictedGrayScale","confidence","formula","Promise","resolve","centerPixelValues","block","centerPixelValue","grayScaleValues","allFittingResults","x","y","bestFitting","reduce","best","current","rSquared","totalValues","predictionCache","index","brightnessValue","forEach","fitting","a","b","coefficients","log","a_exp","b_exp","exp","a_poly","b_poly","c_poly","d_poly","pow","a_pow","b_pow","a_biv","b_biv","c_biv","fittingType","position","progress","err","console","exportToExcel","utils","book_new","rows","cols","colHeaders","originalMatrixData","originalWorksheet","aoa_to_sheet","book_append_sheet","allMethods","Set","keys","add","Array","from","methodMatrixData","dataIndex","methodWorksheet","detailData","detailWorksheet","fittingInfo","rmse","mae","maxError","fittingWs","Date","toISOString","slice","writeFile","accept","onChange","id","htmlFor","min","flat","max","style","width","onClick","height","_","textAnchor","minValue","maxValue","normalizedValue","blueIntensity","round","backgroundColor","textColor","fill","stroke","strokeWidth","onDoubleClick","transform","e","stopPropagation","_c","$RefreshReg$"],"sources":["D:/source/fitdata/fitdata-visualizer/src/components/TargetDataPrediction.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\nimport * as XLSX from 'xlsx';\nimport { FittingResult, performAllFittings } from '../utils/curveFitting';\nimport { parseExcelData } from '../utils/dataParser';\n\ninterface RawData {\n  values: number[];\n  positions: string[];\n  matrix: number[][];\n}\n\ninterface CachedPredictionResult {\n  rawValue: number;\n  methodPredictions: {\n    [key: string]: {\n      predictedGrayScale: number;\n      formula: string;\n      confidence: number;\n      fittingType: string;\n    }\n  };\n}\n\ninterface PredictionResult {\n  position: string;\n  brightnessValue: number;\n  predictions: {\n    [key: string]: {\n      predictedGrayScale: number;\n      formula: string;\n      confidence: number;\n      fittingType: string;\n    }\n  };\n}\n\ninterface TargetDataPredictionProps {\n  grayScaleData: {\n    values: number[];\n    positions: string[];\n  };\n  brightnessBlocks: Array<{\n    label: string;\n    startRow: number;\n    endRow: number;\n    data: number[][];\n    centerPixelValue: number;\n    normalizedData?: number[][];\n  }>;\n}\n\nconst TargetDataPrediction: React.FC<TargetDataPredictionProps> = ({ grayScaleData, brightnessBlocks }) => {\n  const [rawData, setRawData] = useState<RawData | null>(null);\n  const [predictionResults, setPredictionResults] = useState<PredictionResult[]>([]);\n  const [bestFittingResult, setBestFittingResult] = useState<FittingResult | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  // 本地状态用于存储从文件解析的数据\n  const [localGrayScaleData, setLocalGrayScaleData] = useState<{ values: number[]; positions: string[]; } | null>(null);\n  const [localBrightnessBlocks, setLocalBrightnessBlocks] = useState<Array<{ label: string; startRow: number; endRow: number; data: number[][]; centerPixelValue: number; normalizedData?: number[][]; }> | null>(null);\n\n  const [doubleClickedCell, setDoubleClickedCell] = useState<{ row: number; col: number } | null>(null);\n  const [generationProgress, setGenerationProgress] = useState<number>(0);\n  const [isGenerating, setIsGenerating] = useState<boolean>(false);\n  const [cachedPredictionResults, setCachedPredictionResults] = useState<CachedPredictionResult[] | null>(null);\n\n  // 获取拟合类型标签\n  const getTypeLabel = (type: string) => {\n    const labels: { [key: string]: string } = {\n      'logarithmic': '对数拟合',\n      'exponential': '指数拟合',\n      'polynomial': '三次多项式拟合',\n      'power': '幂函数拟合',\n      'bivariate': '二次多项式拟合'\n    };\n    return labels[type] || type;\n  };\n\n  // 将数字转换为Excel列名\n  const numToCol = (num: number): string => {\n    let result = '';\n    while (num > 0) {\n      num--;\n      result = String.fromCharCode(65 + (num % 26)) + result;\n      num = Math.floor(num / 26);\n    }\n    return result;\n  };\n\n  // 读取Excel Sheet3数据\n  const handleFileUpload = useCallback(async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // 清除缓存的预测结果\n      setCachedPredictionResults(null);\n      \n      // 使用parseExcelData解析完整数据\n      const parsedData = await parseExcelData(file);\n      \n      // 更新本地的grayScaleData和brightnessBlocks\n      setLocalGrayScaleData(parsedData.grayScale);\n      setLocalBrightnessBlocks(parsedData.brightnessBlocks);\n      \n      // 设置原始数据（从Sheet3读取）\n      const data = await file.arrayBuffer();\n      const workbook = XLSX.read(new Uint8Array(data), { type: 'array' });\n      \n      // 检查是否有Sheet3\n      if (!workbook.SheetNames.includes('Sheet3')) {\n        throw new Error('未找到Sheet3工作表');\n      }\n      \n      const worksheet = workbook.Sheets['Sheet3'];\n      const values: number[] = [];\n      const positions: string[] = [];\n      \n      // 读取A2-AF21范围的原始数据（20行×32列）\n      const startRow = 2;\n      const endRow = 21;\n      const startCol = 'A';\n      const endCol = 'AF';\n      \n      // 将列字母转换为数字\n      const colToNum = (col: string): number => {\n        let result = 0;\n        for (let i = 0; i < col.length; i++) {\n          result = result * 26 + (col.charCodeAt(i) - 'A'.charCodeAt(0) + 1);\n        }\n        return result;\n      };\n      \n      const numToCol = (num: number): string => {\n        let result = '';\n        while (num > 0) {\n          num--;\n          result = String.fromCharCode('A'.charCodeAt(0) + (num % 26)) + result;\n          num = Math.floor(num / 26);\n        }\n        return result;\n      };\n      \n      const startColNum = colToNum(startCol);\n      const endColNum = colToNum(endCol);\n      \n      // 创建矩阵结构\n      const matrix: number[][] = [];\n      \n      // 按行读取数据\n      for (let row = startRow; row <= endRow; row++) {\n        const rowData: number[] = [];\n        for (let colNum = startColNum; colNum <= endColNum; colNum++) {\n          const col = numToCol(colNum);\n          const cellAddress = `${col}${row}`;\n          const cell = worksheet[cellAddress];\n          \n          if (cell && cell.v !== undefined && cell.v !== null && cell.v !== '') {\n            const value = typeof cell.v === 'number' ? cell.v : parseFloat(cell.v.toString());\n            if (!isNaN(value)) {\n              values.push(value);\n              positions.push(cellAddress);\n              rowData.push(value);\n            } else {\n              rowData.push(0);\n            }\n          } else {\n            rowData.push(0);\n          }\n        }\n        matrix.push(rowData);\n      }\n      \n      if (values.length === 0) {\n        throw new Error('Sheet3中未找到有效的原始数据');\n      }\n      \n      setRawData({ values, positions, matrix });\n      \n      // 自动生成预测结果（延迟确保状态更新完成）\n      setTimeout(async () => {\n        await generatePredictions();\n      }, 100);\n    } catch (error) {\n      setError(error instanceof Error ? error.message : '文件读取失败');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n\n\n  // 处理双击事件\n  const handleDoubleClick = useCallback((rowIndex: number, colIndex: number) => {\n    // 如果没有缓存的预测结果，提示用户先生成预测数据\n    if (!cachedPredictionResults) {\n      setError('请先生成预测数据后再查看详细结果');\n      return;\n    }\n    setDoubleClickedCell({ row: rowIndex, col: colIndex });\n  }, [cachedPredictionResults]);\n\n  // 关闭双击卡片\n  const handleCloseDoubleClickCard = useCallback(() => {\n    setDoubleClickedCell(null);\n  }, []);\n\n  // 计算双击卡片的预测结果\n  const doubleClickPredictionContent = useMemo(() => {\n    // 使用本地数据（如果有）或传入的props数据\n    const currentGrayScaleData = localGrayScaleData || grayScaleData;\n    const currentBrightnessBlocks = localBrightnessBlocks || brightnessBlocks;\n    \n    if (!rawData || !currentGrayScaleData.values.length || !currentBrightnessBlocks.length || !doubleClickedCell) {\n      return <p className=\"text-gray-500\">预测数据尚未生成，请等待数据处理完成</p>;\n    }\n    \n    // 使用缓存的预测结果，如果没有缓存则返回提示\n    if (!cachedPredictionResults) {\n      return <p className=\"text-gray-500\">请先生成预测数据</p>;\n    }\n    \n    // 直接从缓存中读取该位置的预测结果\n    const cellIndex = doubleClickedCell.row * 32 + doubleClickedCell.col;\n    const cachedResult = cachedPredictionResults[cellIndex];\n    \n    if (!cachedResult) {\n      return <p className=\"text-gray-500\">该位置暂无有效拟合结果</p>;\n    }\n    \n    const { rawValue, methodPredictions } = cachedResult;\n    const predictions = Object.entries(methodPredictions);\n    \n    if (predictions.length === 0) {\n      return <p className=\"text-gray-500\">该位置暂无有效拟合结果</p>;\n    }\n    \n    return (\n      <div className=\"space-y-4\">\n        <div className=\"bg-gray-50 p-4 rounded-lg\">\n          <div className=\"text-sm mb-2\">\n            <span className=\"text-gray-600\">亮度值:</span>\n            <span className=\"ml-2 font-medium\">{rawValue.toFixed(2)}</span>\n          </div>\n        </div>\n        \n        <div className=\"space-y-3\">\n          <h6 className=\"font-medium text-gray-700\">所有拟合方法预测结果:</h6>\n          {predictions.map(([method, prediction]) => {\n            const pred = prediction as {\n              predictedGrayScale: number;\n              formula: string;\n              confidence: number;\n              fittingType: string;\n            };\n            return (\n              <div key={method} className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"font-medium text-gray-700\">\n                    {getTypeLabel(method)}\n                  </span>\n                  <span className=\"text-lg font-bold text-blue-600\">\n                    {pred.predictedGrayScale.toFixed(6)}\n                  </span>\n                </div>\n                <div className=\"text-sm text-gray-600 mb-2\">\n                  置信度(R²): <span className=\"font-medium\">{(pred.confidence * 100).toFixed(2)}%</span>\n                </div>\n                <div className=\"text-sm text-gray-500 font-mono bg-white p-2 rounded border\">\n                  {pred.formula}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }, [doubleClickedCell, cachedPredictionResults, localGrayScaleData, localBrightnessBlocks, grayScaleData, brightnessBlocks, rawData, getTypeLabel]);\n\n  // 生成预测结果\n  const generatePredictions = useCallback(async () => {\n    if (!rawData) {\n      setError('请先上传原始数据');\n      return;\n    }\n\n    // 使用本地数据（如果有）或传入的props数据\n    const currentGrayScaleData = localGrayScaleData || grayScaleData;\n    const currentBrightnessBlocks = localBrightnessBlocks || brightnessBlocks;\n\n    if (!currentGrayScaleData.values.length || !currentBrightnessBlocks.length) {\n      setError('无法获取有效的拟合数据');\n      return;\n    }\n\n    setIsGenerating(true);\n    setGenerationProgress(0);\n    setError(null);\n\n    try {\n      // 步骤1: 数据验证 (10%)\n      setGenerationProgress(10);\n      await new Promise(resolve => setTimeout(resolve, 100));\n\n      // 提取中心像素值和灰阶值\n      const centerPixelValues = currentBrightnessBlocks.map(block => block.centerPixelValue);\n      const grayScaleValues = currentGrayScaleData.values;\n\n      if (centerPixelValues.length !== grayScaleValues.length) {\n        setError('拟合数据长度不匹配');\n        return;\n      }\n\n      // 步骤2: 执行拟合算法 (30%)\n      setGenerationProgress(30);\n      await new Promise(resolve => setTimeout(resolve, 200));\n\n      const allFittingResults = performAllFittings({\n        x: centerPixelValues,\n        y: grayScaleValues\n      });\n\n      // 拟合结果已获取，继续处理预测\n\n      // 步骤3: 找到最佳拟合结果 (50%)\n      setGenerationProgress(50);\n      await new Promise(resolve => setTimeout(resolve, 100));\n\n      const bestFitting = allFittingResults.reduce((best, current) => {\n        if (isNaN(current.rSquared) || current.rSquared < 0) return best;\n        if (!best || current.rSquared > best.rSquared) return current;\n        return best;\n      }, null as FittingResult | null);\n\n      if (!bestFitting) {\n        setError('无法获取有效的拟合结果');\n        return;\n      }\n\n      setBestFittingResult(bestFitting);\n\n      // 步骤4: 计算预测结果 (80%)\n      setGenerationProgress(80);\n      await new Promise(resolve => setTimeout(resolve, 300));\n\n      const totalValues = rawData.values.length;\n      const predictions: PredictionResult[] = [];\n      const predictionCache: CachedPredictionResult[] = [];\n\n      for (let index = 0; index < totalValues; index++) {\n        const rawValue = rawData.values[index];\n        // 计算对应的亮度值\n        let brightnessValue = rawValue; // 使用原始数据值作为亮度值\n\n        // 为每种拟合方法计算预测值\n        const methodPredictions: { [key: string]: { predictedGrayScale: number; formula: string; confidence: number; fittingType: string } } = {};\n        \n        allFittingResults.forEach(fitting => {\n          if (isNaN(fitting.rSquared) || fitting.rSquared < 0) return;\n          \n          let predictedGrayScale = 0;\n          \n          // 根据拟合类型计算预测值\n          switch (fitting.type) {\n            case 'logarithmic':\n              if (rawValue > 0) {\n                const [a, b] = fitting.coefficients;\n                predictedGrayScale = a * Math.log(rawValue) + b;\n              }\n              break;\n            case 'exponential':\n              const [a_exp, b_exp] = fitting.coefficients;\n              predictedGrayScale = a_exp * Math.exp(b_exp * rawValue);\n              break;\n            case 'polynomial':\n              const [a_poly, b_poly, c_poly, d_poly] = fitting.coefficients;\n              predictedGrayScale = a_poly * Math.pow(rawValue, 3) + \n                                  b_poly * Math.pow(rawValue, 2) + \n                                  c_poly * rawValue + d_poly;\n              break;\n            case 'power':\n              if (rawValue > 0) {\n                const [a_pow, b_pow] = fitting.coefficients;\n                predictedGrayScale = a_pow * Math.pow(rawValue, b_pow);\n              }\n              break;\n            case 'bivariate':\n              const [a_biv, b_biv, c_biv] = fitting.coefficients;\n              predictedGrayScale = a_biv * Math.pow(rawValue, 2) + \n                                  b_biv * rawValue + c_biv;\n              break;\n          }\n\n          methodPredictions[fitting.type] = {\n            predictedGrayScale,\n            formula: fitting.formula,\n            confidence: fitting.rSquared,\n            fittingType: fitting.type\n          };\n        });\n\n        predictions.push({\n          position: rawData.positions[index],\n          brightnessValue,\n          predictions: methodPredictions\n        });\n\n        // 缓存该位置的预测结果供双击功能使用\n        predictionCache.push({\n          rawValue,\n          methodPredictions\n        });\n\n        // 更新进度 (80% - 95%)\n        const progress = 80 + Math.floor((index / totalValues) * 15);\n        setGenerationProgress(progress);\n        \n        // 每处理100个数据点暂停一下，让UI更新\n        if (index % 100 === 0) {\n          await new Promise(resolve => setTimeout(resolve, 10));\n        }\n      }\n\n      // 缓存预测结果\n      setCachedPredictionResults(predictionCache);\n\n      // 步骤5: 完成 (100%)\n      setGenerationProgress(100);\n      await new Promise(resolve => setTimeout(resolve, 200));\n\n      setPredictionResults(predictions);\n      setError(null);\n    } catch (err) {\n      console.error('预测生成错误:', err);\n      setError(err instanceof Error ? err.message : '预测生成失败');\n    } finally {\n      setIsGenerating(false);\n      setGenerationProgress(0);\n    }\n  }, [rawData, grayScaleData, brightnessBlocks, localGrayScaleData, localBrightnessBlocks, getTypeLabel]);\n\n  // 导出预测结果到Excel\n  const exportToExcel = useCallback(() => {\n    if (predictionResults.length === 0 || !rawData) {\n      setError('没有预测结果可导出');\n      return;\n    }\n\n    const workbook = XLSX.utils.book_new();\n    \n    // 创建矩阵格式的预测结果工作表\n    const rows = 20; // A2-AF21 共20行\n    const cols = 32; // A-AF 共32列\n    \n    // 将列数字转换为字母的辅助函数\n    const numToCol = (num: number): string => {\n      let result = '';\n      while (num > 0) {\n        num--;\n        result = String.fromCharCode('A'.charCodeAt(0) + (num % 26)) + result;\n        num = Math.floor(num / 26);\n      }\n      return result;\n    };\n    \n    // 创建列标题 (A-AF)\n    const colHeaders: string[] = [];\n    for (let i = 0; i < cols; i++) {\n      colHeaders.push(numToCol(i + 1));\n    }\n    \n    // 创建原始数据矩阵工作表\n    const originalMatrixData = [];\n    originalMatrixData.push(['', ...colHeaders]);\n    \n    for (let row = 0; row < rows; row++) {\n      const rowData: (string | number)[] = [row + 2]; // 行号从2开始\n      for (let col = 0; col < cols; col++) {\n        if (row < rawData.matrix.length && col < rawData.matrix[row].length) {\n          rowData.push(rawData.matrix[row][col]);\n        } else {\n          rowData.push('');\n        }\n      }\n      originalMatrixData.push(rowData);\n    }\n    \n    const originalWorksheet = XLSX.utils.aoa_to_sheet(originalMatrixData);\n    XLSX.utils.book_append_sheet(workbook, originalWorksheet, '原始数据');\n    \n    // 获取所有拟合方法\n    const allMethods = new Set<string>();\n    predictionResults.forEach(result => {\n      Object.keys(result.predictions).forEach(method => allMethods.add(method));\n    });\n    \n    // 为每种拟合方法创建单独的预测结果矩阵\n    Array.from(allMethods).forEach(method => {\n      const methodMatrixData: (string | number)[][] = [];\n      methodMatrixData.push(['', ...colHeaders]);\n      \n      for (let row = 0; row < rows; row++) {\n        const rowData: (string | number)[] = [row + 2]; // 行号从2开始\n        for (let col = 0; col < cols; col++) {\n          const dataIndex = row * cols + col;\n          if (dataIndex < predictionResults.length && predictionResults[dataIndex].predictions[method]) {\n            rowData.push(parseFloat(predictionResults[dataIndex].predictions[method].predictedGrayScale.toFixed(6)));\n          } else {\n            rowData.push('');\n          }\n        }\n        methodMatrixData.push(rowData);\n      }\n      \n      const methodWorksheet = XLSX.utils.aoa_to_sheet(methodMatrixData);\n      XLSX.utils.book_append_sheet(workbook, methodWorksheet, getTypeLabel(method));\n    });\n    \n    // 创建详细预测结果工作表\n    const detailData: any[] = [];\n    detailData.push(['位置', '亮度值', '拟合方法', '预测灰阶值', '置信度(R²)', '拟合公式']);\n    \n    predictionResults.forEach(result => {\n      Object.entries(result.predictions).forEach(([method, prediction]) => {\n        detailData.push([\n          result.position,\n          result.brightnessValue.toFixed(2),\n          getTypeLabel(method),\n          prediction.predictedGrayScale.toFixed(6),\n          prediction.confidence.toFixed(6),\n          prediction.formula\n        ]);\n      });\n    });\n    \n    const detailWorksheet = XLSX.utils.aoa_to_sheet(detailData);\n    XLSX.utils.book_append_sheet(workbook, detailWorksheet, '详细结果');\n    \n    // 添加拟合信息工作表\n    if (bestFittingResult) {\n      const fittingInfo = [\n        ['拟合信息', ''],\n        ['最佳拟合类型', getTypeLabel(bestFittingResult.type)],\n        ['拟合公式', bestFittingResult.formula],\n        ['R²值', bestFittingResult.rSquared.toFixed(6)],\n        ['RMSE', bestFittingResult.rmse.toFixed(6)],\n        ['MAE', bestFittingResult.mae.toFixed(6)],\n        ['最大误差', bestFittingResult.maxError.toFixed(6)]\n      ];\n      \n      const fittingWs = XLSX.utils.aoa_to_sheet(fittingInfo);\n      XLSX.utils.book_append_sheet(workbook, fittingWs, '拟合信息');\n    }\n    \n    // 下载文件\n    const fileName = `原始数据预测结果_${new Date().toISOString().slice(0, 10)}.xlsx`;\n    XLSX.writeFile(workbook, fileName);\n  }, [predictionResults, bestFittingResult, rawData]);\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <h3 className=\"text-lg font-semibold mb-6\">原始数据预测</h3>\n      \n      {/* 文件上传区域 */}\n      <div className=\"mb-6\">\n        <h4 className=\"font-medium mb-3\">上传原始数据文件 (Sheet3)</h4>\n        <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\n          <input\n            type=\"file\"\n            accept=\".xlsx,.xls\"\n            onChange={handleFileUpload}\n            className=\"hidden\"\n            id=\"raw-file-upload\"\n          />\n          <label\n            htmlFor=\"raw-file-upload\"\n            className=\"cursor-pointer inline-flex items-center px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\"\n          >\n            选择Excel文件\n          </label>\n          <p className=\"mt-2 text-sm text-gray-500\">\n            请选择包含Sheet3工作表的Excel文件，原始数据应位于A2-AF21范围\n          </p>\n        </div>\n      </div>\n\n      {/* 加载状态 */}\n      {isLoading && (\n        <div className=\"mb-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n          <p className=\"text-blue-700\">正在读取文件...</p>\n        </div>\n      )}\n\n      {/* 错误信息 */}\n      {error && (\n        <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <p className=\"text-red-700\">{error}</p>\n        </div>\n      )}\n\n      {/* 原始数据概览 */}\n      {rawData && (\n        <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n          <h4 className=\"font-medium mb-2\">原始数据概览</h4>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">矩阵维度:</span>\n              <span className=\"ml-2 font-medium\">{rawData.matrix.length} × {rawData.matrix[0]?.length || 0}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">数值范围:</span>\n              <span className=\"ml-2 font-medium\">\n                {Math.min(...rawData.matrix.flat()).toFixed(2)} - {Math.max(...rawData.matrix.flat()).toFixed(2)}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 预测生成进度 */}\n      {isGenerating && (\n        <div className=\"mb-6 bg-blue-50 p-4 rounded-lg border border-blue-200\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <h4 className=\"font-medium text-blue-800\">正在生成预测数据...</h4>\n            <span className=\"text-sm font-medium text-blue-600\">{generationProgress}%</span>\n          </div>\n          <div className=\"w-full bg-blue-200 rounded-full h-3\">\n            <div \n              className=\"bg-blue-600 h-3 rounded-full transition-all duration-300 ease-out\"\n              style={{ width: `${generationProgress}%` }}\n            ></div>\n          </div>\n          <div className=\"mt-2 text-sm text-blue-700\">\n            {generationProgress <= 10 && '正在验证数据...'}\n            {generationProgress > 10 && generationProgress <= 30 && '正在执行拟合算法...'}\n            {generationProgress > 30 && generationProgress <= 50 && '正在分析最佳拟合结果...'}\n            {generationProgress > 50 && generationProgress <= 95 && '正在计算预测结果...'}\n            {generationProgress > 95 && '即将完成...'}\n          </div>\n        </div>\n      )}\n\n      {/* 生成预测按钮 */}\n      {rawData && ((localGrayScaleData && localBrightnessBlocks) || (grayScaleData.values.length > 0 && brightnessBlocks.length > 0)) && (\n        <div className=\"mb-6\">\n          <button\n            onClick={generatePredictions}\n            className=\"px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\"\n          >\n            生成预测结果\n          </button>\n        </div>\n      )}\n\n      {/* 最佳拟合信息 */}\n      {bestFittingResult && (\n        <div className=\"mb-6 p-4 bg-blue-50 rounded-lg\">\n          <h4 className=\"font-medium mb-2\">使用的最佳拟合模型</h4>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">拟合类型：</span>\n              <span className=\"font-medium\">{getTypeLabel(bestFittingResult.type)}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">R²值：</span>\n              <span className=\"font-medium\">{bestFittingResult.rSquared.toFixed(6)}</span>\n            </div>\n            <div className=\"col-span-2\">\n              <span className=\"text-gray-600\">拟合公式：</span>\n              <span className=\"font-medium font-mono\">{bestFittingResult.formula}</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 原始数据热力图 */}\n      {rawData && (\n        <div className=\"mb-6\">\n          <h4 className=\"font-medium mb-3\">原始数据热力图</h4>\n          <p className=\"text-sm text-gray-600 mb-2\">\n            双击任意像素位置查看该位置的拟合结果\n          </p>\n          \n          {/* SVG热力图 */}\n          <div className=\"bg-white p-4 rounded-lg border border-gray-200 overflow-x-auto\">\n            <div className=\"inline-block\">\n              <svg \n                width={`${(rawData.matrix[0]?.length || 32) * 24 + 60}`} \n                height={`${rawData.matrix.length * 24 + 60}`} \n                className=\"bg-white\"\n              >\n                {/* 列标识 (顶部) */}\n                {Array.from({ length: rawData.matrix[0]?.length || 32 }, (_, colIndex) => (\n                  <text\n                    key={`col-label-${colIndex}`}\n                    x={30 + colIndex * 24 + 12}\n                    y={15}\n                    textAnchor=\"middle\"\n                    className=\"text-xs fill-gray-600 font-mono\"\n                  >\n                    {colIndex}\n                  </text>\n                ))}\n                \n                {/* 行标识 (左侧) */}\n                {rawData.matrix.map((_, rowIndex) => (\n                  <text\n                    key={`row-label-${rowIndex}`}\n                    x={15}\n                    y={30 + rowIndex * 24 + 16}\n                    textAnchor=\"middle\"\n                    className=\"text-xs fill-gray-600 font-mono\"\n                  >\n                    {rowIndex}\n                  </text>\n                ))}\n                \n                {/* 热力图数据 */}\n                {rawData.matrix.map((row, rowIndex) =>\n                  row.map((value, colIndex) => {\n                    const minValue = Math.min(...rawData.matrix.flat());\n                    const maxValue = Math.max(...rawData.matrix.flat());\n                    const normalizedValue = (value - minValue) / (maxValue - minValue);\n                    \n                    // 使用蓝色渐变色彩映射\n                    const blueIntensity = Math.round(normalizedValue * 200 + 55); // 55-255范围\n                    const backgroundColor = `rgb(${255 - blueIntensity}, ${255 - blueIntensity}, 255)`;\n                    \n                    // 根据背景色调整文字颜色\n                    const textColor = normalizedValue > 0.5 ? 'white' : 'black';\n                    \n                    return (\n                      <g key={`${rowIndex}-${colIndex}`}>\n                        <rect\n                          x={30 + colIndex * 24}\n                          y={30 + rowIndex * 24}\n                          width=\"24\"\n                          height=\"24\"\n                          fill={backgroundColor}\n                          stroke=\"#e5e7eb\"\n                          strokeWidth=\"0.5\"\n                          className=\"cursor-pointer hover:stroke-2 hover:stroke-blue-500\"\n                          onDoubleClick={() => handleDoubleClick(rowIndex, colIndex)}\n                        />\n                        <text\n                          x={30 + colIndex * 24 + 12}\n                          y={30 + rowIndex * 24 + 16}\n                          textAnchor=\"middle\"\n                          className=\"text-xs font-medium pointer-events-none\"\n                          fill={textColor}\n                        >\n                          {value.toFixed(1)}\n                        </text>\n                        <title>{`位置: ${numToCol(colIndex + 1)}${rowIndex + 2}, 值: ${value.toFixed(2)}`}</title>\n                      </g>\n                    );\n                  })\n                )}\n                \n                {/* 坐标轴标签 */}\n                <text \n                  x={`${((rawData.matrix[0]?.length || 32) * 24 + 60) / 2}`} \n                  y={`${rawData.matrix.length * 24 + 50}`} \n                  textAnchor=\"middle\" \n                  className=\"text-sm fill-gray-700 font-medium\"\n                >\n                  列索引 (0-{(rawData.matrix[0]?.length || 32) - 1})\n                </text>\n                <text \n                  x=\"15\" \n                  y={`${(rawData.matrix.length * 24 + 60) / 2}`} \n                  textAnchor=\"middle\" \n                  className=\"text-sm fill-gray-700 font-medium\" \n                  transform={`rotate(-90 15 ${(rawData.matrix.length * 24 + 60) / 2})`}\n                >\n                  行索引 (0-{rawData.matrix.length - 1})\n                </text>\n              </svg>\n            </div>\n          </div>\n          \n          {/* 颜色图例 */}\n          <div className=\"mt-4 flex items-center gap-4\">\n            <span className=\"text-sm text-gray-600\">颜色图例:</span>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-4 h-4 bg-blue-900 border border-gray-300\"></div>\n              <span className=\"text-xs text-gray-600\">高值</span>\n              <div className=\"w-20 h-4 bg-gradient-to-r from-blue-900 via-blue-400 to-blue-100 border border-gray-300\"></div>\n              <div className=\"w-4 h-4 bg-blue-100 border border-gray-300\"></div>\n              <span className=\"text-xs text-gray-600\">低值</span>\n            </div>\n            <div className=\"text-xs text-gray-500\">\n              范围: {Math.min(...rawData.matrix.flat()).toFixed(2)} - {Math.max(...rawData.matrix.flat()).toFixed(2)}\n            </div>\n          </div>\n\n          \n          {/* 双击拟合结果卡片 */}\n          {doubleClickedCell && (\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\" onClick={handleCloseDoubleClickCard}>\n              <div className=\"bg-white rounded-lg p-6 max-w-2xl w-full mx-4 max-h-[80vh] overflow-y-auto\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h5 className=\"text-lg font-semibold\">位置 {numToCol(doubleClickedCell.col + 1)}{doubleClickedCell.row + 2} 详细拟合结果</h5>\n                  <button\n                    onClick={handleCloseDoubleClickCard}\n                    className=\"text-gray-500 hover:text-gray-700 text-2xl font-bold leading-none\"\n                    aria-label=\"关闭\"\n                  >\n                    ×\n                  </button>\n                </div>\n                {doubleClickPredictionContent}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* 预测结果 */}\n      {predictionResults.length > 0 && (\n        <div className=\"mb-6\">\n          <div className=\"flex justify-between items-center mb-3\">\n            <h4 className=\"font-medium\">预测结果</h4>\n            <button\n              onClick={exportToExcel}\n              className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm\"\n            >\n              导出到Excel\n            </button>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n            {predictionResults.map((result, index) => (\n              <div key={index} className=\"bg-gradient-to-br from-blue-50 to-indigo-100 p-4 rounded-lg border border-blue-200 hover:shadow-md transition-shadow\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm font-medium text-gray-600\">位置: {result.position}</span>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-gray-600\">亮度值:</span>\n                    <span className=\"text-sm font-medium\">{result.brightnessValue.toFixed(2)}</span>\n                  </div>\n                  \n                  {/* 显示所有拟合方法的预测结果 */}\n                  <div className=\"mt-3 pt-2 border-t border-blue-200\">\n                    <div className=\"text-xs font-medium text-gray-700 mb-2\">各拟合方法预测值:</div>\n                    <div className=\"space-y-2\">\n                      {Object.entries(result.predictions).map(([method, prediction]) => (\n                        <div key={method} className=\"bg-white rounded p-2 border\">\n                          <div className=\"flex justify-between items-center mb-1\">\n                            <span className=\"text-xs font-medium text-gray-600\">\n                              {getTypeLabel(method)}\n                            </span>\n                            <span className=\"text-xs text-blue-600 font-medium\">\n                              {prediction.predictedGrayScale.toFixed(4)}\n                            </span>\n                          </div>\n                          <div className=\"text-xs text-gray-500 mb-1\">\n                            置信度: {(prediction.confidence * 100).toFixed(1)}%\n                          </div>\n                          <div className=\"text-xs text-gray-400 break-all font-mono\">\n                            {prediction.formula}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          {/* 统计信息 */}\n          <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n            <h5 className=\"font-medium mb-2\">预测统计</h5>\n            <div className=\"grid grid-cols-3 gap-4 text-sm\">\n              <div>\n                <span className=\"text-gray-600\">预测数据点：</span>\n                <span className=\"font-medium\">{predictionResults.length}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">拟合方法数：</span>\n                <span className=\"font-medium\">\n                  {predictionResults.length > 0 ? Object.keys(predictionResults[0].predictions).length : 0}\n                </span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">最佳拟合：</span>\n                <span className=\"font-medium\">\n                  {bestFittingResult ? getTypeLabel(bestFittingResult.type) : 'N/A'}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 使用说明 */}\n      {!rawData && (\n        <div className=\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n          <h4 className=\"font-medium mb-2 text-yellow-800\">使用说明</h4>\n          <ul className=\"text-sm text-yellow-700 space-y-1\">\n            <li>1. 首先确保已上传并处理了原始数据文件</li>\n            <li>2. 上传包含Sheet3工作表的Excel文件，目标数据应位于B列</li>\n            <li>3. 系统将自动选择最佳拟合模型进行预测</li>\n            <li>4. 生成预测结果后可导出到Excel文件</li>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TargetDataPrediction;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAC7D,OAAO,KAAKC,IAAI,MAAM,MAAM;AAC5B,SAAwBC,kBAAkB,QAAQ,uBAAuB;AACzE,SAASC,cAAc,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAgDrD,MAAMC,oBAAyD,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,gBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA;EACzG,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAiB,IAAI,CAAC;EAC5D,MAAM,CAACmB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAAqB,EAAE,CAAC;EAClF,MAAM,CAACqB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtB,QAAQ,CAAuB,IAAI,CAAC;EACtF,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAgB,IAAI,CAAC;;EAEvD;EACA,MAAM,CAAC2B,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG5B,QAAQ,CAAoD,IAAI,CAAC;EACrH,MAAM,CAAC6B,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG9B,QAAQ,CAA8I,IAAI,CAAC;EAErN,MAAM,CAAC+B,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhC,QAAQ,CAAsC,IAAI,CAAC;EACrG,MAAM,CAACiC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGlC,QAAQ,CAAS,CAAC,CAAC;EACvE,MAAM,CAACmC,YAAY,EAAEC,eAAe,CAAC,GAAGpC,QAAQ,CAAU,KAAK,CAAC;EAChE,MAAM,CAACqC,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGtC,QAAQ,CAAkC,IAAI,CAAC;;EAE7G;EACA,MAAMuC,YAAY,GAAIC,IAAY,IAAK;IACrC,MAAMC,MAAiC,GAAG;MACxC,aAAa,EAAE,MAAM;MACrB,aAAa,EAAE,MAAM;MACrB,YAAY,EAAE,SAAS;MACvB,OAAO,EAAE,OAAO;MAChB,WAAW,EAAE;IACf,CAAC;IACD,OAAOA,MAAM,CAACD,IAAI,CAAC,IAAIA,IAAI;EAC7B,CAAC;;EAED;EACA,MAAME,QAAQ,GAAIC,GAAW,IAAa;IACxC,IAAIC,MAAM,GAAG,EAAE;IACf,OAAOD,GAAG,GAAG,CAAC,EAAE;MACdA,GAAG,EAAE;MACLC,MAAM,GAAGC,MAAM,CAACC,YAAY,CAAC,EAAE,GAAIH,GAAG,GAAG,EAAG,CAAC,GAAGC,MAAM;MACtDD,GAAG,GAAGI,IAAI,CAACC,KAAK,CAACL,GAAG,GAAG,EAAE,CAAC;IAC5B;IACA,OAAOC,MAAM;EACf,CAAC;;EAED;EACA,MAAMK,gBAAgB,GAAGhD,WAAW,CAAC,MAAOiD,KAA0C,IAAK;IAAA,IAAAC,mBAAA;IACzF,MAAMC,IAAI,IAAAD,mBAAA,GAAGD,KAAK,CAACG,MAAM,CAACC,KAAK,cAAAH,mBAAA,uBAAlBA,mBAAA,CAAqB,CAAC,CAAC;IACpC,IAAI,CAACC,IAAI,EAAE;IAEX5B,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF;MACAY,0BAA0B,CAAC,IAAI,CAAC;;MAEhC;MACA,MAAMiB,UAAU,GAAG,MAAMlD,cAAc,CAAC+C,IAAI,CAAC;;MAE7C;MACAxB,qBAAqB,CAAC2B,UAAU,CAACC,SAAS,CAAC;MAC3C1B,wBAAwB,CAACyB,UAAU,CAAC7C,gBAAgB,CAAC;;MAErD;MACA,MAAM+C,IAAI,GAAG,MAAML,IAAI,CAACM,WAAW,CAAC,CAAC;MACrC,MAAMC,QAAQ,GAAGxD,IAAI,CAACyD,IAAI,CAAC,IAAIC,UAAU,CAACJ,IAAI,CAAC,EAAE;QAAEjB,IAAI,EAAE;MAAQ,CAAC,CAAC;;MAEnE;MACA,IAAI,CAACmB,QAAQ,CAACG,UAAU,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAC3C,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;MACjC;MAEA,MAAMC,SAAS,GAAGN,QAAQ,CAACO,MAAM,CAAC,QAAQ,CAAC;MAC3C,MAAMC,MAAgB,GAAG,EAAE;MAC3B,MAAMC,SAAmB,GAAG,EAAE;;MAE9B;MACA,MAAMC,QAAQ,GAAG,CAAC;MAClB,MAAMC,MAAM,GAAG,EAAE;MACjB,MAAMC,QAAQ,GAAG,GAAG;MACpB,MAAMC,MAAM,GAAG,IAAI;;MAEnB;MACA,MAAMC,QAAQ,GAAIC,GAAW,IAAa;QACxC,IAAI9B,MAAM,GAAG,CAAC;QACd,KAAK,IAAI+B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,GAAG,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;UACnC/B,MAAM,GAAGA,MAAM,GAAG,EAAE,IAAI8B,GAAG,CAACG,UAAU,CAACF,CAAC,CAAC,GAAG,GAAG,CAACE,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACpE;QACA,OAAOjC,MAAM;MACf,CAAC;MAED,MAAMF,QAAQ,GAAIC,GAAW,IAAa;QACxC,IAAIC,MAAM,GAAG,EAAE;QACf,OAAOD,GAAG,GAAG,CAAC,EAAE;UACdA,GAAG,EAAE;UACLC,MAAM,GAAGC,MAAM,CAACC,YAAY,CAAC,GAAG,CAAC+B,UAAU,CAAC,CAAC,CAAC,GAAIlC,GAAG,GAAG,EAAG,CAAC,GAAGC,MAAM;UACrED,GAAG,GAAGI,IAAI,CAACC,KAAK,CAACL,GAAG,GAAG,EAAE,CAAC;QAC5B;QACA,OAAOC,MAAM;MACf,CAAC;MAED,MAAMkC,WAAW,GAAGL,QAAQ,CAACF,QAAQ,CAAC;MACtC,MAAMQ,SAAS,GAAGN,QAAQ,CAACD,MAAM,CAAC;;MAElC;MACA,MAAMQ,MAAkB,GAAG,EAAE;;MAE7B;MACA,KAAK,IAAIC,GAAG,GAAGZ,QAAQ,EAAEY,GAAG,IAAIX,MAAM,EAAEW,GAAG,EAAE,EAAE;QAC7C,MAAMC,OAAiB,GAAG,EAAE;QAC5B,KAAK,IAAIC,MAAM,GAAGL,WAAW,EAAEK,MAAM,IAAIJ,SAAS,EAAEI,MAAM,EAAE,EAAE;UAC5D,MAAMT,GAAG,GAAGhC,QAAQ,CAACyC,MAAM,CAAC;UAC5B,MAAMC,WAAW,GAAG,GAAGV,GAAG,GAAGO,GAAG,EAAE;UAClC,MAAMI,IAAI,GAAGpB,SAAS,CAACmB,WAAW,CAAC;UAEnC,IAAIC,IAAI,IAAIA,IAAI,CAACC,CAAC,KAAKC,SAAS,IAAIF,IAAI,CAACC,CAAC,KAAK,IAAI,IAAID,IAAI,CAACC,CAAC,KAAK,EAAE,EAAE;YACpE,MAAME,KAAK,GAAG,OAAOH,IAAI,CAACC,CAAC,KAAK,QAAQ,GAAGD,IAAI,CAACC,CAAC,GAAGG,UAAU,CAACJ,IAAI,CAACC,CAAC,CAACI,QAAQ,CAAC,CAAC,CAAC;YACjF,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC,EAAE;cACjBrB,MAAM,CAACyB,IAAI,CAACJ,KAAK,CAAC;cAClBpB,SAAS,CAACwB,IAAI,CAACR,WAAW,CAAC;cAC3BF,OAAO,CAACU,IAAI,CAACJ,KAAK,CAAC;YACrB,CAAC,MAAM;cACLN,OAAO,CAACU,IAAI,CAAC,CAAC,CAAC;YACjB;UACF,CAAC,MAAM;YACLV,OAAO,CAACU,IAAI,CAAC,CAAC,CAAC;UACjB;QACF;QACAZ,MAAM,CAACY,IAAI,CAACV,OAAO,CAAC;MACtB;MAEA,IAAIf,MAAM,CAACS,MAAM,KAAK,CAAC,EAAE;QACvB,MAAM,IAAIZ,KAAK,CAAC,mBAAmB,CAAC;MACtC;MAEA9C,UAAU,CAAC;QAAEiD,MAAM;QAAEC,SAAS;QAAEY;MAAO,CAAC,CAAC;;MAEzC;MACAa,UAAU,CAAC,YAAY;QACrB,MAAMC,mBAAmB,CAAC,CAAC;MAC7B,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,CAAC,OAAOrE,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,YAAYuC,KAAK,GAAGvC,KAAK,CAACsE,OAAO,GAAG,QAAQ,CAAC;IAC7D,CAAC,SAAS;MACRvE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;;EAIN;EACA,MAAMwE,iBAAiB,GAAG/F,WAAW,CAAC,CAACgG,QAAgB,EAAEC,QAAgB,KAAK;IAC5E;IACA,IAAI,CAAC7D,uBAAuB,EAAE;MAC5BX,QAAQ,CAAC,kBAAkB,CAAC;MAC5B;IACF;IACAM,oBAAoB,CAAC;MAAEiD,GAAG,EAAEgB,QAAQ;MAAEvB,GAAG,EAAEwB;IAAS,CAAC,CAAC;EACxD,CAAC,EAAE,CAAC7D,uBAAuB,CAAC,CAAC;;EAE7B;EACA,MAAM8D,0BAA0B,GAAGlG,WAAW,CAAC,MAAM;IACnD+B,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMoE,4BAA4B,GAAGlG,OAAO,CAAC,MAAM;IACjD;IACA,MAAMmG,oBAAoB,GAAG1E,kBAAkB,IAAIlB,aAAa;IAChE,MAAM6F,uBAAuB,GAAGzE,qBAAqB,IAAInB,gBAAgB;IAEzE,IAAI,CAACO,OAAO,IAAI,CAACoF,oBAAoB,CAAClC,MAAM,CAACS,MAAM,IAAI,CAAC0B,uBAAuB,CAAC1B,MAAM,IAAI,CAAC7C,iBAAiB,EAAE;MAC5G,oBAAOxB,OAAA;QAAGgG,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAC5D;;IAEA;IACA,IAAI,CAACvE,uBAAuB,EAAE;MAC5B,oBAAO9B,OAAA;QAAGgG,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAClD;;IAEA;IACA,MAAMC,SAAS,GAAG9E,iBAAiB,CAACkD,GAAG,GAAG,EAAE,GAAGlD,iBAAiB,CAAC2C,GAAG;IACpE,MAAMoC,YAAY,GAAGzE,uBAAuB,CAACwE,SAAS,CAAC;IAEvD,IAAI,CAACC,YAAY,EAAE;MACjB,oBAAOvG,OAAA;QAAGgG,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IACrD;IAEA,MAAM;MAAEG,QAAQ;MAAEC;IAAkB,CAAC,GAAGF,YAAY;IACpD,MAAMG,WAAW,GAAGC,MAAM,CAACC,OAAO,CAACH,iBAAiB,CAAC;IAErD,IAAIC,WAAW,CAACrC,MAAM,KAAK,CAAC,EAAE;MAC5B,oBAAOrE,OAAA;QAAGgG,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IACrD;IAEA,oBACErG,OAAA;MAAKgG,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBjG,OAAA;QAAKgG,SAAS,EAAC,2BAA2B;QAAAC,QAAA,eACxCjG,OAAA;UAAKgG,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BjG,OAAA;YAAMgG,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC3CrG,OAAA;YAAMgG,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAEO,QAAQ,CAACK,OAAO,CAAC,CAAC;UAAC;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENrG,OAAA;QAAKgG,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBjG,OAAA;UAAIgG,SAAS,EAAC,2BAA2B;UAAAC,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACzDK,WAAW,CAACI,GAAG,CAAC,CAAC,CAACC,MAAM,EAAEC,UAAU,CAAC,KAAK;UACzC,MAAMC,IAAI,GAAGD,UAKZ;UACD,oBACEhH,OAAA;YAAkBgG,SAAS,EAAC,kDAAkD;YAAAC,QAAA,gBAC5EjG,OAAA;cAAKgG,SAAS,EAAC,wCAAwC;cAAAC,QAAA,gBACrDjG,OAAA;gBAAMgG,SAAS,EAAC,2BAA2B;gBAAAC,QAAA,EACxCjE,YAAY,CAAC+E,MAAM;cAAC;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjB,CAAC,eACPrG,OAAA;gBAAMgG,SAAS,EAAC,iCAAiC;gBAAAC,QAAA,EAC9CgB,IAAI,CAACC,kBAAkB,CAACL,OAAO,CAAC,CAAC;cAAC;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACNrG,OAAA;cAAKgG,SAAS,EAAC,4BAA4B;cAAAC,QAAA,GAAC,6BACjC,eAAAjG,OAAA;gBAAMgG,SAAS,EAAC,aAAa;gBAAAC,QAAA,GAAE,CAACgB,IAAI,CAACE,UAAU,GAAG,GAAG,EAAEN,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;cAAA;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChF,CAAC,eACNrG,OAAA;cAAKgG,SAAS,EAAC,6DAA6D;cAAAC,QAAA,EACzEgB,IAAI,CAACG;YAAO;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC;UAAA,GAdEU,MAAM;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAeX,CAAC;QAEV,CAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC,EAAE,CAAC7E,iBAAiB,EAAEM,uBAAuB,EAAEV,kBAAkB,EAAEE,qBAAqB,EAAEpB,aAAa,EAAEC,gBAAgB,EAAEO,OAAO,EAAEsB,YAAY,CAAC,CAAC;;EAEnJ;EACA,MAAMuD,mBAAmB,GAAG7F,WAAW,CAAC,YAAY;IAClD,IAAI,CAACgB,OAAO,EAAE;MACZS,QAAQ,CAAC,UAAU,CAAC;MACpB;IACF;;IAEA;IACA,MAAM2E,oBAAoB,GAAG1E,kBAAkB,IAAIlB,aAAa;IAChE,MAAM6F,uBAAuB,GAAGzE,qBAAqB,IAAInB,gBAAgB;IAEzE,IAAI,CAAC2F,oBAAoB,CAAClC,MAAM,CAACS,MAAM,IAAI,CAAC0B,uBAAuB,CAAC1B,MAAM,EAAE;MAC1ElD,QAAQ,CAAC,aAAa,CAAC;MACvB;IACF;IAEAU,eAAe,CAAC,IAAI,CAAC;IACrBF,qBAAqB,CAAC,CAAC,CAAC;IACxBR,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF;MACAQ,qBAAqB,CAAC,EAAE,CAAC;MACzB,MAAM,IAAI0F,OAAO,CAACC,OAAO,IAAIhC,UAAU,CAACgC,OAAO,EAAE,GAAG,CAAC,CAAC;;MAEtD;MACA,MAAMC,iBAAiB,GAAGxB,uBAAuB,CAACe,GAAG,CAACU,KAAK,IAAIA,KAAK,CAACC,gBAAgB,CAAC;MACtF,MAAMC,eAAe,GAAG5B,oBAAoB,CAAClC,MAAM;MAEnD,IAAI2D,iBAAiB,CAAClD,MAAM,KAAKqD,eAAe,CAACrD,MAAM,EAAE;QACvDlD,QAAQ,CAAC,WAAW,CAAC;QACrB;MACF;;MAEA;MACAQ,qBAAqB,CAAC,EAAE,CAAC;MACzB,MAAM,IAAI0F,OAAO,CAACC,OAAO,IAAIhC,UAAU,CAACgC,OAAO,EAAE,GAAG,CAAC,CAAC;MAEtD,MAAMK,iBAAiB,GAAG9H,kBAAkB,CAAC;QAC3C+H,CAAC,EAAEL,iBAAiB;QACpBM,CAAC,EAAEH;MACL,CAAC,CAAC;;MAEF;;MAEA;MACA/F,qBAAqB,CAAC,EAAE,CAAC;MACzB,MAAM,IAAI0F,OAAO,CAACC,OAAO,IAAIhC,UAAU,CAACgC,OAAO,EAAE,GAAG,CAAC,CAAC;MAEtD,MAAMQ,WAAW,GAAGH,iBAAiB,CAACI,MAAM,CAAC,CAACC,IAAI,EAAEC,OAAO,KAAK;QAC9D,IAAI7C,KAAK,CAAC6C,OAAO,CAACC,QAAQ,CAAC,IAAID,OAAO,CAACC,QAAQ,GAAG,CAAC,EAAE,OAAOF,IAAI;QAChE,IAAI,CAACA,IAAI,IAAIC,OAAO,CAACC,QAAQ,GAAGF,IAAI,CAACE,QAAQ,EAAE,OAAOD,OAAO;QAC7D,OAAOD,IAAI;MACb,CAAC,EAAE,IAA4B,CAAC;MAEhC,IAAI,CAACF,WAAW,EAAE;QAChB3G,QAAQ,CAAC,aAAa,CAAC;QACvB;MACF;MAEAJ,oBAAoB,CAAC+G,WAAW,CAAC;;MAEjC;MACAnG,qBAAqB,CAAC,EAAE,CAAC;MACzB,MAAM,IAAI0F,OAAO,CAACC,OAAO,IAAIhC,UAAU,CAACgC,OAAO,EAAE,GAAG,CAAC,CAAC;MAEtD,MAAMa,WAAW,GAAGzH,OAAO,CAACkD,MAAM,CAACS,MAAM;MACzC,MAAMqC,WAA+B,GAAG,EAAE;MAC1C,MAAM0B,eAAyC,GAAG,EAAE;MAEpD,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGF,WAAW,EAAEE,KAAK,EAAE,EAAE;QAChD,MAAM7B,QAAQ,GAAG9F,OAAO,CAACkD,MAAM,CAACyE,KAAK,CAAC;QACtC;QACA,IAAIC,eAAe,GAAG9B,QAAQ,CAAC,CAAC;;QAEhC;QACA,MAAMC,iBAA8H,GAAG,CAAC,CAAC;QAEzIkB,iBAAiB,CAACY,OAAO,CAACC,OAAO,IAAI;UACnC,IAAIpD,KAAK,CAACoD,OAAO,CAACN,QAAQ,CAAC,IAAIM,OAAO,CAACN,QAAQ,GAAG,CAAC,EAAE;UAErD,IAAIhB,kBAAkB,GAAG,CAAC;;UAE1B;UACA,QAAQsB,OAAO,CAACvG,IAAI;YAClB,KAAK,aAAa;cAChB,IAAIuE,QAAQ,GAAG,CAAC,EAAE;gBAChB,MAAM,CAACiC,CAAC,EAAEC,CAAC,CAAC,GAAGF,OAAO,CAACG,YAAY;gBACnCzB,kBAAkB,GAAGuB,CAAC,GAAGjG,IAAI,CAACoG,GAAG,CAACpC,QAAQ,CAAC,GAAGkC,CAAC;cACjD;cACA;YACF,KAAK,aAAa;cAChB,MAAM,CAACG,KAAK,EAAEC,KAAK,CAAC,GAAGN,OAAO,CAACG,YAAY;cAC3CzB,kBAAkB,GAAG2B,KAAK,GAAGrG,IAAI,CAACuG,GAAG,CAACD,KAAK,GAAGtC,QAAQ,CAAC;cACvD;YACF,KAAK,YAAY;cACf,MAAM,CAACwC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,CAAC,GAAGX,OAAO,CAACG,YAAY;cAC7DzB,kBAAkB,GAAG8B,MAAM,GAAGxG,IAAI,CAAC4G,GAAG,CAAC5C,QAAQ,EAAE,CAAC,CAAC,GAC/ByC,MAAM,GAAGzG,IAAI,CAAC4G,GAAG,CAAC5C,QAAQ,EAAE,CAAC,CAAC,GAC9B0C,MAAM,GAAG1C,QAAQ,GAAG2C,MAAM;cAC9C;YACF,KAAK,OAAO;cACV,IAAI3C,QAAQ,GAAG,CAAC,EAAE;gBAChB,MAAM,CAAC6C,KAAK,EAAEC,KAAK,CAAC,GAAGd,OAAO,CAACG,YAAY;gBAC3CzB,kBAAkB,GAAGmC,KAAK,GAAG7G,IAAI,CAAC4G,GAAG,CAAC5C,QAAQ,EAAE8C,KAAK,CAAC;cACxD;cACA;YACF,KAAK,WAAW;cACd,MAAM,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,CAAC,GAAGjB,OAAO,CAACG,YAAY;cAClDzB,kBAAkB,GAAGqC,KAAK,GAAG/G,IAAI,CAAC4G,GAAG,CAAC5C,QAAQ,EAAE,CAAC,CAAC,GAC9BgD,KAAK,GAAGhD,QAAQ,GAAGiD,KAAK;cAC5C;UACJ;UAEAhD,iBAAiB,CAAC+B,OAAO,CAACvG,IAAI,CAAC,GAAG;YAChCiF,kBAAkB;YAClBE,OAAO,EAAEoB,OAAO,CAACpB,OAAO;YACxBD,UAAU,EAAEqB,OAAO,CAACN,QAAQ;YAC5BwB,WAAW,EAAElB,OAAO,CAACvG;UACvB,CAAC;QACH,CAAC,CAAC;QAEFyE,WAAW,CAACrB,IAAI,CAAC;UACfsE,QAAQ,EAAEjJ,OAAO,CAACmD,SAAS,CAACwE,KAAK,CAAC;UAClCC,eAAe;UACf5B,WAAW,EAAED;QACf,CAAC,CAAC;;QAEF;QACA2B,eAAe,CAAC/C,IAAI,CAAC;UACnBmB,QAAQ;UACRC;QACF,CAAC,CAAC;;QAEF;QACA,MAAMmD,QAAQ,GAAG,EAAE,GAAGpH,IAAI,CAACC,KAAK,CAAE4F,KAAK,GAAGF,WAAW,GAAI,EAAE,CAAC;QAC5DxG,qBAAqB,CAACiI,QAAQ,CAAC;;QAE/B;QACA,IAAIvB,KAAK,GAAG,GAAG,KAAK,CAAC,EAAE;UACrB,MAAM,IAAIhB,OAAO,CAACC,OAAO,IAAIhC,UAAU,CAACgC,OAAO,EAAE,EAAE,CAAC,CAAC;QACvD;MACF;;MAEA;MACAvF,0BAA0B,CAACqG,eAAe,CAAC;;MAE3C;MACAzG,qBAAqB,CAAC,GAAG,CAAC;MAC1B,MAAM,IAAI0F,OAAO,CAACC,OAAO,IAAIhC,UAAU,CAACgC,OAAO,EAAE,GAAG,CAAC,CAAC;MAEtDzG,oBAAoB,CAAC6F,WAAW,CAAC;MACjCvF,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAO0I,GAAG,EAAE;MACZC,OAAO,CAAC5I,KAAK,CAAC,SAAS,EAAE2I,GAAG,CAAC;MAC7B1I,QAAQ,CAAC0I,GAAG,YAAYpG,KAAK,GAAGoG,GAAG,CAACrE,OAAO,GAAG,QAAQ,CAAC;IACzD,CAAC,SAAS;MACR3D,eAAe,CAAC,KAAK,CAAC;MACtBF,qBAAqB,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,CAACjB,OAAO,EAAER,aAAa,EAAEC,gBAAgB,EAAEiB,kBAAkB,EAAEE,qBAAqB,EAAEU,YAAY,CAAC,CAAC;;EAEvG;EACA,MAAM+H,aAAa,GAAGrK,WAAW,CAAC,MAAM;IACtC,IAAIkB,iBAAiB,CAACyD,MAAM,KAAK,CAAC,IAAI,CAAC3D,OAAO,EAAE;MAC9CS,QAAQ,CAAC,WAAW,CAAC;MACrB;IACF;IAEA,MAAMiC,QAAQ,GAAGxD,IAAI,CAACoK,KAAK,CAACC,QAAQ,CAAC,CAAC;;IAEtC;IACA,MAAMC,IAAI,GAAG,EAAE,CAAC,CAAC;IACjB,MAAMC,IAAI,GAAG,EAAE,CAAC,CAAC;;IAEjB;IACA,MAAMhI,QAAQ,GAAIC,GAAW,IAAa;MACxC,IAAIC,MAAM,GAAG,EAAE;MACf,OAAOD,GAAG,GAAG,CAAC,EAAE;QACdA,GAAG,EAAE;QACLC,MAAM,GAAGC,MAAM,CAACC,YAAY,CAAC,GAAG,CAAC+B,UAAU,CAAC,CAAC,CAAC,GAAIlC,GAAG,GAAG,EAAG,CAAC,GAAGC,MAAM;QACrED,GAAG,GAAGI,IAAI,CAACC,KAAK,CAACL,GAAG,GAAG,EAAE,CAAC;MAC5B;MACA,OAAOC,MAAM;IACf,CAAC;;IAED;IACA,MAAM+H,UAAoB,GAAG,EAAE;IAC/B,KAAK,IAAIhG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+F,IAAI,EAAE/F,CAAC,EAAE,EAAE;MAC7BgG,UAAU,CAAC/E,IAAI,CAAClD,QAAQ,CAACiC,CAAC,GAAG,CAAC,CAAC,CAAC;IAClC;;IAEA;IACA,MAAMiG,kBAAkB,GAAG,EAAE;IAC7BA,kBAAkB,CAAChF,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG+E,UAAU,CAAC,CAAC;IAE5C,KAAK,IAAI1F,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGwF,IAAI,EAAExF,GAAG,EAAE,EAAE;MACnC,MAAMC,OAA4B,GAAG,CAACD,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;MAChD,KAAK,IAAIP,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGgG,IAAI,EAAEhG,GAAG,EAAE,EAAE;QACnC,IAAIO,GAAG,GAAGhE,OAAO,CAAC+D,MAAM,CAACJ,MAAM,IAAIF,GAAG,GAAGzD,OAAO,CAAC+D,MAAM,CAACC,GAAG,CAAC,CAACL,MAAM,EAAE;UACnEM,OAAO,CAACU,IAAI,CAAC3E,OAAO,CAAC+D,MAAM,CAACC,GAAG,CAAC,CAACP,GAAG,CAAC,CAAC;QACxC,CAAC,MAAM;UACLQ,OAAO,CAACU,IAAI,CAAC,EAAE,CAAC;QAClB;MACF;MACAgF,kBAAkB,CAAChF,IAAI,CAACV,OAAO,CAAC;IAClC;IAEA,MAAM2F,iBAAiB,GAAG1K,IAAI,CAACoK,KAAK,CAACO,YAAY,CAACF,kBAAkB,CAAC;IACrEzK,IAAI,CAACoK,KAAK,CAACQ,iBAAiB,CAACpH,QAAQ,EAAEkH,iBAAiB,EAAE,MAAM,CAAC;;IAEjE;IACA,MAAMG,UAAU,GAAG,IAAIC,GAAG,CAAS,CAAC;IACpC9J,iBAAiB,CAAC2H,OAAO,CAAClG,MAAM,IAAI;MAClCsE,MAAM,CAACgE,IAAI,CAACtI,MAAM,CAACqE,WAAW,CAAC,CAAC6B,OAAO,CAACxB,MAAM,IAAI0D,UAAU,CAACG,GAAG,CAAC7D,MAAM,CAAC,CAAC;IAC3E,CAAC,CAAC;;IAEF;IACA8D,KAAK,CAACC,IAAI,CAACL,UAAU,CAAC,CAAClC,OAAO,CAACxB,MAAM,IAAI;MACvC,MAAMgE,gBAAuC,GAAG,EAAE;MAClDA,gBAAgB,CAAC1F,IAAI,CAAC,CAAC,EAAE,EAAE,GAAG+E,UAAU,CAAC,CAAC;MAE1C,KAAK,IAAI1F,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGwF,IAAI,EAAExF,GAAG,EAAE,EAAE;QACnC,MAAMC,OAA4B,GAAG,CAACD,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QAChD,KAAK,IAAIP,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGgG,IAAI,EAAEhG,GAAG,EAAE,EAAE;UACnC,MAAM6G,SAAS,GAAGtG,GAAG,GAAGyF,IAAI,GAAGhG,GAAG;UAClC,IAAI6G,SAAS,GAAGpK,iBAAiB,CAACyD,MAAM,IAAIzD,iBAAiB,CAACoK,SAAS,CAAC,CAACtE,WAAW,CAACK,MAAM,CAAC,EAAE;YAC5FpC,OAAO,CAACU,IAAI,CAACH,UAAU,CAACtE,iBAAiB,CAACoK,SAAS,CAAC,CAACtE,WAAW,CAACK,MAAM,CAAC,CAACG,kBAAkB,CAACL,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;UAC1G,CAAC,MAAM;YACLlC,OAAO,CAACU,IAAI,CAAC,EAAE,CAAC;UAClB;QACF;QACA0F,gBAAgB,CAAC1F,IAAI,CAACV,OAAO,CAAC;MAChC;MAEA,MAAMsG,eAAe,GAAGrL,IAAI,CAACoK,KAAK,CAACO,YAAY,CAACQ,gBAAgB,CAAC;MACjEnL,IAAI,CAACoK,KAAK,CAACQ,iBAAiB,CAACpH,QAAQ,EAAE6H,eAAe,EAAEjJ,YAAY,CAAC+E,MAAM,CAAC,CAAC;IAC/E,CAAC,CAAC;;IAEF;IACA,MAAMmE,UAAiB,GAAG,EAAE;IAC5BA,UAAU,CAAC7F,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;IAElEzE,iBAAiB,CAAC2H,OAAO,CAAClG,MAAM,IAAI;MAClCsE,MAAM,CAACC,OAAO,CAACvE,MAAM,CAACqE,WAAW,CAAC,CAAC6B,OAAO,CAAC,CAAC,CAACxB,MAAM,EAAEC,UAAU,CAAC,KAAK;QACnEkE,UAAU,CAAC7F,IAAI,CAAC,CACdhD,MAAM,CAACsH,QAAQ,EACftH,MAAM,CAACiG,eAAe,CAACzB,OAAO,CAAC,CAAC,CAAC,EACjC7E,YAAY,CAAC+E,MAAM,CAAC,EACpBC,UAAU,CAACE,kBAAkB,CAACL,OAAO,CAAC,CAAC,CAAC,EACxCG,UAAU,CAACG,UAAU,CAACN,OAAO,CAAC,CAAC,CAAC,EAChCG,UAAU,CAACI,OAAO,CACnB,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,MAAM+D,eAAe,GAAGvL,IAAI,CAACoK,KAAK,CAACO,YAAY,CAACW,UAAU,CAAC;IAC3DtL,IAAI,CAACoK,KAAK,CAACQ,iBAAiB,CAACpH,QAAQ,EAAE+H,eAAe,EAAE,MAAM,CAAC;;IAE/D;IACA,IAAIrK,iBAAiB,EAAE;MACrB,MAAMsK,WAAW,GAAG,CAClB,CAAC,MAAM,EAAE,EAAE,CAAC,EACZ,CAAC,QAAQ,EAAEpJ,YAAY,CAAClB,iBAAiB,CAACmB,IAAI,CAAC,CAAC,EAChD,CAAC,MAAM,EAAEnB,iBAAiB,CAACsG,OAAO,CAAC,EACnC,CAAC,KAAK,EAAEtG,iBAAiB,CAACoH,QAAQ,CAACrB,OAAO,CAAC,CAAC,CAAC,CAAC,EAC9C,CAAC,MAAM,EAAE/F,iBAAiB,CAACuK,IAAI,CAACxE,OAAO,CAAC,CAAC,CAAC,CAAC,EAC3C,CAAC,KAAK,EAAE/F,iBAAiB,CAACwK,GAAG,CAACzE,OAAO,CAAC,CAAC,CAAC,CAAC,EACzC,CAAC,MAAM,EAAE/F,iBAAiB,CAACyK,QAAQ,CAAC1E,OAAO,CAAC,CAAC,CAAC,CAAC,CAChD;MAED,MAAM2E,SAAS,GAAG5L,IAAI,CAACoK,KAAK,CAACO,YAAY,CAACa,WAAW,CAAC;MACtDxL,IAAI,CAACoK,KAAK,CAACQ,iBAAiB,CAACpH,QAAQ,EAAEoI,SAAS,EAAE,MAAM,CAAC;IAC3D;;IAEA;IACA,MAAMtF,QAAQ,GAAG,YAAY,IAAIuF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,OAAO;IACzE/L,IAAI,CAACgM,SAAS,CAACxI,QAAQ,EAAE8C,QAAQ,CAAC;EACpC,CAAC,EAAE,CAACtF,iBAAiB,EAAEE,iBAAiB,EAAEJ,OAAO,CAAC,CAAC;EAEnD,oBACEV,OAAA;IAAKgG,SAAS,EAAC,mCAAmC;IAAAC,QAAA,gBAChDjG,OAAA;MAAIgG,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGtDrG,OAAA;MAAKgG,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBjG,OAAA;QAAIgG,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvDrG,OAAA;QAAKgG,SAAS,EAAC,mEAAmE;QAAAC,QAAA,gBAChFjG,OAAA;UACEiC,IAAI,EAAC,MAAM;UACX4J,MAAM,EAAC,YAAY;UACnBC,QAAQ,EAAEpJ,gBAAiB;UAC3BsD,SAAS,EAAC,QAAQ;UAClB+F,EAAE,EAAC;QAAiB;UAAA7F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,eACFrG,OAAA;UACEgM,OAAO,EAAC,iBAAiB;UACzBhG,SAAS,EAAC,yHAAyH;UAAAC,QAAA,EACpI;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRrG,OAAA;UAAGgG,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAC;QAE1C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLrF,SAAS,iBACRhB,OAAA;MAAKgG,SAAS,EAAC,uDAAuD;MAAAC,QAAA,eACpEjG,OAAA;QAAGgG,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CACN,EAGAnF,KAAK,iBACJlB,OAAA;MAAKgG,SAAS,EAAC,qDAAqD;MAAAC,QAAA,eAClEjG,OAAA;QAAGgG,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAE/E;MAAK;QAAAgF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACN,EAGA3F,OAAO,iBACNV,OAAA;MAAKgG,SAAS,EAAC,gCAAgC;MAAAC,QAAA,gBAC7CjG,OAAA;QAAIgG,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5CrG,OAAA;QAAKgG,SAAS,EAAC,gCAAgC;QAAAC,QAAA,gBAC7CjG,OAAA;UAAAiG,QAAA,gBACEjG,OAAA;YAAMgG,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC5CrG,OAAA;YAAMgG,SAAS,EAAC,kBAAkB;YAAAC,QAAA,GAAEvF,OAAO,CAAC+D,MAAM,CAACJ,MAAM,EAAC,QAAG,EAAC,EAAAhE,gBAAA,GAAAK,OAAO,CAAC+D,MAAM,CAAC,CAAC,CAAC,cAAApE,gBAAA,uBAAjBA,gBAAA,CAAmBgE,MAAM,KAAI,CAAC;UAAA;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjG,CAAC,eACNrG,OAAA;UAAAiG,QAAA,gBACEjG,OAAA;YAAMgG,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC5CrG,OAAA;YAAMgG,SAAS,EAAC,kBAAkB;YAAAC,QAAA,GAC/BzD,IAAI,CAACyJ,GAAG,CAAC,GAAGvL,OAAO,CAAC+D,MAAM,CAACyH,IAAI,CAAC,CAAC,CAAC,CAACrF,OAAO,CAAC,CAAC,CAAC,EAAC,KAAG,EAACrE,IAAI,CAAC2J,GAAG,CAAC,GAAGzL,OAAO,CAAC+D,MAAM,CAACyH,IAAI,CAAC,CAAC,CAAC,CAACrF,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5F,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGAzE,YAAY,iBACX5B,OAAA;MAAKgG,SAAS,EAAC,uDAAuD;MAAAC,QAAA,gBACpEjG,OAAA;QAAKgG,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACrDjG,OAAA;UAAIgG,SAAS,EAAC,2BAA2B;UAAAC,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1DrG,OAAA;UAAMgG,SAAS,EAAC,mCAAmC;UAAAC,QAAA,GAAEvE,kBAAkB,EAAC,GAAC;QAAA;UAAAwE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CAAC,eACNrG,OAAA;QAAKgG,SAAS,EAAC,qCAAqC;QAAAC,QAAA,eAClDjG,OAAA;UACEgG,SAAS,EAAC,mEAAmE;UAC7EoG,KAAK,EAAE;YAAEC,KAAK,EAAE,GAAG3K,kBAAkB;UAAI;QAAE;UAAAwE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACNrG,OAAA;QAAKgG,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GACxCvE,kBAAkB,IAAI,EAAE,IAAI,WAAW,EACvCA,kBAAkB,GAAG,EAAE,IAAIA,kBAAkB,IAAI,EAAE,IAAI,aAAa,EACpEA,kBAAkB,GAAG,EAAE,IAAIA,kBAAkB,IAAI,EAAE,IAAI,eAAe,EACtEA,kBAAkB,GAAG,EAAE,IAAIA,kBAAkB,IAAI,EAAE,IAAI,aAAa,EACpEA,kBAAkB,GAAG,EAAE,IAAI,SAAS;MAAA;QAAAwE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA3F,OAAO,KAAMU,kBAAkB,IAAIE,qBAAqB,IAAMpB,aAAa,CAAC0D,MAAM,CAACS,MAAM,GAAG,CAAC,IAAIlE,gBAAgB,CAACkE,MAAM,GAAG,CAAE,CAAC,iBAC7HrE,OAAA;MAAKgG,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBjG,OAAA;QACEsM,OAAO,EAAE/G,mBAAoB;QAC7BS,SAAS,EAAC,mFAAmF;QAAAC,QAAA,EAC9F;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EAGAvF,iBAAiB,iBAChBd,OAAA;MAAKgG,SAAS,EAAC,gCAAgC;MAAAC,QAAA,gBAC7CjG,OAAA;QAAIgG,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/CrG,OAAA;QAAKgG,SAAS,EAAC,gCAAgC;QAAAC,QAAA,gBAC7CjG,OAAA;UAAAiG,QAAA,gBACEjG,OAAA;YAAMgG,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC5CrG,OAAA;YAAMgG,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEjE,YAAY,CAAClB,iBAAiB,CAACmB,IAAI;UAAC;YAAAiE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC,eACNrG,OAAA;UAAAiG,QAAA,gBACEjG,OAAA;YAAMgG,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC3CrG,OAAA;YAAMgG,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAEnF,iBAAiB,CAACoH,QAAQ,CAACrB,OAAO,CAAC,CAAC;UAAC;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC,eACNrG,OAAA;UAAKgG,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBjG,OAAA;YAAMgG,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC5CrG,OAAA;YAAMgG,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAEnF,iBAAiB,CAACsG;UAAO;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA3F,OAAO,iBACNV,OAAA;MAAKgG,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBjG,OAAA;QAAIgG,SAAS,EAAC,kBAAkB;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7CrG,OAAA;QAAGgG,SAAS,EAAC,4BAA4B;QAAAC,QAAA,EAAC;MAE1C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAGJrG,OAAA;QAAKgG,SAAS,EAAC,gEAAgE;QAAAC,QAAA,eAC7EjG,OAAA;UAAKgG,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3BjG,OAAA;YACEqM,KAAK,EAAE,GAAG,CAAC,EAAA/L,iBAAA,GAAAI,OAAO,CAAC+D,MAAM,CAAC,CAAC,CAAC,cAAAnE,iBAAA,uBAAjBA,iBAAA,CAAmB+D,MAAM,KAAI,EAAE,IAAI,EAAE,GAAG,EAAE,EAAG;YACxDkI,MAAM,EAAE,GAAG7L,OAAO,CAAC+D,MAAM,CAACJ,MAAM,GAAG,EAAE,GAAG,EAAE,EAAG;YAC7C2B,SAAS,EAAC,UAAU;YAAAC,QAAA,GAGnB4E,KAAK,CAACC,IAAI,CAAC;cAAEzG,MAAM,EAAE,EAAA9D,iBAAA,GAAAG,OAAO,CAAC+D,MAAM,CAAC,CAAC,CAAC,cAAAlE,iBAAA,uBAAjBA,iBAAA,CAAmB8D,MAAM,KAAI;YAAG,CAAC,EAAE,CAACmI,CAAC,EAAE7G,QAAQ,kBACnE3F,OAAA;cAEE4H,CAAC,EAAE,EAAE,GAAGjC,QAAQ,GAAG,EAAE,GAAG,EAAG;cAC3BkC,CAAC,EAAE,EAAG;cACN4E,UAAU,EAAC,QAAQ;cACnBzG,SAAS,EAAC,iCAAiC;cAAAC,QAAA,EAE1CN;YAAQ,GANJ,aAAaA,QAAQ,EAAE;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOxB,CACP,CAAC,EAGD3F,OAAO,CAAC+D,MAAM,CAACqC,GAAG,CAAC,CAAC0F,CAAC,EAAE9G,QAAQ,kBAC9B1F,OAAA;cAEE4H,CAAC,EAAE,EAAG;cACNC,CAAC,EAAE,EAAE,GAAGnC,QAAQ,GAAG,EAAE,GAAG,EAAG;cAC3B+G,UAAU,EAAC,QAAQ;cACnBzG,SAAS,EAAC,iCAAiC;cAAAC,QAAA,EAE1CP;YAAQ,GANJ,aAAaA,QAAQ,EAAE;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOxB,CACP,CAAC,EAGD3F,OAAO,CAAC+D,MAAM,CAACqC,GAAG,CAAC,CAACpC,GAAG,EAAEgB,QAAQ,KAChChB,GAAG,CAACoC,GAAG,CAAC,CAAC7B,KAAK,EAAEU,QAAQ,KAAK;cAC3B,MAAM+G,QAAQ,GAAGlK,IAAI,CAACyJ,GAAG,CAAC,GAAGvL,OAAO,CAAC+D,MAAM,CAACyH,IAAI,CAAC,CAAC,CAAC;cACnD,MAAMS,QAAQ,GAAGnK,IAAI,CAAC2J,GAAG,CAAC,GAAGzL,OAAO,CAAC+D,MAAM,CAACyH,IAAI,CAAC,CAAC,CAAC;cACnD,MAAMU,eAAe,GAAG,CAAC3H,KAAK,GAAGyH,QAAQ,KAAKC,QAAQ,GAAGD,QAAQ,CAAC;;cAElE;cACA,MAAMG,aAAa,GAAGrK,IAAI,CAACsK,KAAK,CAACF,eAAe,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC;cAC9D,MAAMG,eAAe,GAAG,OAAO,GAAG,GAAGF,aAAa,KAAK,GAAG,GAAGA,aAAa,QAAQ;;cAElF;cACA,MAAMG,SAAS,GAAGJ,eAAe,GAAG,GAAG,GAAG,OAAO,GAAG,OAAO;cAE3D,oBACE5M,OAAA;gBAAAiG,QAAA,gBACEjG,OAAA;kBACE4H,CAAC,EAAE,EAAE,GAAGjC,QAAQ,GAAG,EAAG;kBACtBkC,CAAC,EAAE,EAAE,GAAGnC,QAAQ,GAAG,EAAG;kBACtB2G,KAAK,EAAC,IAAI;kBACVE,MAAM,EAAC,IAAI;kBACXU,IAAI,EAAEF,eAAgB;kBACtBG,MAAM,EAAC,SAAS;kBAChBC,WAAW,EAAC,KAAK;kBACjBnH,SAAS,EAAC,qDAAqD;kBAC/DoH,aAAa,EAAEA,CAAA,KAAM3H,iBAAiB,CAACC,QAAQ,EAAEC,QAAQ;gBAAE;kBAAAO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5D,CAAC,eACFrG,OAAA;kBACE4H,CAAC,EAAE,EAAE,GAAGjC,QAAQ,GAAG,EAAE,GAAG,EAAG;kBAC3BkC,CAAC,EAAE,EAAE,GAAGnC,QAAQ,GAAG,EAAE,GAAG,EAAG;kBAC3B+G,UAAU,EAAC,QAAQ;kBACnBzG,SAAS,EAAC,yCAAyC;kBACnDiH,IAAI,EAAED,SAAU;kBAAA/G,QAAA,EAEfhB,KAAK,CAAC4B,OAAO,CAAC,CAAC;gBAAC;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb,CAAC,eACPrG,OAAA;kBAAAiG,QAAA,EAAQ,OAAO9D,QAAQ,CAACwD,QAAQ,GAAG,CAAC,CAAC,GAAGD,QAAQ,GAAG,CAAC,QAAQT,KAAK,CAAC4B,OAAO,CAAC,CAAC,CAAC;gBAAE;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA,GArBjF,GAAGX,QAAQ,IAAIC,QAAQ,EAAE;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAsB9B,CAAC;YAER,CAAC,CACH,CAAC,eAGDrG,OAAA;cACE4H,CAAC,EAAE,GAAG,CAAC,CAAC,EAAApH,iBAAA,GAAAE,OAAO,CAAC+D,MAAM,CAAC,CAAC,CAAC,cAAAjE,iBAAA,uBAAjBA,iBAAA,CAAmB6D,MAAM,KAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAAG;cAC1DwD,CAAC,EAAE,GAAGnH,OAAO,CAAC+D,MAAM,CAACJ,MAAM,GAAG,EAAE,GAAG,EAAE,EAAG;cACxCoI,UAAU,EAAC,QAAQ;cACnBzG,SAAS,EAAC,mCAAmC;cAAAC,QAAA,GAC9C,wBACQ,EAAC,CAAC,EAAAxF,iBAAA,GAAAC,OAAO,CAAC+D,MAAM,CAAC,CAAC,CAAC,cAAAhE,iBAAA,uBAAjBA,iBAAA,CAAmB4D,MAAM,KAAI,EAAE,IAAI,CAAC,EAAC,GAChD;YAAA;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACPrG,OAAA;cACE4H,CAAC,EAAC,IAAI;cACNC,CAAC,EAAE,GAAG,CAACnH,OAAO,CAAC+D,MAAM,CAACJ,MAAM,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,EAAG;cAC9CoI,UAAU,EAAC,QAAQ;cACnBzG,SAAS,EAAC,mCAAmC;cAC7CqH,SAAS,EAAE,iBAAiB,CAAC3M,OAAO,CAAC+D,MAAM,CAACJ,MAAM,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,GAAI;cAAA4B,QAAA,GACtE,wBACQ,EAACvF,OAAO,CAAC+D,MAAM,CAACJ,MAAM,GAAG,CAAC,EAAC,GACpC;YAAA;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNrG,OAAA;QAAKgG,SAAS,EAAC,8BAA8B;QAAAC,QAAA,gBAC3CjG,OAAA;UAAMgG,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpDrG,OAAA;UAAKgG,SAAS,EAAC,yBAAyB;UAAAC,QAAA,gBACtCjG,OAAA;YAAKgG,SAAS,EAAC;UAA4C;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAClErG,OAAA;YAAMgG,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACjDrG,OAAA;YAAKgG,SAAS,EAAC;UAAyF;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC/GrG,OAAA;YAAKgG,SAAS,EAAC;UAA4C;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAClErG,OAAA;YAAMgG,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eACNrG,OAAA;UAAKgG,SAAS,EAAC,uBAAuB;UAAAC,QAAA,GAAC,gBACjC,EAACzD,IAAI,CAACyJ,GAAG,CAAC,GAAGvL,OAAO,CAAC+D,MAAM,CAACyH,IAAI,CAAC,CAAC,CAAC,CAACrF,OAAO,CAAC,CAAC,CAAC,EAAC,KAAG,EAACrE,IAAI,CAAC2J,GAAG,CAAC,GAAGzL,OAAO,CAAC+D,MAAM,CAACyH,IAAI,CAAC,CAAC,CAAC,CAACrF,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAIL7E,iBAAiB,iBAChBxB,OAAA;QAAKgG,SAAS,EAAC,4EAA4E;QAACsG,OAAO,EAAE1G,0BAA2B;QAAAK,QAAA,eAC9HjG,OAAA;UAAKgG,SAAS,EAAC,4EAA4E;UAACsG,OAAO,EAAGgB,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;UAAAtH,QAAA,gBAC9HjG,OAAA;YAAKgG,SAAS,EAAC,wCAAwC;YAAAC,QAAA,gBACrDjG,OAAA;cAAIgG,SAAS,EAAC,uBAAuB;cAAAC,QAAA,GAAC,eAAG,EAAC9D,QAAQ,CAACX,iBAAiB,CAAC2C,GAAG,GAAG,CAAC,CAAC,EAAE3C,iBAAiB,CAACkD,GAAG,GAAG,CAAC,EAAC,uCAAO;YAAA;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrHrG,OAAA;cACEsM,OAAO,EAAE1G,0BAA2B;cACpCI,SAAS,EAAC,mEAAmE;cAC7E,cAAW,cAAI;cAAAC,QAAA,EAChB;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,EACLR,4BAA4B;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,EAGAzF,iBAAiB,CAACyD,MAAM,GAAG,CAAC,iBAC3BrE,OAAA;MAAKgG,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBjG,OAAA;QAAKgG,SAAS,EAAC,wCAAwC;QAAAC,QAAA,gBACrDjG,OAAA;UAAIgG,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrCrG,OAAA;UACEsM,OAAO,EAAEvC,aAAc;UACvB/D,SAAS,EAAC,yFAAyF;UAAAC,QAAA,EACpG;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENrG,OAAA;QAAKgG,SAAS,EAAC,qEAAqE;QAAAC,QAAA,EACjFrF,iBAAiB,CAACkG,GAAG,CAAC,CAACzE,MAAM,EAAEgG,KAAK,kBACnCrI,OAAA;UAAiBgG,SAAS,EAAC,sHAAsH;UAAAC,QAAA,gBAC/IjG,OAAA;YAAKgG,SAAS,EAAC,wCAAwC;YAAAC,QAAA,eACrDjG,OAAA;cAAMgG,SAAS,EAAC,mCAAmC;cAAAC,QAAA,GAAC,gBAAI,EAAC5D,MAAM,CAACsH,QAAQ;YAAA;cAAAzD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7E,CAAC,eAENrG,OAAA;YAAKgG,SAAS,EAAC,WAAW;YAAAC,QAAA,gBACxBjG,OAAA;cAAKgG,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACnCjG,OAAA;gBAAMgG,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACnDrG,OAAA;gBAAMgG,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,EAAE5D,MAAM,CAACiG,eAAe,CAACzB,OAAO,CAAC,CAAC;cAAC;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7E,CAAC,eAGNrG,OAAA;cAAKgG,SAAS,EAAC,oCAAoC;cAAAC,QAAA,gBACjDjG,OAAA;gBAAKgG,SAAS,EAAC,wCAAwC;gBAAAC,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACvErG,OAAA;gBAAKgG,SAAS,EAAC,WAAW;gBAAAC,QAAA,EACvBU,MAAM,CAACC,OAAO,CAACvE,MAAM,CAACqE,WAAW,CAAC,CAACI,GAAG,CAAC,CAAC,CAACC,MAAM,EAAEC,UAAU,CAAC,kBAC3DhH,OAAA;kBAAkBgG,SAAS,EAAC,6BAA6B;kBAAAC,QAAA,gBACvDjG,OAAA;oBAAKgG,SAAS,EAAC,wCAAwC;oBAAAC,QAAA,gBACrDjG,OAAA;sBAAMgG,SAAS,EAAC,mCAAmC;sBAAAC,QAAA,EAChDjE,YAAY,CAAC+E,MAAM;oBAAC;sBAAAb,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACjB,CAAC,eACPrG,OAAA;sBAAMgG,SAAS,EAAC,mCAAmC;sBAAAC,QAAA,EAChDe,UAAU,CAACE,kBAAkB,CAACL,OAAO,CAAC,CAAC;oBAAC;sBAAAX,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACrC,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ,CAAC,eACNrG,OAAA;oBAAKgG,SAAS,EAAC,4BAA4B;oBAAAC,QAAA,GAAC,sBACrC,EAAC,CAACe,UAAU,CAACG,UAAU,GAAG,GAAG,EAAEN,OAAO,CAAC,CAAC,CAAC,EAAC,GACjD;kBAAA;oBAAAX,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACNrG,OAAA;oBAAKgG,SAAS,EAAC,2CAA2C;oBAAAC,QAAA,EACvDe,UAAU,CAACI;kBAAO;oBAAAlB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAChB,CAAC;gBAAA,GAdEU,MAAM;kBAAAb,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAeX,CACN;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,GAnCEgC,KAAK;UAAAnC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAoCV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGNrG,OAAA;QAAKgG,SAAS,EAAC,gCAAgC;QAAAC,QAAA,gBAC7CjG,OAAA;UAAIgG,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1CrG,OAAA;UAAKgG,SAAS,EAAC,gCAAgC;UAAAC,QAAA,gBAC7CjG,OAAA;YAAAiG,QAAA,gBACEjG,OAAA;cAAMgG,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC7CrG,OAAA;cAAMgG,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAErF,iBAAiB,CAACyD;YAAM;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D,CAAC,eACNrG,OAAA;YAAAiG,QAAA,gBACEjG,OAAA;cAAMgG,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC7CrG,OAAA;cAAMgG,SAAS,EAAC,aAAa;cAAAC,QAAA,EAC1BrF,iBAAiB,CAACyD,MAAM,GAAG,CAAC,GAAGsC,MAAM,CAACgE,IAAI,CAAC/J,iBAAiB,CAAC,CAAC,CAAC,CAAC8F,WAAW,CAAC,CAACrC,MAAM,GAAG;YAAC;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACNrG,OAAA;YAAAiG,QAAA,gBACEjG,OAAA;cAAMgG,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC5CrG,OAAA;cAAMgG,SAAS,EAAC,aAAa;cAAAC,QAAA,EAC1BnF,iBAAiB,GAAGkB,YAAY,CAAClB,iBAAiB,CAACmB,IAAI,CAAC,GAAG;YAAK;cAAAiE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7D,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGA,CAAC3F,OAAO,iBACPV,OAAA;MAAKgG,SAAS,EAAC,2DAA2D;MAAAC,QAAA,gBACxEjG,OAAA;QAAIgG,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1DrG,OAAA;QAAIgG,SAAS,EAAC,mCAAmC;QAAAC,QAAA,gBAC/CjG,OAAA;UAAAiG,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7BrG,OAAA;UAAAiG,QAAA,EAAI;QAAkC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3CrG,OAAA;UAAAiG,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7BrG,OAAA;UAAAiG,QAAA,EAAI;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjG,EAAA,CAj2BIH,oBAAyD;AAAAuN,EAAA,GAAzDvN,oBAAyD;AAm2B/D,eAAeA,oBAAoB;AAAC,IAAAuN,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}