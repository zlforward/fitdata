{"ast":null,"code":"var _jsxFileName = \"D:\\\\source\\\\fitdata\\\\fitdata-visualizer\\\\src\\\\components\\\\TargetDataPrediction.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport * as XLSX from 'xlsx';\nimport { performAllFittings } from '../utils/curveFitting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TargetDataPrediction = ({\n  grayScaleData,\n  brightnessBlocks\n}) => {\n  _s();\n  var _rawData$matrix$, _rawData$matrix$2;\n  const [rawData, setRawData] = useState(null);\n  const [predictionResults, setPredictionResults] = useState([]);\n  const [bestFittingResult, setBestFittingResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const [doubleClickedCell, setDoubleClickedCell] = useState(null);\n\n  // 将数字转换为Excel列名\n  const numToCol = num => {\n    let result = '';\n    while (num > 0) {\n      num--;\n      result = String.fromCharCode(65 + num % 26) + result;\n      num = Math.floor(num / 26);\n    }\n    return result;\n  };\n\n  // 读取Excel Sheet3数据\n  const handleFileUpload = useCallback(event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (!file) return;\n    setIsLoading(true);\n    setError(null);\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        var _e$target;\n        const data = new Uint8Array((_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.result);\n        const workbook = XLSX.read(data, {\n          type: 'array'\n        });\n\n        // 检查是否有Sheet3\n        if (!workbook.SheetNames.includes('Sheet3')) {\n          throw new Error('未找到Sheet3工作表');\n        }\n        const worksheet = workbook.Sheets['Sheet3'];\n        const values = [];\n        const positions = [];\n\n        // 读取A2-AF21范围的原始数据（20行×32列）\n        const startRow = 2;\n        const endRow = 21;\n        const startCol = 'A';\n        const endCol = 'AF';\n        const cols = 32;\n\n        // 将列字母转换为数字\n        const colToNum = col => {\n          let result = 0;\n          for (let i = 0; i < col.length; i++) {\n            result = result * 26 + (col.charCodeAt(i) - 'A'.charCodeAt(0) + 1);\n          }\n          return result;\n        };\n        const numToCol = num => {\n          let result = '';\n          while (num > 0) {\n            num--;\n            result = String.fromCharCode('A'.charCodeAt(0) + num % 26) + result;\n            num = Math.floor(num / 26);\n          }\n          return result;\n        };\n        const startColNum = colToNum(startCol);\n        const endColNum = colToNum(endCol);\n\n        // 创建矩阵结构\n        const matrix = [];\n\n        // 按行读取数据\n        for (let row = startRow; row <= endRow; row++) {\n          const rowData = [];\n          for (let colNum = startColNum; colNum <= endColNum; colNum++) {\n            const col = numToCol(colNum);\n            const cellAddress = `${col}${row}`;\n            const cell = worksheet[cellAddress];\n            if (cell && cell.v !== undefined && cell.v !== null && cell.v !== '') {\n              const value = typeof cell.v === 'number' ? cell.v : parseFloat(cell.v.toString());\n              if (!isNaN(value)) {\n                values.push(value);\n                positions.push(cellAddress);\n                rowData.push(value);\n              } else {\n                rowData.push(0);\n              }\n            } else {\n              rowData.push(0);\n            }\n          }\n          matrix.push(rowData);\n        }\n        if (values.length === 0) {\n          throw new Error('Sheet3中未找到有效的原始数据');\n        }\n        setRawData({\n          values,\n          positions,\n          matrix\n        });\n\n        // 自动生成预测结果\n        setTimeout(() => {\n          generatePredictions();\n        }, 100);\n      } catch (error) {\n        setError(error instanceof Error ? error.message : '文件读取失败');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    reader.onerror = () => {\n      setError('文件读取失败');\n      setIsLoading(false);\n    };\n    reader.readAsArrayBuffer(file);\n  }, []);\n\n  // 生成预测结果\n  const generatePredictions = useCallback(() => {\n    if (!rawData) {\n      setError('请先上传原始数据');\n      return;\n    }\n    if (!grayScaleData.values.length || !brightnessBlocks.length) {\n      setError('无法获取有效的拟合数据');\n      return;\n    }\n\n    // 提取中心像素值和灰阶值\n    const centerPixelValues = brightnessBlocks.map(block => block.centerPixelValue);\n    const grayScaleValues = grayScaleData.values;\n    if (centerPixelValues.length !== grayScaleValues.length) {\n      setError('拟合数据长度不匹配');\n      return;\n    }\n\n    // 执行所有拟合算法\n    const allFittingResults = performAllFittings({\n      x: centerPixelValues,\n      y: grayScaleValues\n    });\n\n    // 找到最佳拟合结果用于显示\n    const bestFitting = allFittingResults.reduce((best, current) => {\n      if (isNaN(current.rSquared) || current.rSquared < 0) return best;\n      if (!best || current.rSquared > best.rSquared) return current;\n      return best;\n    }, null);\n    if (!bestFitting) {\n      setError('无法获取有效的拟合结果');\n      return;\n    }\n    setBestFittingResult(bestFitting);\n    const predictions = rawData.values.map((rawValue, index) => {\n      // 计算对应的亮度值\n      let brightnessValue = rawValue; // 使用原始数据值作为亮度值\n\n      // 为每种拟合方法计算预测值\n      const methodPredictions = {};\n      allFittingResults.forEach(fitting => {\n        if (isNaN(fitting.rSquared) || fitting.rSquared < 0) return;\n        let predictedGrayScale = 0;\n\n        // 根据拟合类型计算预测值\n        switch (fitting.type) {\n          case 'logarithmic':\n            if (rawValue > 0) {\n              const [a, b] = fitting.coefficients;\n              predictedGrayScale = a * Math.log(rawValue) + b;\n            }\n            break;\n          case 'exponential':\n            const [a_exp, b_exp] = fitting.coefficients;\n            predictedGrayScale = a_exp * Math.exp(b_exp * rawValue);\n            break;\n          case 'polynomial':\n            const [a_poly, b_poly, c_poly, d_poly] = fitting.coefficients;\n            predictedGrayScale = a_poly * Math.pow(rawValue, 3) + b_poly * Math.pow(rawValue, 2) + c_poly * rawValue + d_poly;\n            break;\n          case 'power':\n            if (rawValue > 0) {\n              const [a_pow, b_pow] = fitting.coefficients;\n              predictedGrayScale = a_pow * Math.pow(rawValue, b_pow);\n            }\n            break;\n          case 'bivariate':\n            const [a_biv, b_biv, c_biv] = fitting.coefficients;\n            predictedGrayScale = a_biv * Math.pow(rawValue, 2) + b_biv * rawValue + c_biv;\n            break;\n        }\n        methodPredictions[fitting.type] = {\n          predictedGrayScale,\n          formula: fitting.formula,\n          confidence: fitting.rSquared,\n          fittingType: fitting.type\n        };\n      });\n      return {\n        position: rawData.positions[index],\n        brightnessValue,\n        predictions: methodPredictions\n      };\n    });\n    setPredictionResults(predictions);\n    setError(null);\n  }, [rawData, grayScaleData, brightnessBlocks]);\n\n  // 导出预测结果到Excel\n  const exportToExcel = useCallback(() => {\n    if (predictionResults.length === 0 || !rawData) {\n      setError('没有预测结果可导出');\n      return;\n    }\n    const workbook = XLSX.utils.book_new();\n\n    // 创建矩阵格式的预测结果工作表\n    const rows = 20; // A2-AF21 共20行\n    const cols = 32; // A-AF 共32列\n\n    // 将列数字转换为字母的辅助函数\n    const numToCol = num => {\n      let result = '';\n      while (num > 0) {\n        num--;\n        result = String.fromCharCode('A'.charCodeAt(0) + num % 26) + result;\n        num = Math.floor(num / 26);\n      }\n      return result;\n    };\n\n    // 创建列标题 (A-AF)\n    const colHeaders = [];\n    for (let i = 0; i < cols; i++) {\n      colHeaders.push(numToCol(i + 1));\n    }\n\n    // 创建原始数据矩阵工作表\n    const originalMatrixData = [];\n    originalMatrixData.push(['', ...colHeaders]);\n    for (let row = 0; row < rows; row++) {\n      const rowData = [row + 2]; // 行号从2开始\n      for (let col = 0; col < cols; col++) {\n        if (row < rawData.matrix.length && col < rawData.matrix[row].length) {\n          rowData.push(rawData.matrix[row][col]);\n        } else {\n          rowData.push('');\n        }\n      }\n      originalMatrixData.push(rowData);\n    }\n    const originalWorksheet = XLSX.utils.aoa_to_sheet(originalMatrixData);\n    XLSX.utils.book_append_sheet(workbook, originalWorksheet, '原始数据');\n\n    // 获取所有拟合方法\n    const allMethods = new Set();\n    predictionResults.forEach(result => {\n      Object.keys(result.predictions).forEach(method => allMethods.add(method));\n    });\n\n    // 为每种拟合方法创建单独的预测结果矩阵\n    Array.from(allMethods).forEach(method => {\n      const methodMatrixData = [];\n      methodMatrixData.push(['', ...colHeaders]);\n      for (let row = 0; row < rows; row++) {\n        const rowData = [row + 2]; // 行号从2开始\n        for (let col = 0; col < cols; col++) {\n          const dataIndex = row * cols + col;\n          if (dataIndex < predictionResults.length && predictionResults[dataIndex].predictions[method]) {\n            rowData.push(parseFloat(predictionResults[dataIndex].predictions[method].predictedGrayScale.toFixed(6)));\n          } else {\n            rowData.push('');\n          }\n        }\n        methodMatrixData.push(rowData);\n      }\n      const methodWorksheet = XLSX.utils.aoa_to_sheet(methodMatrixData);\n      XLSX.utils.book_append_sheet(workbook, methodWorksheet, getTypeLabel(method));\n    });\n\n    // 创建详细预测结果工作表\n    const detailData = [];\n    detailData.push(['位置', '亮度值', '拟合方法', '预测灰阶值', '置信度(R²)', '拟合公式']);\n    predictionResults.forEach(result => {\n      Object.entries(result.predictions).forEach(([method, prediction]) => {\n        detailData.push([result.position, result.brightnessValue.toFixed(2), getTypeLabel(method), prediction.predictedGrayScale.toFixed(6), prediction.confidence.toFixed(6), prediction.formula]);\n      });\n    });\n    const detailWorksheet = XLSX.utils.aoa_to_sheet(detailData);\n    XLSX.utils.book_append_sheet(workbook, detailWorksheet, '详细结果');\n\n    // 添加拟合信息工作表\n    if (bestFittingResult) {\n      const fittingInfo = [['拟合信息', ''], ['最佳拟合类型', getTypeLabel(bestFittingResult.type)], ['拟合公式', bestFittingResult.formula], ['R²值', bestFittingResult.rSquared.toFixed(6)], ['RMSE', bestFittingResult.rmse.toFixed(6)], ['MAE', bestFittingResult.mae.toFixed(6)], ['最大误差', bestFittingResult.maxError.toFixed(6)]];\n      const fittingWs = XLSX.utils.aoa_to_sheet(fittingInfo);\n      XLSX.utils.book_append_sheet(workbook, fittingWs, '拟合信息');\n    }\n\n    // 下载文件\n    const fileName = `原始数据预测结果_${new Date().toISOString().slice(0, 10)}.xlsx`;\n    XLSX.writeFile(workbook, fileName);\n  }, [predictionResults, bestFittingResult, rawData]);\n\n  // 获取拟合类型标签\n  const getTypeLabel = type => {\n    const labels = {\n      'logarithmic': '对数拟合',\n      'exponential': '指数拟合',\n      'polynomial': '三次多项式拟合',\n      'power': '幂函数拟合',\n      'bivariate': '二次多项式拟合'\n    };\n    return labels[type] || type;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-lg p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold mb-6\",\n      children: \"\\u539F\\u59CB\\u6570\\u636E\\u9884\\u6D4B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-3\",\n        children: \"\\u4E0A\\u4F20\\u539F\\u59CB\\u6570\\u636E\\u6587\\u4EF6 (Sheet3)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".xlsx,.xls\",\n          onChange: handleFileUpload,\n          className: \"hidden\",\n          id: \"raw-file-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"raw-file-upload\",\n          className: \"cursor-pointer inline-flex items-center px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\",\n          children: \"\\u9009\\u62E9Excel\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-sm text-gray-500\",\n          children: \"\\u8BF7\\u9009\\u62E9\\u5305\\u542BSheet3\\u5DE5\\u4F5C\\u8868\\u7684Excel\\u6587\\u4EF6\\uFF0C\\u539F\\u59CB\\u6570\\u636E\\u5E94\\u4F4D\\u4E8EA2-AF21\\u8303\\u56F4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-blue-700\",\n        children: \"\\u6B63\\u5728\\u8BFB\\u53D6\\u6587\\u4EF6...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-700\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }, this), rawData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-gray-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-2\",\n        children: \"\\u539F\\u59CB\\u6570\\u636E\\u6982\\u89C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u77E9\\u9635\\u7EF4\\u5EA6:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 font-medium\",\n            children: [rawData.matrix.length, \" \\xD7 \", ((_rawData$matrix$ = rawData.matrix[0]) === null || _rawData$matrix$ === void 0 ? void 0 : _rawData$matrix$.length) || 0]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u6570\\u503C\\u8303\\u56F4:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 font-medium\",\n            children: [Math.min(...rawData.matrix.flat()).toFixed(2), \" - \", Math.max(...rawData.matrix.flat()).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 9\n    }, this), rawData && grayScaleData.values.length > 0 && brightnessBlocks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generatePredictions,\n        className: \"px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\",\n        children: \"\\u751F\\u6210\\u9884\\u6D4B\\u7ED3\\u679C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 9\n    }, this), bestFittingResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6 p-4 bg-blue-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-2\",\n        children: \"\\u4F7F\\u7528\\u7684\\u6700\\u4F73\\u62DF\\u5408\\u6A21\\u578B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u62DF\\u5408\\u7C7B\\u578B\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: getTypeLabel(bestFittingResult.type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"R\\xB2\\u503C\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: bestFittingResult.rSquared.toFixed(6)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-span-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-600\",\n            children: \"\\u62DF\\u5408\\u516C\\u5F0F\\uFF1A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium font-mono\",\n            children: bestFittingResult.formula\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }, this), rawData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-3\",\n        children: \"\\u539F\\u59CB\\u6570\\u636E\\u70ED\\u529B\\u56FE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3 flex items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-600\",\n          children: \"\\u989C\\u8272\\u56FE\\u4F8B:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4 bg-blue-900 border border-gray-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-gray-600\",\n            children: \"\\u9AD8\\u503C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-20 h-4 bg-gradient-to-r from-blue-900 via-blue-400 to-blue-100 border border-gray-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4 bg-blue-100 border border-gray-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-xs text-gray-600\",\n            children: \"\\u4F4E\\u503C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500\",\n          children: [\"\\u8303\\u56F4: \", Math.min(...rawData.matrix.flat()).toFixed(2), \" - \", Math.max(...rawData.matrix.flat()).toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg border border-gray-200 overflow-x-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid gap-0.5\",\n          style: {\n            gridTemplateColumns: `repeat(${((_rawData$matrix$2 = rawData.matrix[0]) === null || _rawData$matrix$2 === void 0 ? void 0 : _rawData$matrix$2.length) || 32}, minmax(24px, 1fr))`\n          },\n          children: rawData.matrix.map((row, rowIndex) => row.map((value, colIndex) => {\n            const minValue = Math.min(...rawData.matrix.flat());\n            const maxValue = Math.max(...rawData.matrix.flat());\n            const normalizedValue = (value - minValue) / (maxValue - minValue);\n\n            // 使用蓝色渐变色彩映射\n            const blueIntensity = Math.round(normalizedValue * 200 + 55); // 55-255范围\n            const backgroundColor = `rgb(${255 - blueIntensity}, ${255 - blueIntensity}, 255)`;\n\n            // 根据背景色调整文字颜色\n            const textColor = normalizedValue > 0.5 ? 'white' : 'black';\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"aspect-square border border-gray-200 cursor-pointer hover:border-blue-600 hover:border-2 transition-all duration-200 flex items-center justify-center text-xs font-medium hover:shadow-md\",\n              style: {\n                backgroundColor,\n                color: textColor\n              },\n              onMouseEnter: () => setHoveredCell({\n                row: rowIndex,\n                col: colIndex\n              }),\n              onMouseLeave: () => setHoveredCell(null),\n              onDoubleClick: () => handleDoubleClick(rowIndex, colIndex),\n              title: `位置: ${numToCol(colIndex + 1)}${rowIndex + 2}, 值: ${value.toFixed(2)}`,\n              children: value.toFixed(1)\n            }, `${rowIndex}-${colIndex}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 21\n            }, this);\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 11\n      }, this), hoveredCell && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"font-medium mb-2\",\n          children: [\"\\u4F4D\\u7F6E \", numToCol(hoveredCell.col + 1), hoveredCell.row + 2, \" \\u62DF\\u5408\\u7ED3\\u679C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 15\n        }, this), (() => {\n          const cellPrediction = predictionResults.find(result => {\n            const position = result.position;\n            const expectedPosition = `${numToCol(hoveredCell.col + 1)}${hoveredCell.row + 2}`;\n            return position === expectedPosition;\n          });\n          if (!cellPrediction) {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500\",\n              children: \"\\u8BE5\\u4F4D\\u7F6E\\u6682\\u65E0\\u62DF\\u5408\\u7ED3\\u679C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 26\n            }, this);\n          }\n\n          // 找到最佳拟合方法（置信度最高的）\n          const predictions = Object.entries(cellPrediction.predictions);\n          if (predictions.length === 0) {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500\",\n              children: \"\\u8BE5\\u4F4D\\u7F6E\\u6682\\u65E0\\u6709\\u6548\\u62DF\\u5408\\u7ED3\\u679C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 26\n            }, this);\n          }\n          const bestMethod = predictions.reduce((best, current) => {\n            const [, bestPred] = best;\n            const [, currentPred] = current;\n            return currentPred.confidence > bestPred.confidence ? current : best;\n          });\n          const [bestMethodType, bestPrediction] = bestMethod;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"\\u4EAE\\u5EA6\\u503C:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 font-medium\",\n                children: cellPrediction.brightnessValue.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"\\u6700\\u4F73\\u62DF\\u5408:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 font-medium\",\n                children: getTypeLabel(bestMethodType)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"\\u9884\\u6D4B\\u7070\\u9636\\u503C:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 font-medium\",\n                children: bestPrediction.predictedGrayScale.toFixed(6)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"\\u7F6E\\u4FE1\\u5EA6(R\\xB2):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 font-medium\",\n                children: bestPrediction.confidence.toFixed(6)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-600\",\n                children: \"\\u62DF\\u5408\\u516C\\u5F0F:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2 font-mono text-xs\",\n                children: bestPrediction.formula\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 19\n          }, this);\n        })()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 13\n      }, this), doubleClickedCell && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg p-6 max-w-2xl w-full mx-4 max-h-[80vh] overflow-y-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"text-lg font-semibold\",\n              children: [\"\\u4F4D\\u7F6E \", numToCol(doubleClickedCell.col + 1), doubleClickedCell.row + 2, \" \\u8BE6\\u7EC6\\u62DF\\u5408\\u7ED3\\u679C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCloseDoubleClickCard,\n              className: \"text-gray-500 hover:text-gray-700 text-xl font-bold\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 17\n          }, this), (() => {\n            const cellPrediction = predictionResults.find(result => {\n              const position = result.position;\n              const expectedPosition = `${numToCol(doubleClickedCell.col + 1)}${doubleClickedCell.row + 2}`;\n              return position === expectedPosition;\n            });\n            if (!cellPrediction) {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500\",\n                children: \"\\u8BE5\\u4F4D\\u7F6E\\u6682\\u65E0\\u62DF\\u5408\\u7ED3\\u679C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 28\n              }, this);\n            }\n            const predictions = Object.entries(cellPrediction.predictions);\n            if (predictions.length === 0) {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500\",\n                children: \"\\u8BE5\\u4F4D\\u7F6E\\u6682\\u65E0\\u6709\\u6548\\u62DF\\u5408\\u7ED3\\u679C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 28\n              }, this);\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-50 p-4 rounded-lg\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray-600\",\n                    children: \"\\u4EAE\\u5EA6\\u503C:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 633,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-2 font-medium\",\n                    children: cellPrediction.brightnessValue.toFixed(2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 634,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"font-medium text-gray-700\",\n                  children: \"\\u6240\\u6709\\u62DF\\u5408\\u65B9\\u6CD5\\u9884\\u6D4B\\u7ED3\\u679C:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 25\n                }, this), predictions.map(([method, prediction]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-blue-50 p-4 rounded-lg border border-blue-200\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center mb-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium text-gray-700\",\n                      children: getTypeLabel(method)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 643,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-lg font-bold text-blue-600\",\n                      children: prediction.predictedGrayScale.toFixed(6)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 646,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-600 mb-2\",\n                    children: [\"\\u7F6E\\u4FE1\\u5EA6(R\\xB2): \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium\",\n                      children: [(prediction.confidence * 100).toFixed(2), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 651,\n                      columnNumber: 40\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-sm text-gray-500 font-mono bg-white p-2 rounded border\",\n                    children: prediction.formula\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 653,\n                    columnNumber: 29\n                  }, this)]\n                }, method, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 27\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 21\n            }, this);\n          })()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 9\n    }, this), predictionResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium\",\n          children: \"\\u9884\\u6D4B\\u7ED3\\u679C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportToExcel,\n          className: \"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm\",\n          children: \"\\u5BFC\\u51FA\\u5230Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\",\n        children: predictionResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gradient-to-br from-blue-50 to-indigo-100 p-4 rounded-lg border border-blue-200 hover:shadow-md transition-shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-medium text-gray-600\",\n              children: [\"\\u4F4D\\u7F6E: \", result.position]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm text-gray-600\",\n                children: \"\\u4EAE\\u5EA6\\u503C:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-medium\",\n                children: result.brightnessValue.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 pt-2 border-t border-blue-200\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs font-medium text-gray-700 mb-2\",\n                children: \"\\u5404\\u62DF\\u5408\\u65B9\\u6CD5\\u9884\\u6D4B\\u503C:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-2\",\n                children: Object.entries(result.predictions).map(([method, prediction]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-white rounded p-2 border\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex justify-between items-center mb-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-xs font-medium text-gray-600\",\n                      children: getTypeLabel(method)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 701,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-xs text-blue-600 font-medium\",\n                      children: prediction.predictedGrayScale.toFixed(4)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 704,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 700,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-500 mb-1\",\n                    children: [\"\\u7F6E\\u4FE1\\u5EA6: \", (prediction.confidence * 100).toFixed(1), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 708,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-xs text-gray-400 break-all font-mono\",\n                    children: prediction.formula\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 711,\n                    columnNumber: 27\n                  }, this)]\n                }, method, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 p-4 bg-gray-50 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"font-medium mb-2\",\n          children: \"\\u9884\\u6D4B\\u7EDF\\u8BA1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-4 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: \"\\u9884\\u6D4B\\u6570\\u636E\\u70B9\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: predictionResults.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: \"\\u62DF\\u5408\\u65B9\\u6CD5\\u6570\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: predictionResults.length > 0 ? Object.keys(predictionResults[0].predictions).length : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: \"\\u6700\\u4F73\\u62DF\\u5408\\uFF1A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-medium\",\n              children: bestFittingResult ? getTypeLabel(bestFittingResult.type) : 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 737,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 9\n    }, this), !rawData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"font-medium mb-2 text-yellow-800\",\n        children: \"\\u4F7F\\u7528\\u8BF4\\u660E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 751,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"text-sm text-yellow-700 space-y-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"1. \\u9996\\u5148\\u786E\\u4FDD\\u5DF2\\u4E0A\\u4F20\\u5E76\\u5904\\u7406\\u4E86\\u539F\\u59CB\\u6570\\u636E\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"2. \\u4E0A\\u4F20\\u5305\\u542BSheet3\\u5DE5\\u4F5C\\u8868\\u7684Excel\\u6587\\u4EF6\\uFF0C\\u76EE\\u6807\\u6570\\u636E\\u5E94\\u4F4D\\u4E8EB\\u5217\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"3. \\u7CFB\\u7EDF\\u5C06\\u81EA\\u52A8\\u9009\\u62E9\\u6700\\u4F73\\u62DF\\u5408\\u6A21\\u578B\\u8FDB\\u884C\\u9884\\u6D4B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"4. \\u751F\\u6210\\u9884\\u6D4B\\u7ED3\\u679C\\u540E\\u53EF\\u5BFC\\u51FA\\u5230Excel\\u6587\\u4EF6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 5\n  }, this);\n};\n_s(TargetDataPrediction, \"2trU5ELX6ZMzCdarXuGXMPGo7/U=\");\n_c = TargetDataPrediction;\nexport default TargetDataPrediction;\nvar _c;\n$RefreshReg$(_c, \"TargetDataPrediction\");","map":{"version":3,"names":["React","useState","useCallback","XLSX","performAllFittings","jsxDEV","_jsxDEV","TargetDataPrediction","grayScaleData","brightnessBlocks","_s","_rawData$matrix$","_rawData$matrix$2","rawData","setRawData","predictionResults","setPredictionResults","bestFittingResult","setBestFittingResult","isLoading","setIsLoading","error","setError","hoveredCell","setHoveredCell","doubleClickedCell","setDoubleClickedCell","numToCol","num","result","String","fromCharCode","Math","floor","handleFileUpload","event","_event$target$files","file","target","files","reader","FileReader","onload","e","_e$target","data","Uint8Array","workbook","read","type","SheetNames","includes","Error","worksheet","Sheets","values","positions","startRow","endRow","startCol","endCol","cols","colToNum","col","i","length","charCodeAt","startColNum","endColNum","matrix","row","rowData","colNum","cellAddress","cell","v","undefined","value","parseFloat","toString","isNaN","push","setTimeout","generatePredictions","message","onerror","readAsArrayBuffer","centerPixelValues","map","block","centerPixelValue","grayScaleValues","allFittingResults","x","y","bestFitting","reduce","best","current","rSquared","predictions","rawValue","index","brightnessValue","methodPredictions","forEach","fitting","predictedGrayScale","a","b","coefficients","log","a_exp","b_exp","exp","a_poly","b_poly","c_poly","d_poly","pow","a_pow","b_pow","a_biv","b_biv","c_biv","formula","confidence","fittingType","position","exportToExcel","utils","book_new","rows","colHeaders","originalMatrixData","originalWorksheet","aoa_to_sheet","book_append_sheet","allMethods","Set","Object","keys","method","add","Array","from","methodMatrixData","dataIndex","toFixed","methodWorksheet","getTypeLabel","detailData","entries","prediction","detailWorksheet","fittingInfo","rmse","mae","maxError","fittingWs","fileName","Date","toISOString","slice","writeFile","labels","className","children","_jsxFileName","lineNumber","columnNumber","accept","onChange","id","htmlFor","min","flat","max","onClick","style","gridTemplateColumns","rowIndex","colIndex","minValue","maxValue","normalizedValue","blueIntensity","round","backgroundColor","textColor","color","onMouseEnter","onMouseLeave","onDoubleClick","handleDoubleClick","title","cellPrediction","find","expectedPosition","bestMethod","bestPred","currentPred","bestMethodType","bestPrediction","handleCloseDoubleClickCard","_c","$RefreshReg$"],"sources":["D:/source/fitdata/fitdata-visualizer/src/components/TargetDataPrediction.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport * as XLSX from 'xlsx';\nimport { FittingResult, performAllFittings } from '../utils/curveFitting';\n\ninterface RawData {\n  values: number[];\n  positions: string[];\n  matrix: number[][];\n}\n\ninterface PredictionResult {\n  position: string;\n  brightnessValue: number;\n  predictions: {\n    [key: string]: {\n      predictedGrayScale: number;\n      formula: string;\n      confidence: number;\n      fittingType: string;\n    }\n  };\n}\n\ninterface TargetDataPredictionProps {\n  grayScaleData: {\n    values: number[];\n    positions: string[];\n  };\n  brightnessBlocks: Array<{\n    label: string;\n    startRow: number;\n    endRow: number;\n    data: number[][];\n    centerPixelValue: number;\n    normalizedData?: number[][];\n  }>;\n}\n\nconst TargetDataPrediction: React.FC<TargetDataPredictionProps> = ({ grayScaleData, brightnessBlocks }) => {\n  const [rawData, setRawData] = useState<RawData | null>(null);\n  const [predictionResults, setPredictionResults] = useState<PredictionResult[]>([]);\n  const [bestFittingResult, setBestFittingResult] = useState<FittingResult | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [hoveredCell, setHoveredCell] = useState<{ row: number; col: number } | null>(null);\n  const [doubleClickedCell, setDoubleClickedCell] = useState<{ row: number; col: number } | null>(null);\n\n  // 将数字转换为Excel列名\n  const numToCol = (num: number): string => {\n    let result = '';\n    while (num > 0) {\n      num--;\n      result = String.fromCharCode(65 + (num % 26)) + result;\n      num = Math.floor(num / 26);\n    }\n    return result;\n  };\n\n  // 读取Excel Sheet3数据\n  const handleFileUpload = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const data = new Uint8Array(e.target?.result as ArrayBuffer);\n        const workbook = XLSX.read(data, { type: 'array' });\n        \n        // 检查是否有Sheet3\n        if (!workbook.SheetNames.includes('Sheet3')) {\n          throw new Error('未找到Sheet3工作表');\n        }\n        \n        const worksheet = workbook.Sheets['Sheet3'];\n        const values: number[] = [];\n        const positions: string[] = [];\n        \n        // 读取A2-AF21范围的原始数据（20行×32列）\n        const startRow = 2;\n        const endRow = 21;\n        const startCol = 'A';\n        const endCol = 'AF';\n        const cols = 32;\n        \n        // 将列字母转换为数字\n        const colToNum = (col: string): number => {\n          let result = 0;\n          for (let i = 0; i < col.length; i++) {\n            result = result * 26 + (col.charCodeAt(i) - 'A'.charCodeAt(0) + 1);\n          }\n          return result;\n        };\n        \n        const numToCol = (num: number): string => {\n          let result = '';\n          while (num > 0) {\n            num--;\n            result = String.fromCharCode('A'.charCodeAt(0) + (num % 26)) + result;\n            num = Math.floor(num / 26);\n          }\n          return result;\n        };\n        \n        const startColNum = colToNum(startCol);\n        const endColNum = colToNum(endCol);\n        \n        // 创建矩阵结构\n        const matrix: number[][] = [];\n        \n        // 按行读取数据\n        for (let row = startRow; row <= endRow; row++) {\n          const rowData: number[] = [];\n          for (let colNum = startColNum; colNum <= endColNum; colNum++) {\n            const col = numToCol(colNum);\n            const cellAddress = `${col}${row}`;\n            const cell = worksheet[cellAddress];\n            \n            if (cell && cell.v !== undefined && cell.v !== null && cell.v !== '') {\n              const value = typeof cell.v === 'number' ? cell.v : parseFloat(cell.v.toString());\n              if (!isNaN(value)) {\n                values.push(value);\n                positions.push(cellAddress);\n                rowData.push(value);\n              } else {\n                rowData.push(0);\n              }\n            } else {\n              rowData.push(0);\n            }\n          }\n          matrix.push(rowData);\n        }\n        \n        if (values.length === 0) {\n          throw new Error('Sheet3中未找到有效的原始数据');\n        }\n        \n        setRawData({ values, positions, matrix });\n        \n        // 自动生成预测结果\n        setTimeout(() => {\n          generatePredictions();\n        }, 100);\n      } catch (error) {\n        setError(error instanceof Error ? error.message : '文件读取失败');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    reader.onerror = () => {\n      setError('文件读取失败');\n      setIsLoading(false);\n    };\n    \n    reader.readAsArrayBuffer(file);\n  }, []);\n\n\n\n  // 生成预测结果\n  const generatePredictions = useCallback(() => {\n    if (!rawData) {\n      setError('请先上传原始数据');\n      return;\n    }\n\n    if (!grayScaleData.values.length || !brightnessBlocks.length) {\n      setError('无法获取有效的拟合数据');\n      return;\n    }\n\n    // 提取中心像素值和灰阶值\n    const centerPixelValues = brightnessBlocks.map(block => block.centerPixelValue);\n    const grayScaleValues = grayScaleData.values;\n\n    if (centerPixelValues.length !== grayScaleValues.length) {\n      setError('拟合数据长度不匹配');\n      return;\n    }\n\n    // 执行所有拟合算法\n    const allFittingResults = performAllFittings({\n      x: centerPixelValues,\n      y: grayScaleValues\n    });\n\n    // 找到最佳拟合结果用于显示\n    const bestFitting = allFittingResults.reduce((best, current) => {\n      if (isNaN(current.rSquared) || current.rSquared < 0) return best;\n      if (!best || current.rSquared > best.rSquared) return current;\n      return best;\n    }, null as FittingResult | null);\n\n    if (!bestFitting) {\n      setError('无法获取有效的拟合结果');\n      return;\n    }\n\n    setBestFittingResult(bestFitting);\n\n    const predictions: PredictionResult[] = rawData.values.map((rawValue, index) => {\n      // 计算对应的亮度值\n      let brightnessValue = rawValue; // 使用原始数据值作为亮度值\n\n      // 为每种拟合方法计算预测值\n      const methodPredictions: { [key: string]: { predictedGrayScale: number; formula: string; confidence: number; fittingType: string } } = {};\n      \n      allFittingResults.forEach(fitting => {\n        if (isNaN(fitting.rSquared) || fitting.rSquared < 0) return;\n        \n        let predictedGrayScale = 0;\n        \n        // 根据拟合类型计算预测值\n        switch (fitting.type) {\n          case 'logarithmic':\n            if (rawValue > 0) {\n              const [a, b] = fitting.coefficients;\n              predictedGrayScale = a * Math.log(rawValue) + b;\n            }\n            break;\n          case 'exponential':\n            const [a_exp, b_exp] = fitting.coefficients;\n            predictedGrayScale = a_exp * Math.exp(b_exp * rawValue);\n            break;\n          case 'polynomial':\n            const [a_poly, b_poly, c_poly, d_poly] = fitting.coefficients;\n            predictedGrayScale = a_poly * Math.pow(rawValue, 3) + \n                                b_poly * Math.pow(rawValue, 2) + \n                                c_poly * rawValue + d_poly;\n            break;\n          case 'power':\n            if (rawValue > 0) {\n              const [a_pow, b_pow] = fitting.coefficients;\n              predictedGrayScale = a_pow * Math.pow(rawValue, b_pow);\n            }\n            break;\n          case 'bivariate':\n            const [a_biv, b_biv, c_biv] = fitting.coefficients;\n            predictedGrayScale = a_biv * Math.pow(rawValue, 2) + \n                                b_biv * rawValue + c_biv;\n            break;\n        }\n\n        methodPredictions[fitting.type] = {\n          predictedGrayScale,\n          formula: fitting.formula,\n          confidence: fitting.rSquared,\n          fittingType: fitting.type\n        };\n      });\n\n      return {\n        position: rawData.positions[index],\n        brightnessValue,\n        predictions: methodPredictions\n      };\n    });\n\n    setPredictionResults(predictions);\n    setError(null);\n  }, [rawData, grayScaleData, brightnessBlocks]);\n\n  // 导出预测结果到Excel\n  const exportToExcel = useCallback(() => {\n    if (predictionResults.length === 0 || !rawData) {\n      setError('没有预测结果可导出');\n      return;\n    }\n\n    const workbook = XLSX.utils.book_new();\n    \n    // 创建矩阵格式的预测结果工作表\n    const rows = 20; // A2-AF21 共20行\n    const cols = 32; // A-AF 共32列\n    \n    // 将列数字转换为字母的辅助函数\n    const numToCol = (num: number): string => {\n      let result = '';\n      while (num > 0) {\n        num--;\n        result = String.fromCharCode('A'.charCodeAt(0) + (num % 26)) + result;\n        num = Math.floor(num / 26);\n      }\n      return result;\n    };\n    \n    // 创建列标题 (A-AF)\n    const colHeaders: string[] = [];\n    for (let i = 0; i < cols; i++) {\n      colHeaders.push(numToCol(i + 1));\n    }\n    \n    // 创建原始数据矩阵工作表\n    const originalMatrixData = [];\n    originalMatrixData.push(['', ...colHeaders]);\n    \n    for (let row = 0; row < rows; row++) {\n      const rowData: (string | number)[] = [row + 2]; // 行号从2开始\n      for (let col = 0; col < cols; col++) {\n        if (row < rawData.matrix.length && col < rawData.matrix[row].length) {\n          rowData.push(rawData.matrix[row][col]);\n        } else {\n          rowData.push('');\n        }\n      }\n      originalMatrixData.push(rowData);\n    }\n    \n    const originalWorksheet = XLSX.utils.aoa_to_sheet(originalMatrixData);\n    XLSX.utils.book_append_sheet(workbook, originalWorksheet, '原始数据');\n    \n    // 获取所有拟合方法\n    const allMethods = new Set<string>();\n    predictionResults.forEach(result => {\n      Object.keys(result.predictions).forEach(method => allMethods.add(method));\n    });\n    \n    // 为每种拟合方法创建单独的预测结果矩阵\n    Array.from(allMethods).forEach(method => {\n      const methodMatrixData: (string | number)[][] = [];\n      methodMatrixData.push(['', ...colHeaders]);\n      \n      for (let row = 0; row < rows; row++) {\n        const rowData: (string | number)[] = [row + 2]; // 行号从2开始\n        for (let col = 0; col < cols; col++) {\n          const dataIndex = row * cols + col;\n          if (dataIndex < predictionResults.length && predictionResults[dataIndex].predictions[method]) {\n            rowData.push(parseFloat(predictionResults[dataIndex].predictions[method].predictedGrayScale.toFixed(6)));\n          } else {\n            rowData.push('');\n          }\n        }\n        methodMatrixData.push(rowData);\n      }\n      \n      const methodWorksheet = XLSX.utils.aoa_to_sheet(methodMatrixData);\n      XLSX.utils.book_append_sheet(workbook, methodWorksheet, getTypeLabel(method));\n    });\n    \n    // 创建详细预测结果工作表\n    const detailData: any[] = [];\n    detailData.push(['位置', '亮度值', '拟合方法', '预测灰阶值', '置信度(R²)', '拟合公式']);\n    \n    predictionResults.forEach(result => {\n      Object.entries(result.predictions).forEach(([method, prediction]) => {\n        detailData.push([\n          result.position,\n          result.brightnessValue.toFixed(2),\n          getTypeLabel(method),\n          prediction.predictedGrayScale.toFixed(6),\n          prediction.confidence.toFixed(6),\n          prediction.formula\n        ]);\n      });\n    });\n    \n    const detailWorksheet = XLSX.utils.aoa_to_sheet(detailData);\n    XLSX.utils.book_append_sheet(workbook, detailWorksheet, '详细结果');\n    \n    // 添加拟合信息工作表\n    if (bestFittingResult) {\n      const fittingInfo = [\n        ['拟合信息', ''],\n        ['最佳拟合类型', getTypeLabel(bestFittingResult.type)],\n        ['拟合公式', bestFittingResult.formula],\n        ['R²值', bestFittingResult.rSquared.toFixed(6)],\n        ['RMSE', bestFittingResult.rmse.toFixed(6)],\n        ['MAE', bestFittingResult.mae.toFixed(6)],\n        ['最大误差', bestFittingResult.maxError.toFixed(6)]\n      ];\n      \n      const fittingWs = XLSX.utils.aoa_to_sheet(fittingInfo);\n      XLSX.utils.book_append_sheet(workbook, fittingWs, '拟合信息');\n    }\n    \n    // 下载文件\n    const fileName = `原始数据预测结果_${new Date().toISOString().slice(0, 10)}.xlsx`;\n    XLSX.writeFile(workbook, fileName);\n  }, [predictionResults, bestFittingResult, rawData]);\n\n  // 获取拟合类型标签\n  const getTypeLabel = (type: string) => {\n    const labels: { [key: string]: string } = {\n      'logarithmic': '对数拟合',\n      'exponential': '指数拟合',\n      'polynomial': '三次多项式拟合',\n      'power': '幂函数拟合',\n      'bivariate': '二次多项式拟合'\n    };\n    return labels[type] || type;\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      <h3 className=\"text-lg font-semibold mb-6\">原始数据预测</h3>\n      \n      {/* 文件上传区域 */}\n      <div className=\"mb-6\">\n        <h4 className=\"font-medium mb-3\">上传原始数据文件 (Sheet3)</h4>\n        <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\n          <input\n            type=\"file\"\n            accept=\".xlsx,.xls\"\n            onChange={handleFileUpload}\n            className=\"hidden\"\n            id=\"raw-file-upload\"\n          />\n          <label\n            htmlFor=\"raw-file-upload\"\n            className=\"cursor-pointer inline-flex items-center px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\"\n          >\n            选择Excel文件\n          </label>\n          <p className=\"mt-2 text-sm text-gray-500\">\n            请选择包含Sheet3工作表的Excel文件，原始数据应位于A2-AF21范围\n          </p>\n        </div>\n      </div>\n\n      {/* 加载状态 */}\n      {isLoading && (\n        <div className=\"mb-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n          <p className=\"text-blue-700\">正在读取文件...</p>\n        </div>\n      )}\n\n      {/* 错误信息 */}\n      {error && (\n        <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <p className=\"text-red-700\">{error}</p>\n        </div>\n      )}\n\n      {/* 原始数据概览 */}\n      {rawData && (\n        <div className=\"mb-6 p-4 bg-gray-50 rounded-lg\">\n          <h4 className=\"font-medium mb-2\">原始数据概览</h4>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">矩阵维度:</span>\n              <span className=\"ml-2 font-medium\">{rawData.matrix.length} × {rawData.matrix[0]?.length || 0}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">数值范围:</span>\n              <span className=\"ml-2 font-medium\">\n                {Math.min(...rawData.matrix.flat()).toFixed(2)} - {Math.max(...rawData.matrix.flat()).toFixed(2)}\n              </span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 生成预测按钮 */}\n      {rawData && grayScaleData.values.length > 0 && brightnessBlocks.length > 0 && (\n        <div className=\"mb-6\">\n          <button\n            onClick={generatePredictions}\n            className=\"px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\"\n          >\n            生成预测结果\n          </button>\n        </div>\n      )}\n\n      {/* 最佳拟合信息 */}\n      {bestFittingResult && (\n        <div className=\"mb-6 p-4 bg-blue-50 rounded-lg\">\n          <h4 className=\"font-medium mb-2\">使用的最佳拟合模型</h4>\n          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">拟合类型：</span>\n              <span className=\"font-medium\">{getTypeLabel(bestFittingResult.type)}</span>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">R²值：</span>\n              <span className=\"font-medium\">{bestFittingResult.rSquared.toFixed(6)}</span>\n            </div>\n            <div className=\"col-span-2\">\n              <span className=\"text-gray-600\">拟合公式：</span>\n              <span className=\"font-medium font-mono\">{bestFittingResult.formula}</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 原始数据热力图 */}\n      {rawData && (\n        <div className=\"mb-6\">\n          <h4 className=\"font-medium mb-3\">原始数据热力图</h4>\n          \n          {/* 颜色图例 */}\n          <div className=\"mb-3 flex items-center gap-4\">\n            <span className=\"text-sm text-gray-600\">颜色图例:</span>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-4 h-4 bg-blue-900 border border-gray-300\"></div>\n              <span className=\"text-xs text-gray-600\">高值</span>\n              <div className=\"w-20 h-4 bg-gradient-to-r from-blue-900 via-blue-400 to-blue-100 border border-gray-300\"></div>\n              <div className=\"w-4 h-4 bg-blue-100 border border-gray-300\"></div>\n              <span className=\"text-xs text-gray-600\">低值</span>\n            </div>\n            <div className=\"text-xs text-gray-500\">\n              范围: {Math.min(...rawData.matrix.flat()).toFixed(2)} - {Math.max(...rawData.matrix.flat()).toFixed(2)}\n            </div>\n          </div>\n          \n          <div className=\"bg-white p-4 rounded-lg border border-gray-200 overflow-x-auto\">\n            <div className=\"grid gap-0.5\" style={{ gridTemplateColumns: `repeat(${rawData.matrix[0]?.length || 32}, minmax(24px, 1fr))` }}>\n              {rawData.matrix.map((row, rowIndex) =>\n                row.map((value, colIndex) => {\n                  const minValue = Math.min(...rawData.matrix.flat());\n                  const maxValue = Math.max(...rawData.matrix.flat());\n                  const normalizedValue = (value - minValue) / (maxValue - minValue);\n                  \n                  // 使用蓝色渐变色彩映射\n                  const blueIntensity = Math.round(normalizedValue * 200 + 55); // 55-255范围\n                  const backgroundColor = `rgb(${255 - blueIntensity}, ${255 - blueIntensity}, 255)`;\n                  \n                  // 根据背景色调整文字颜色\n                  const textColor = normalizedValue > 0.5 ? 'white' : 'black';\n                  \n                  return (\n                    <div\n                      key={`${rowIndex}-${colIndex}`}\n                      className=\"aspect-square border border-gray-200 cursor-pointer hover:border-blue-600 hover:border-2 transition-all duration-200 flex items-center justify-center text-xs font-medium hover:shadow-md\"\n                      style={{ backgroundColor, color: textColor }}\n                      onMouseEnter={() => setHoveredCell({ row: rowIndex, col: colIndex })}\n                      onMouseLeave={() => setHoveredCell(null)}\n                      onDoubleClick={() => handleDoubleClick(rowIndex, colIndex)}\n                      title={`位置: ${numToCol(colIndex + 1)}${rowIndex + 2}, 值: ${value.toFixed(2)}`}\n                    >\n                      {value.toFixed(1)}\n                    </div>\n                  );\n                })\n              )}\n            </div>\n          </div>\n          {/* 悬停拟合结果卡片 */}\n          {hoveredCell && (\n            <div className=\"mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n              <h5 className=\"font-medium mb-2\">位置 {numToCol(hoveredCell.col + 1)}{hoveredCell.row + 2} 拟合结果</h5>\n              {(() => {\n                const cellPrediction = predictionResults.find(result => {\n                  const position = result.position;\n                  const expectedPosition = `${numToCol(hoveredCell.col + 1)}${hoveredCell.row + 2}`;\n                  return position === expectedPosition;\n                });\n                \n                if (!cellPrediction) {\n                  return <p className=\"text-gray-500\">该位置暂无拟合结果</p>;\n                }\n                \n                // 找到最佳拟合方法（置信度最高的）\n                const predictions = Object.entries(cellPrediction.predictions);\n                if (predictions.length === 0) {\n                  return <p className=\"text-gray-500\">该位置暂无有效拟合结果</p>;\n                }\n                \n                const bestMethod = predictions.reduce((best, current) => {\n                  const [, bestPred] = best;\n                  const [, currentPred] = current;\n                  return currentPred.confidence > bestPred.confidence ? current : best;\n                });\n                \n                const [bestMethodType, bestPrediction] = bestMethod;\n                \n                return (\n                  <div className=\"space-y-2\">\n                    <div className=\"text-sm\">\n                      <span className=\"text-gray-600\">亮度值:</span>\n                      <span className=\"ml-2 font-medium\">{cellPrediction.brightnessValue.toFixed(2)}</span>\n                    </div>\n                    <div className=\"text-sm\">\n                      <span className=\"text-gray-600\">最佳拟合:</span>\n                      <span className=\"ml-2 font-medium\">{getTypeLabel(bestMethodType)}</span>\n                    </div>\n                    <div className=\"text-sm\">\n                      <span className=\"text-gray-600\">预测灰阶值:</span>\n                      <span className=\"ml-2 font-medium\">{bestPrediction.predictedGrayScale.toFixed(6)}</span>\n                    </div>\n                    <div className=\"text-sm\">\n                      <span className=\"text-gray-600\">置信度(R²):</span>\n                      <span className=\"ml-2 font-medium\">{bestPrediction.confidence.toFixed(6)}</span>\n                    </div>\n                    <div className=\"text-sm\">\n                      <span className=\"text-gray-600\">拟合公式:</span>\n                      <span className=\"ml-2 font-mono text-xs\">{bestPrediction.formula}</span>\n                    </div>\n                  </div>\n                );\n              })()}\n            </div>\n          )}\n          \n          {/* 双击拟合结果卡片 */}\n          {doubleClickedCell && (\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n              <div className=\"bg-white rounded-lg p-6 max-w-2xl w-full mx-4 max-h-[80vh] overflow-y-auto\">\n                <div className=\"flex justify-between items-center mb-4\">\n                  <h5 className=\"text-lg font-semibold\">位置 {numToCol(doubleClickedCell.col + 1)}{doubleClickedCell.row + 2} 详细拟合结果</h5>\n                  <button\n                    onClick={handleCloseDoubleClickCard}\n                    className=\"text-gray-500 hover:text-gray-700 text-xl font-bold\"\n                  >\n                    ×\n                  </button>\n                </div>\n                {(() => {\n                  const cellPrediction = predictionResults.find(result => {\n                    const position = result.position;\n                    const expectedPosition = `${numToCol(doubleClickedCell.col + 1)}${doubleClickedCell.row + 2}`;\n                    return position === expectedPosition;\n                  });\n                  \n                  if (!cellPrediction) {\n                    return <p className=\"text-gray-500\">该位置暂无拟合结果</p>;\n                  }\n                  \n                  const predictions = Object.entries(cellPrediction.predictions);\n                  if (predictions.length === 0) {\n                    return <p className=\"text-gray-500\">该位置暂无有效拟合结果</p>;\n                  }\n                  \n                  return (\n                    <div className=\"space-y-4\">\n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\n                        <div className=\"text-sm mb-2\">\n                          <span className=\"text-gray-600\">亮度值:</span>\n                          <span className=\"ml-2 font-medium\">{cellPrediction.brightnessValue.toFixed(2)}</span>\n                        </div>\n                      </div>\n                      \n                      <div className=\"space-y-3\">\n                        <h6 className=\"font-medium text-gray-700\">所有拟合方法预测结果:</h6>\n                        {predictions.map(([method, prediction]) => (\n                          <div key={method} className=\"bg-blue-50 p-4 rounded-lg border border-blue-200\">\n                            <div className=\"flex justify-between items-center mb-2\">\n                              <span className=\"font-medium text-gray-700\">\n                                {getTypeLabel(method)}\n                              </span>\n                              <span className=\"text-lg font-bold text-blue-600\">\n                                {prediction.predictedGrayScale.toFixed(6)}\n                              </span>\n                            </div>\n                            <div className=\"text-sm text-gray-600 mb-2\">\n                              置信度(R²): <span className=\"font-medium\">{(prediction.confidence * 100).toFixed(2)}%</span>\n                            </div>\n                            <div className=\"text-sm text-gray-500 font-mono bg-white p-2 rounded border\">\n                              {prediction.formula}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  );\n                })()}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* 预测结果 */}\n      {predictionResults.length > 0 && (\n        <div className=\"mb-6\">\n          <div className=\"flex justify-between items-center mb-3\">\n            <h4 className=\"font-medium\">预测结果</h4>\n            <button\n              onClick={exportToExcel}\n              className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm\"\n            >\n              导出到Excel\n            </button>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n            {predictionResults.map((result, index) => (\n              <div key={index} className=\"bg-gradient-to-br from-blue-50 to-indigo-100 p-4 rounded-lg border border-blue-200 hover:shadow-md transition-shadow\">\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"text-sm font-medium text-gray-600\">位置: {result.position}</span>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"text-sm text-gray-600\">亮度值:</span>\n                    <span className=\"text-sm font-medium\">{result.brightnessValue.toFixed(2)}</span>\n                  </div>\n                  \n                  {/* 显示所有拟合方法的预测结果 */}\n                  <div className=\"mt-3 pt-2 border-t border-blue-200\">\n                    <div className=\"text-xs font-medium text-gray-700 mb-2\">各拟合方法预测值:</div>\n                    <div className=\"space-y-2\">\n                      {Object.entries(result.predictions).map(([method, prediction]) => (\n                        <div key={method} className=\"bg-white rounded p-2 border\">\n                          <div className=\"flex justify-between items-center mb-1\">\n                            <span className=\"text-xs font-medium text-gray-600\">\n                              {getTypeLabel(method)}\n                            </span>\n                            <span className=\"text-xs text-blue-600 font-medium\">\n                              {prediction.predictedGrayScale.toFixed(4)}\n                            </span>\n                          </div>\n                          <div className=\"text-xs text-gray-500 mb-1\">\n                            置信度: {(prediction.confidence * 100).toFixed(1)}%\n                          </div>\n                          <div className=\"text-xs text-gray-400 break-all font-mono\">\n                            {prediction.formula}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n          \n          {/* 统计信息 */}\n          <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n            <h5 className=\"font-medium mb-2\">预测统计</h5>\n            <div className=\"grid grid-cols-3 gap-4 text-sm\">\n              <div>\n                <span className=\"text-gray-600\">预测数据点：</span>\n                <span className=\"font-medium\">{predictionResults.length}</span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">拟合方法数：</span>\n                <span className=\"font-medium\">\n                  {predictionResults.length > 0 ? Object.keys(predictionResults[0].predictions).length : 0}\n                </span>\n              </div>\n              <div>\n                <span className=\"text-gray-600\">最佳拟合：</span>\n                <span className=\"font-medium\">\n                  {bestFittingResult ? getTypeLabel(bestFittingResult.type) : 'N/A'}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 使用说明 */}\n      {!rawData && (\n        <div className=\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n          <h4 className=\"font-medium mb-2 text-yellow-800\">使用说明</h4>\n          <ul className=\"text-sm text-yellow-700 space-y-1\">\n            <li>1. 首先确保已上传并处理了原始数据文件</li>\n            <li>2. 上传包含Sheet3工作表的Excel文件，目标数据应位于B列</li>\n            <li>3. 系统将自动选择最佳拟合模型进行预测</li>\n            <li>4. 生成预测结果后可导出到Excel文件</li>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TargetDataPrediction;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}